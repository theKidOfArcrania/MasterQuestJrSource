%BoostAttack and BoostDefense increased up to +9 and -9
/%Usage
Original function calls will be unaffected by the new code that doesn't use the table

Call    BoostDefense ( .Actor:Player 000002FE ) %-2 def
%upper 16 bits are unused in arg 2, 3rd byte is arrow type (01 for atk, 02 for def)
%last byte value to increase by (s8) so negative numbers work too

Call    BoostAttack     ( .Actor:Player 00000109 ) %+9 atk
%upper 16 bits unused, 3rd byte is arrow type 01 (01 for atk), value to increase by is 9
%/

%arrow types:
%00 - use original table
%01 - red arrow (up/down)
%02 - blue arrow (up)

#new:Data $OriginalValue
{
	00000000
}

#new:Data $BackupValue
{
	00000000
}
@Hook 19E630 %[8026FD50] BoostAttack Hook
{
	ADDIU a0, r0, 0008 %in original hook
	SW s0, 0074 (s2)   %in original hook
	SAW s1, $OriginalValue %put into storage
	SLL t0, s1, 18		%byte passed to effect call
	SRA t0, t0, 18
	JAL 8024E40C		%wrapper to use_cam_preset
	SW t0, 0078 (s2)
	J 8026FD60
	NOP
}

@Hook 19EAD0 %[80270180] BoostDefense Hook
{
	ADDIU a0, r0, 0008
	SW s0, 0074 (s2)
	SAW s1, $OriginalValue
	SLL t0, s1, 18
	SRA t0, t0, 18
	JAL	8024E40C
	SW t0, 0078 (s2)
	J 80270200
	NOP
}

@Function 3AEEE8 %[E00AC0C8] yes this is the RAM address...it's in kseg3 memory region
{
SAW s1, $BackupValue
LAW s1, $OriginalValue
LIO at, $VanillaArrowCode
JR at
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
}


#new:Function $VanillaArrowCode
{
 ANDI v0, s1, 0700 %01, 02, 04
 SRL v0, v0, 8
 BEQ v0, r0, .originaltable
 NOP
 .noTable
 XORI t0, v0, 0001 %if 01, (BoostAttack)
 BEQ t0, r0, .isBoostAttack
 NOP
 XORI t0, v0, 0002 %if 02, (BoostDefense)
 BEQ t0, r0, .isBoostDefense
 NOP
 .originaltable %original code
 LAW s1, $BackupValue
 SLL            V0, S1, 3
 ADDU           V0, V0, V1
 SW             R0, 0028 (A0)
 SW             R0, 002C (A0)
 SW             R0, 0030 (A0)
 SW             R0, 0038 (A0)
 SW             R0, 0034 (A0)
 SWC1           F0, 0010 (A0)
 LW             V1, 0000 (V0)
 SW             V1, 001C (A0)
 LW             V1, 0004 (V0)
 DADDU          V0, S0, R0
 SW             V1, 0020 (A0)
 .end
 SAW r0, $BackupValue
 SAW r0, $OriginalValue
 LW             RA, 0030 (SP)
 LW             S1, 002C (SP)
 LW             S0, 0028 (SP)
 LDC1           F24, 0048 (SP)
 LDC1           F22, 0040 (SP)
 LDC1           F20, 0038 (SP)
 LIO at, E00AC114
 JR at
 NOP
 .isBoostAttack
 SLL t1, s1, 18
 SRA t1, t1, 18 %cast to signed byte
 ORI t0, r0, 0000
 BLTZL t1, .useDownAtkArrow
 ADDIU t0, t0, 0001
 .useDownAtkArrow
 BEQ r0, r0, .afterNoTable
 NOP
%
.isBoostDefense
 BEQ r0, r0, .afterNoTable
 ORI t0, r0, 0002
%
.afterNoTable
 SLL t1, s1, 18
 SRA t1, t1, 18
 SW  t0, 001C (A0) %arrow type
 SW  t1, 0020 (A0) %damage value
 SW             R0, 0028 (A0)
 SW             R0, 002C (A0)
 SW             R0, 0030 (A0)
 SW             R0, 0038 (A0)
 SW             R0, 0034 (A0)
 SWC1           F0, 0010 (A0)
 BEQ r0, r0, .end
 DADDU          V0, S0, R0
}

#export $OriginalValue