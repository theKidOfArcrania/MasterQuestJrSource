% Automatically dumped from section 18

#new:Actor $PinkzeeDayzee
{
% stats
[Index]        E0b 
[Level]        19`b 
[MaxHP]         12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D7AC_18 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_8021D858_18 
[Script]      $Script_Init_8021D8F0_18 
% move effectiveness
[Escape]       50`b 
[Item]        100`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  34`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -14`b  17`b % dx dy
[StatusIcon]    9`b  25`b % dx dy
}

#new:DefenseTable $DefenseTable_8021D7A0_18
{
.Element:Normal   00000000
.Element:Fire     FFFFFFFE
.Element:End
}

#new:StatusTable $StatusTable_8021D7AC_18
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      25`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear    0`
.Status:Static     50`
.Status:Paralyze   40`
.Status:Shrink     30`
.Status:Stop       70`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -3`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021D858_18
{
00800000 01000000 FE1E00FF $IdleAnimations_8021D8A4_18 $DefenseTable_8021D7A0_18 00000000 00000000 00F80000 00000000 
}

#new:IdleAnimations $IdleAnimations_8021D8A4_18
{
.Status:Normal    00480501
.Status:Stone     00480500
.Status:Sleep     0048050C
.Status:Poison    00480501
.Status:Stop      00480500
.Status:Static    00480501
.Status:Paralyze  00480500
.Status:Dizzy     0048050B
.Status:Fear  0048050B
.Status:End
}

#new:Script $Script_Init_8021D8F0_18
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021E7BC_18 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021D93C_18 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D988_18 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021D93C_18
{
    0:  Return
    8:  End
}

#new:Script $Script_8021D94C_18
{
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  00480503 
   20:  ExecWait DoReturnHome 
   2C:  Return
   34:  End
}

#new:Script $Script_HandleEvent_8021D988_18
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	CaseOR  ==  .Event:HitCombo
   40:  	CaseOR  ==  .Event:Hit
   4C:  		SetConst  *Var[0]  00000001 
   5C:  		SetConst  *Var[1]  00480508 
   6C:  		ExecWait DoNormalHit 
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  00480509 
   AC:  		SetConst  *Var[2]  0048050A 
   BC:  		ExecWait DoBurnHit 
   C8:  	Case  ==  .Event:BurnDeath
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  00480509 
   F4:  		SetConst  *Var[2]  0048050A 
  104:  		ExecWait DoBurnHit 
  110:  		SetConst  *Var[0]  00000001 
  120:  		SetConst  *Var[1]  0048050A 
  130:  		ExecWait DoDeath 
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit
  150:  		SetConst  *Var[0]  00000001 
  160:  		SetConst  *Var[1]  00480508 
  170:  		ExecWait 8029B998 
  17C:  	Case  ==  .Event:SpinSmashDeath
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  00480508 
  1A8:  		ExecWait 8029B998 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  00480508 
  1D4:  		ExecWait DoDeath 
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  00480508 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00480508 
  240:  		ExecWait 8029BD70 
  24C:  		ExecWait $Script_8021D94C_18 
  258:  	Case  ==  .Event:ShockDeath
  264:  		SetConst  *Var[0]  00000001 
  274:  		SetConst  *Var[1]  00480508 
  284:  		ExecWait DoShockHit 
  290:  		SetConst  *Var[0]  00000001 
  2A0:  		SetConst  *Var[1]  00480508 
  2B0:  		ExecWait DoDeath 
  2BC:  		Return
  2C4:  	CaseOR  ==  00000017
  2D0:  	CaseOR  ==  .Event:Immune
  2DC:  	CaseOR  ==  .Event:AirLiftFailed
  2E8:  		SetConst  *Var[0]  00000001 
  2F8:  		SetConst  *Var[1]  00480501 
  308:  		ExecWait DoImmune 
  314:  	EndCaseGroup
  31C:  	Case  ==  .Event:Death
  328:  		SetConst  *Var[0]  00000001 
  338:  		SetConst  *Var[1]  00480508 
  348:  		ExecWait DoNormalHit 
  354:  		Wait     0000000A 
  360:  		SetConst  *Var[0]  00000001 
  370:  		SetConst  *Var[1]  00480508 
  380:  		ExecWait DoDeath 
  38C:  		Return
  394:  	Case  ==  .Event:RecoverStatus
  3A0:  		SetConst  *Var[0]  00000001 
  3B0:  		SetConst  *Var[1]  00480501 
  3C0:  		ExecWait DoRecover 
  3CC:  	Case  ==  .Event:ScareAway
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00480504 
  3F8:  		SetConst  *Var[2]  00480508 
  408:  		ExecWait DoScareAway 
  414:  		Return
  41C:  	Case  ==  .Event:BeginAirLift
  428:  		SetConst  *Var[0]  00000001 
  438:  		SetConst  *Var[1]  00480504 
  448:  		ExecWait DoAirLift 
  454:  	Case  ==  .Event:BlowAway
  460:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  474:  		If  *Var[0]  !&  0035D000 
  484:  			If  *Var[0]  &  00080000 
  494:  				Call     SetActorDispOffset ( FFFFFF81 00000000 00000001 00000000 )
  4B0:  			Else
  4B8:  				Call     SetActorDispOffset ( FFFFFF81 00000000 00000003 00000000 )
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  		SetConst  *Var[0]  00000001 
  4F4:  		SetConst  *Var[1]  00480508 
  504:  		ExecWait DoBlowAway 
  510:  		Return
  518:  	Default
  520:  EndSwitch
  528:  Call     UseIdleAnimation 	( .Actor:Self .True )
  53C:  Return
  544:  End
}

#new:Script $Script_Crazee_Sing_18
{
     Call     UseIdleAnimation 	( .Actor:Self .False )
     Call     SetTargetActor ( .Actor:Self .Actor:Player )
     Call     GetBattlePhase ( *Var[0] )
     If  *Var[0]  ==  .Phase:FirstStrike
    	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
    	Call     SetActorPos 	( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
     Else
     	Call     UseBattleCamPreset 	( 0000003F )
     	Call     BattleCamTargetActor ( .Actor:Self )
   	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
     	Call     MoveBattleCamOver 	( 00000046 )
     	Set  *Flag[00]  00000000 
	EndIf
     	Label    00000000 
		/%
   	If  *Flag[00]  ==  00000000 
     		Call     SetAnimation 	( .Actor:Self 00000001 0048050E )
    		Set  *Flag[00]  00000001 
    	Else
    		Call     SetAnimation 	( .Actor:Self 00000001 0048050F )
    		Set  *Flag[00]  00000000 
    	EndIf
   	Wait     00000001 
  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
   	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   	Sub  *Var[0]  00000014 
   	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
   	If  *Var[0]  >  00000000 
    		Goto     00000000 
    	EndIf
    	If  *Flag[00]  ==  00000000 
   		Call     SetAnimation 	( .Actor:Self 00000001 0048050E )
    		Set  *Flag[00]  00000001 
    	Else
    		Call     SetAnimation 	( .Actor:Self 00000001 0048050F )
    		Set  *Flag[00]  00000000 
  	EndIf
   	Wait     00000001 
    	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
    	Call     SetGoalPos 	( .Actor:Self FFFFFFDD 00000000 0000000A )
    	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
    EndIf
    Call     SetAnimation 	( .Actor:Self 00000001 00480501 )
    Wait     0000000A 
	%/
    Thread
    	Call     SetAnimation 	( .Actor:Self 00000001 00480506 )
    	Wait     00000028 
    	Call     SetAnimation 	( .Actor:Self 00000001 00480507 )
    EndThread
    Wait     00000014 
   Call     PlaySoundAtActor 	( .Actor:Self .Sound:DayzeeSong )
    Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
    Add  *Var[1]  00000019 
    Add  *Var[2]  00000002 
    Loop     00000004 
   	Call     RandInt     	( 0000001E *Var[3] )
    	Sub  *Var[3]  0000000F 
    	Add  *Var[3]  *Var[0] 
   	Call     PlayEffect  	( ~FX:MusicNote:Left *Var[3] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    	Wait     0000000A 
    EndLoop
    Call     SetAnimation 	( .Actor:Self 00000001 00480501 )
    Wait     0000000A 
    Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
    Switch  *Var[0] 
    	CaseOR  ==  00000006 
    	CaseOR  ==  00000005 
    		Set  *Var[A]  *Var[0] 
    		If  *Var[A]  ==  00000005 
    			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
    		EndIf
   		Call     UseBattleCamPreset 	( 00000002 )
    		Wait     0000000F 
    		Call     YieldTurn ( )
    		Call     SetActorYaw 	( .Actor:Self 000000B4 )
    		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
    		ExecWait $Script_8021D94C_18 
    		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
    		Call     SetActorYaw 	( .Actor:Self 00000000 )
   		Call     UseIdleAnimation 	( .Actor:Self .True )
    		Return
    	EndCaseGroup
    EndSwitch
    Call     SetTargetActor ( .Actor:Self .Actor:Player )
    Call     SetGoalToTarget 	( .Actor:Self )
    Wait     00000002 
   Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 00000004 00000020 )
   Wait 0000001E
   %====================
   % BEGIN SPLICED CODE
   %====================
   Call    HPBarToCurrent ( .Actor:Self )
	Call     EnemyCreateTargetList 	( 00008002 )
	Call     InitTargetIterator	( )
		Label    00000001 
		Call     GetOwnerTarget 	( *Var[0] *Var[1] )
		Thread
			Wait     00000005 
			Call     PlaySoundAtActor    	( *Var[0] 0000206D )
			Call     PlaySoundAtActor    	( *Var[0] 00000214 )
			Wait     30` 
			Call     PlaySoundAtActor    	( *Var[0] 0000025C )
		EndThread
		Thread
			Call     8026BF48 	( 00000001 )
			Call     HealActor   	( *Var[0] 00000002 00000001 )
			Call     8026BF48 	( 00000000 )
		EndThread
		Call     ChooseNextTarget    	( 00000000 *Var[0] )
		If       *Var[0]  !=  FFFFFFFF
			Goto     00000001 
		EndIf
		%==================
		% END SPLICED CODE
		%==================
    		Call     UseBattleCamPreset 	( 00000002 )
    		Call     MoveBattleCamOver 	( 0000000A )
    		Wait     00000014 
    		Call     YieldTurn ( )
			ExecWait $Script_8021D94C_18 
	%==============
	% Added
	%==============
	Call     WaitForBuffDone 	( )
	Wait     1` 
	Call     UseBattleCamPreset 	( 00000002 )
	Wait     10` 
	Call     YieldTurn 	( )
	Call     EnableIdleScript 	( FFFFFF81 00000001 )
	Call     UseIdleAnimation 	( FFFFFF81 00000001 )
	%==============
	% Added
	%==============	
    Call     UseIdleAnimation 	( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Crazee_RunAway_18
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     UseBattleCamPreset 	( 00000013 )
   24:  Call     SetBattleCamZoom  	( 0000012C )
   34:  Call     SetBattleCamOffsetZ 	( 0000001E )
   44:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   60:  Sub  *Var[0]  00000014 
   70:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   88:  Call     MoveBattleCamOver 	( 0000001E )
   98:  Call     SetActorYaw 	( .Actor:Self 000000B4 )
   AC:  Call     SetAnimation 	( .Actor:Self 00000001 00480503 )
   C4:  Wait     0000000A 
   D0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
  100:  Sub  *Var[0]  00000014 
  110:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  144:  Wait     00000014 
  150:  Call     UseBattleCamPreset 	( 00000002 )
  160:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  174:  Call     SetAnimation 	( .Actor:Self 00000001 00480504 )
  18C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  1A0:  Add  *Var[0]  000000C8 
  1B0:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1E4:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  1F8:  Call     SetBattleFlagBits 	( 00040000 .True )
  20C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  220:  Call     RemoveActor 	( .Actor:Self )
  230:  Return
  238:  End
}

#new:Script $Script_TakeTurn_8021E7BC_18
{
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_Crazee_Sing_18 
   2C:  	Return
   34:  EndIf
   3C:  Call     GetActorHP  	( .Actor:Self *Var[0] )
   50:  Call     RandInt     	( 00000064 *Var[1] )
   64:  Switch  *Var[0] 
   70:  	Case  ==  00000001 
   7C:  		If  *Var[1]  <  00000050 
   8C:  			ExecWait $Script_Crazee_RunAway_18 
   98:  			Return
   A0:  		EndIf
   A8:  	Case  ==  00000002 
   B4:  		If  *Var[1]  <  00000028 
   C4:  			ExecWait $Script_Crazee_RunAway_18 
   D0:  			Return
   D8:  		EndIf
   E0:  	Case  ==  00000003 
   EC:  		If  *Var[1]  <  00000014 
   FC:  			ExecWait $Script_Crazee_RunAway_18 
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  00000004 
  124:  		If  *Var[1]  <  0000000A 
  134:  			ExecWait $Script_Crazee_RunAway_18 
  140:  			Return
  148:  		EndIf
  150:  EndSwitch
  158:  ExecWait $Script_Crazee_Sing_18 
  164:  Return
  16C:  End
}

