% A battle with Raphael
% Made by JaThePlayer 'cause MQ needs to be fancy.

% How many diffrent animations does this guy need to have? A ton is the answer.
#define .AnimRaphStop	00C40000
#define .AnimRaphIdle	00C40002
#define .AnimRaphPain	00C40009
#define .AnimRaphDizzy	00C40009 % if you have a better idea, you can change this one
#define .AnimRaphDead	00C40009 % same goes here
#define .AnimRaphSleep  00C4000A
#define .AnimRaphBurn   00C40209
#define .AnimRaphRun    00C40005
#define .AnimRaphStomp1 00C4000C % Start of stomp
#define .AnimRaphStomp2 00C4000D % Middle of stomp
#define .AnimRaphStomp3 00C4000E % FINISH HIM
#define .AnimRaphAngry  00C4000B % three for nice animation
#define .AnimRaphAngry2 00C40108
#define .AnimRaphAngry3 00C40208
% Phase 2 graphics
#define .AnimRaphStop2	00C40200
#define .AnimRaphIdle2	00C40202
#define .AnimRaphPain2	00C40209
#define .AnimRaphDizzy2	00C40209 % if you have a better idea, you can change this one
#define .AnimRaphDead2	00C40209 % same goes here
#define .AnimRaphSleep2 00C4020A
#define .AnimRaphRun2    00C40205
#define .AnimRaphStomp1B 00C4020C % Start of stomp
#define .AnimRaphStomp2B 00C4020D % Middle of stomp
#define .AnimRaphStomp3B 00C4020E % FINISH HIM

#define .Phase2StartHP 35` %55

#new:Actor $Raphael
{
% stats
[Index]         F9b % index from ActorTable.xml
[Level]         50`b 
[MaxHP]         80`b %80
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_Raphael 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_Raphael 
[Script]      $Script_Init_Raphael 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         50`b  50`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_Raphael
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_Raphael
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen     50`
.Status:Dizzy      40`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   40`
.Status:Shrink     40`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -2`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End
}

#new:StatusTable $StatusTable_RaphaelAngry
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison    0`
.Status:Frozen    0`
.Status:Dizzy      0`
.Status:Fear        0`
.Status:Static    0`
.Status:Paralyze  0`
.Status:Shrink    0`
.Status:Stop      0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -1`
.Status:ParalyzeTurnMod  -2`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_Raphael
{
00800000 01000000 002800FF $IdleAnimations_Raphael $DefenseTable_Raphael 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_Raphael
{
.Status:Normal    .AnimRaphIdle
.Status:Stone     .AnimRaphStop
.Status:Sleep     .AnimRaphSleep
.Status:Poison    .AnimRaphIdle
.Status:Stop      .AnimRaphStop
.Status:Static    .AnimRaphIdle
.Status:Paralyze  .AnimRaphStop
.Status:Dizzy     .AnimRaphDizzy
.Status:Fear      .AnimRaphDizzy
.Status:End
}

#new:IdleAnimations $IdleAnimations_RaphaelAngry
{
.Status:Normal    .AnimRaphIdle2
.Status:Stone     .AnimRaphStop2
.Status:Sleep     .AnimRaphSleep2
.Status:Poison    .AnimRaphIdle2
.Status:Stop      .AnimRaphStop2
.Status:Static    .AnimRaphIdle2
.Status:Paralyze  .AnimRaphStop2
.Status:Dizzy     .AnimRaphDizzy2
.Status:Fear      .AnimRaphDizzy2
.Status:End
}

#new:Script $Script_Init_Raphael
{
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Raphael )
	Call     BindIdle    	( .Actor:Self $Script_Idle_Raphael )
    Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_Raphael )
	Call 	 SetActorVar	( .Actor:Self 00000001 00000000 ) % current phase: 0 - normal, 1 - AngryPermament, 2 - AngryTemporary
    Return
    End
}

#new:Script $Script_Idle_Raphael
{
  Return
  End
}

#new:Script $Script_HandleEvent_Raphael
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  .AnimRaphPain 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  .AnimRaphBurn 
   DC:  		SetConst  *Var[2]  .AnimRaphBurn 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  .AnimRaphBurn 
  124:  		SetConst  *Var[2]  .AnimRaphBurn 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  .AnimRaphBurn 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  .AnimRaphPain 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:SpinSmashDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  .AnimRaphPain 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  .AnimRaphDead 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  .AnimRaphPain 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  .AnimRaphPain 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphDizzy )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle )
  344:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  .AnimRaphPain 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  .AnimRaphDead 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  .AnimRaphIdle 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  .AnimRaphPain 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  .AnimRaphDead 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphRun )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  .AnimRaphIdle 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  .AnimRaphRun 
  5C4:  		SetConst  *Var[2]  .AnimRaphPain 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  .AnimRaphRun 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  .AnimRaphPain 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}
  
#new:Script $Script_HandleEvent_RaphaelAngry
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  .AnimRaphPain2 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  .AnimRaphBurn
   DC:  		SetConst  *Var[2]  .AnimRaphBurn
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  .AnimRaphBurn 
  124:  		SetConst  *Var[2]  .AnimRaphBurn 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  .AnimRaphBurn 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  .AnimRaphPain2 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:SpinSmashDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  .AnimRaphPain2 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  .AnimRaphDead2 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  .AnimRaphPain2 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  .AnimRaphPain2 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphDizzy2 )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle2 )
  344:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  .AnimRaphPain2 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  .AnimRaphDead2 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  .AnimRaphIdle2 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  .AnimRaphPain2
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  .AnimRaphDead2 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphRun2 )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  .AnimRaphIdle2 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  .AnimRaphRun2 
  5C4:  		SetConst  *Var[2]  .AnimRaphPain2
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  .AnimRaphRun2 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  .AnimRaphPain2 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle2 )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:Script $Script_GetAngry
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
    Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphAngry )
	Wait 18`
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphAngry2 )
	Wait 8`
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphAngry3 )
	Call     SetStatusTable 	( .Actor:Self $StatusTable_RaphaelAngry )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_RaphaelAngry )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_RaphaelAngry )
	Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle2 )
	Call     UseIdleAnimation 	( .Actor:Self .True ) 
    Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Return
	End
}

#new:Script $Script_TakeTurn_Raphael
{
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[9] ) % What move did I just use?
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[4] ) % Is phase 2 active?
	Call     GetActorHP  	( .Actor:Self *Var[5] ) % current hp - var[5]
		If *Var[4] == 00000000
		If *Var[5] <= .Phase2StartHP % Start phase 2
			ExecWait $Script_GetAngry 
			Call 	 SetActorVar	( .Actor:Self 00000001 00000001 ) % Now he's in phase 2
		EndIf
		EndIf
		Call     GetActorVar 	( .Actor:Self 00000001 *Var[4] ) % Which phase is he in again?
		Switch *Var[4] 
		Case == 00000000 % phase 1
			Call     GetPlayerHP 	( *Var[0] ) % If player's in danger/peril, always stomp
		If       *Var[0] <=  00000005 
			ExecWait $Script_Stomp
		Else
			If *Var[9] == 0`
				ExecWait $Script_RavenAttack
				Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
			Else
				ExecWait $Script_Stomp
				Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
			EndIf
		EndIf
		Case == 00000001 % phase 2
		Call     GetPlayerHP 	( *Var[0] ) % If player's in danger/peril, always stomp
		If       *Var[0] <=  00000005 
			ExecWait $Script_StompAngry
		Else
			If *Var[9] == 0`
				ExecWait $Script_RavenAttack
				Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
			Else
				ExecWait $Script_StompAngry
				Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
			EndIf
		EndIf
		Case == 00000002 % temporary anger
		Call     GetPlayerHP 	( *Var[0] ) % If player's in danger/peril, always stomp
		If       *Var[0] <=  00000005 
			ExecWait $Script_StompAngry
		Else
			If *Var[9] == 0`
				ExecWait $Script_RavenAttack
				Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
			Else
				ExecWait $Script_StompAngry
				Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
			EndIf
		EndIf
			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphAngry3 ) % return to normal
			Wait 18`
			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphAngry2 )
			Wait 8`
			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphAngry )
			Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_Raphael )
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_Raphael )
			Call     SetStatusTable ( .Actor:Self $StatusTable_Raphael )
			Call 	 SetActorVar	( .Actor:Self 00000001 00000000 ) % return to normal
		EndSwitch
	Return
    End
}

#new:Vector3D $RavenPos
{
-300` 300` 0` 
}

#new:SpecialFormation $RavenFormation
{
$SkyRaven	  $RavenPos 00000009 00000000 00000000 00000000 00000000 
}

#new:Script $Script_RavenAttack	
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
    Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[4] ) % Is phase 2 active?
	If *Var[4] == 00000000
		Call     SetAnimation 		( .Actor:Self 00000001 .AnimRaphStomp1 )
		Wait 8`
		Call     SetAnimation 		( .Actor:Self 00000001 .AnimRaphStomp2 )
		Wait 8`
		Call     SetAnimation 		( .Actor:Self 00000001 .AnimRaphStomp3 )
	Else
		Call     SetAnimation 		( .Actor:Self 00000001 .AnimRaphStomp1B )
		Wait 8`
		Call     SetAnimation 		( .Actor:Self 00000001 .AnimRaphStomp2B )
		Wait 8`
		Call     SetAnimation 		( .Actor:Self 00000001 .AnimRaphStomp3B )
	EndIf
	Wait 6`
	Call     RandInt     	( 00000003 *Var[7] )
	Loop 4`
	Call     SummonEnemy		( $RavenFormation 00000000 )
	Call     UseIdleAnimation 	( *Var[0] .False )
    Call     EnableIdleScript 	( *Var[0] 00000000 )
	Call     SetAnimation 		( *Var[0] 00000001 00980000 )
	% Fall onto Mario/Partner
	Switch *Var[7]
	Case == 00000000
	Goto  00000008
	Case == 00000001
	Goto  00000007
	Case == 00000002
	Goto  00000007
	Case == 00000003
	Goto  00000007
	EndSwitch
	Label 00000008
		Call     SetTargetActor ( *Var[0] .Actor:Partner )
		If *Var[4] == 00000000
			Set *Var[6] 00000001 % damage dealt to partner in p1
		Else
			Set *Var[6] 00000002 % damage dealt to partner in p2
		EndIf
	Goto  00000006
	Label 00000007
		Call     SetTargetActor ( *Var[0] .Actor:Player )
		If *Var[4] == 00000000
			Set *Var[6] 00000006 % damage dealt to player in p1
		Else
			Set *Var[6] 00000008 % damage dealt to player in p2
		EndIf
	Label 00000006
	Call     SetGoalToTarget 	( *Var[0] )
	Call     SetActorSpeed    ( *Var[0] *Fixed[4.0] )
	Call     SetAnimation 		( *Var[0] 00000001 00980000 )
  Call     PlaySoundAtNpc   ( *Var[0] 0000020D 00000000 )
	Call     JumpToGoal      	( *Var[0] 00000014 00000000 00000001 00000000 )
	Wait 	 2`
	Call	EnemyTestTarget ( .Actor:Self  *Var[5] 00000000 00000000 00000001 00000010 )
	Switch  *Var[5] 
    	CaseOR  ==  00000006 
    	CaseOR  ==  00000005 % lucky, transparent
		Goto 00000001
	EndSwitch
		Call     EnemyDamageTarget     ( *Var[0] *Var[8] 10000000 00000000 00000000 *Var[6] 00000020 )	
	Wait     1`
	% Go off-screen
	Label 00000001
	Call     SetAnimation 		( *Var[0] 00000001 00980006 )
	Call     SetGoalPos		( *Var[0] -300` 0` 0` )
	Call     SetActorJumpGravity 	( *Var[0] *Fixed[1.0] )
	Call     JumpToGoal    		( *Var[0] 00000014 00000000 00000001 00000000 )
	Wait     4
	Call     RemoveActor 	( *Var[0] )	
	If *Var[7] < 00000003
		Add  *Var[7]  00000001
	Else
		Set *Var[7] 00000000
	EndIf
	EndLoop
	Call     UseIdleAnimation 	( .Actor:Self .True )
    Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Return
	End
}

% Raven data
#new:Actor $SkyRaven
{
% stats
[Index]         7b % No need for a index, since they don't stay in battle
[Level]         5`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_Raphael % Reused since it's not important
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_Rv 
[Script]      $Script_Init_Rv 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         20`b  20`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:PartsTable $PartsTable_Rv
{
00800000 01000000 001400FF $IdleAnimations_Raven $DefenseTable_Raphael 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_Raven
{
.Status:Normal    00980000
.Status:Stone     00980000
.Status:Sleep     00980000
.Status:Poison    00980000
.Status:Stop      00980000
.Status:Static    00980000
.Status:Paralyze  00980000
.Status:Dizzy     00980000
.Status:Fear      00980000
.Status:End
}

#new:Script $Script_Init_Rv
{
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Raphael )
	Call     BindIdle    	( .Actor:Self $Script_Idle_Raphael )
    Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_Raphael )
    Return
    End
}

#new:Script $Script_Stomp % Copied from RogueYoshi.bpat
{
    Call     SetActorVar 	( .Actor:Self 00000002 00000000 ) %lets do this first
	Call     UseIdleAnimation 	( .Actor:Self .False ) % run to player
    Call     EnableIdleScript 	( .Actor:Self 00000000 )
    Call     SetTargetActor ( .Actor:Self .Actor:Player )
    Call     UseBattleCamPreset 	( 0000003F )
    Call     BattleCamTargetActor ( .Actor:Self )
    Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
    Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphRun )
    Call     SetGoalToTarget 	( .Actor:Self )
    Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
    Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
    Call     RunToGoal   	( .Actor:Self 00000000 .False )
    Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle )
    Call     SetActorDispOffset ( FFFFFF81 00000000 FFFFFFFF 00000000 )
    Wait     00000001 
    Call     SetActorDispOffset ( FFFFFF81 00000000 FFFFFFFE 00000000 )
    Wait     00000005 
    Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
    Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle )
	Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
   Switch  *Var[0] 
    	CaseOR  ==  00000006 
    	CaseOR  ==  00000005 
		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp1 )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp2 )
  3D0:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  414:  		Call     SetActorDispOffset ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  458:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphPain )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp3 )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp3 )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphDizzy )
  658:  		Wait     00000005 
  664:  		Call     UseBattleCamPreset 	( 00000002 )
  674:  		Call     YieldTurn ( )
  680:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle )
  754:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
				Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphRun )
				Call     SetGoalToHome 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
				ExecWait $Script_GetAngry
				Thread
				Call	8026BF48 ( 00000001 )
				Call	BoostAttack  ( .Actor:Self 00000001 )
				Call	8026BF48 ( 00000000 )
				EndThread
				Call SetActorVar	( .Actor:Self 00000001 00000002 ) % temporary anger
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  Loop 2
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
				Call    		SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp1 )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp2 )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp3 )
  970:  		Wait     00000001 
  998:  		Wait     00000001 
				Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000005 00000020 )
  EndLoop
  9A4:  EndSwitch
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseBattleCamPreset 	( 00000002 )
  A24:  		Wait     00000001 
  A4C:  		Wait     00000001  
	%			Wait     0000000B	second stomp, untested
	%			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp2 )				
	%			Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	%			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp3 )
	%			Wait     7` 
	%			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 0000000A 00000020 )
	%	Call     UseBattleCamPreset 	( 00000002 )
  	%	Wait     00000002  
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle )
  BE4:  		Wait     00000003 
  BF0:  		Call     YieldTurn ( )
  BFC:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphRun )
    		Call     SetGoalToHome 	( .Actor:Self )
    		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
    		Call     RunToGoal   	( .Actor:Self 00000000 .False )
    		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
    	EndCaseGroup
    EndSwitch
    Call     EnableIdleScript 	( .Actor:Self 00000001 )
    Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}
	
#new:Script $Script_StompAngry % Copied from RogueYoshi.bpat
{
	Call     UseIdleAnimation 	( .Actor:Self .False ) % run to player
    Call     EnableIdleScript 	( .Actor:Self 00000000 )
    Call     SetTargetActor ( .Actor:Self .Actor:Player )
    Call     UseBattleCamPreset 	( 0000003F )
    Call     BattleCamTargetActor ( .Actor:Self )
    Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
    Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphRun2 )
    Call     SetGoalToTarget 	( .Actor:Self )
    Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
    Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
    Call     RunToGoal   	( .Actor:Self 00000000 .False )
    Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle2 )
    Call     SetActorDispOffset ( FFFFFF81 00000000 FFFFFFFF 00000000 )
    Wait     00000001 
    Call     SetActorDispOffset ( FFFFFF81 00000000 FFFFFFFE 00000000 )
    Wait     00000005 
    Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
    Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle2 )
	Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
   Switch  *Var[0] 
    	CaseOR  ==  00000006 
    	CaseOR  ==  00000005 
		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp1B )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp2B )
  3D0:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  414:  		Call     SetActorDispOffset ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  458:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphPain2 )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp3B )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp3B )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphDizzy2 )
  658:  		Wait     00000005 
  664:  		Call     UseBattleCamPreset 	( 00000002 )
  674:  		Call     YieldTurn ( )
  680:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle2 )
  754:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphAngry3 )
				Thread
				Call	8026BF48 ( 00000001 )
				Call	BoostAttack  ( .Actor:Self 00000002 )
				Call	8026BF48 ( 00000000 )
				EndThread
				Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
				Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphRun )
				Call     SetGoalToHome 	( .Actor:Self )
				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
				Call     RunToGoal   	( .Actor:Self 00000000 .False )
				Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
				Call    		SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp1B )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp2B )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp3B )
  970:  		Wait     00000001 
  998:  		Wait     00000001 
  9A4:  EndSwitch
  9AC:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 0000000A 00000020 )
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseBattleCamPreset 	( 00000002 )
  A24:  		Wait     00000001 
  A4C:  		Wait     00000001  
	%			Wait     0000000B	second stomp, untested
	%			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp2B )				
	%			Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	%			Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphStomp3B )
	%			Wait     7` 
	%			Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 0000000A 00000020 )
	%	Call     UseBattleCamPreset 	( 00000002 )
  	%	Wait     00000002  
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle2 )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphIdle2 )
  BE4:  		Wait     00000003 
  BF0:  		Call     YieldTurn ( )
  BFC:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call     SetAnimation 	( .Actor:Self 00000001 .AnimRaphRun2 )
    		Call     SetGoalToHome 	( .Actor:Self )
    		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
    		Call     RunToGoal   	( .Actor:Self 00000000 .False )
    		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
    	EndCaseGroup
    EndSwitch
    Call     EnableIdleScript 	( .Actor:Self 00000001 )
    Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}
