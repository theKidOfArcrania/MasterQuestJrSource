% Automatically dumped from section 03

#new:Actor $FurtherBeyond
{
% stats
[Index]        54b 
[Level]         0`b 
[MaxHP]        250`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022DA44_THREE 
% ai
[PartsCount]   2`s 
[PartsTable] $PartsTable_8022DAF0_THREE 
[Script]      $Script_Init_8022DB60_THREE 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  35`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  30`b % dx dy
[StatusIcon]   10`b  30`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022D9A0_THREE
{
.Status:Normal    00A20005
.Status:Stone     00A20000
.Status:Sleep     00A2001C
.Status:Poison    00A20000
.Status:Stop      00A20000
.Status:Static    00A20000
.Status:Paralyze  00A20000
.Status:Dizzy     00A2001E
.Status:Dizzy     00A2001E
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022D9EC_THREE
{
.Status:Normal    00A20025
.Status:Stone     00A20001
.Status:Sleep     00A2001D
.Status:Poison    00A20001
.Status:Stop      00A20001
.Status:Static    00A20001
.Status:Paralyze  00A20001
.Status:Dizzy     00A2001F
.Status:Dizzy     00A2001F
.Status:End
}

#new:IdleAnimations $IdleAnimations_Rest
{
.Status:Normal    00A2002F
.Status:Stone     00A20001
.Status:Sleep     00A2001D
.Status:Poison    00A20001
.Status:Stop      00A20001
.Status:Static    00A20001
.Status:Paralyze  00A20001
.Status:Dizzy     00A2001F
.Status:Dizzy     00A2001F
.Status:End
}

#new:DefenseTable $DefenseTable_8022DA38_THREE
{
.Element:Normal 00000004
.Element:End
}

#new:StatusTable $StatusTable_8022DA44_THREE
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod    -2`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8022DAF0_THREE
{
00800000 01000000 FB1C00FF $IdleAnimations_8022D9A0_THREE $DefenseTable_8022DA38_THREE 00000000 00000000 02F90000 00000000 
00120001 02000000 000000FF $IdleAnimations_8022D9A0_THREE $DefenseTable_8022DA38_THREE 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_8022DB60_THREE
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80230B20_THREE )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022DC34_THREE )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80231408_THREE )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80230D44_THREE )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   80:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   98:  Call     SetActorVar 	( .Actor:Self 00000003 00000002 )
   98:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 ) % rest phase
   98:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 ) % what attack to use
   98:  Call     SetActorVar 	( .Actor:Self 00000006 00000000 ) % what attack to use
   B0:  Call     SetBattleFlagBits 	( 00800000 .True )
   C4:  Return
   CC:  End
}

#new:Script $Script_Idle_8022DC34_THREE
{
    0:  Return
    8:  End
}

#new:Script $Script_8022DC44_THREE
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00A2002F % Hurt, not dead  
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   B8:  		SetConst  *Var[0]  00000001 
   C8:  		SetConst  *Var[1]  00A20030 
   D8:  		SetConst  *Var[2]  00A20031 
   E8:  		ExecWait DoBurnHit 
   F4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
  110:  		Wait     00000001 
  11C:  		Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
  144:  	Case  ==  .Event:BurnDeath
  150:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  168:  		SetConst  *Var[0]  00000001 
  178:  		SetConst  *Var[1]  00A20030 
  188:  		SetConst  *Var[2]  00A20031
  198:  		ExecWait DoBurnHit 
  1A4:  		SetConst  *Var[0]  00000001 
  1B4:  		SetConst  *Var[1]  00A2002F 
  1C4:  		ExecWait DoDeath 
  1D0:  		Return
  1D8:  	Case  ==  .Event:SpinSmashHit
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00A2002F % Hurt, not dead  
  204:  		ChildThread
  20C:  			Wait     0000001E 
  218:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  230:  			Wait     0000000A 
  23C:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
  258:  			Wait     00000001 
  264:  			Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
  28C:  		EndChildThread
  294:  		ExecWait 8029B998 
  2A0:  	Case  ==  .Event:ShockHit
  2AC:  		SetConst  *Var[0]  00000001 
  2BC:  		SetConst  *Var[1]  00A2002F % Hurt, not dead  
  2CC:  		ExecWait DoShockHit 
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00A2002F % Hurt, not dead  
  2F8:  		ExecWait 8029BD70 
  304:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  324:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  33C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20028 )
  354:  		Call     SetGoalToHome 	( .Actor:Self )
  364:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  378:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  390:  		Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  3A8:  		Wait     00000005 
  3B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20025 )
  3CC:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  3E0:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  400:  	CaseOR  ==  00000017
  40C:  	CaseOR  ==  .Event:Immune
  418:  	CaseOR  ==  .Event:AirLiftFailed
  424:  		SetConst  *Var[0]  00000001 
  434:  		SetConst  *Var[1]  00A20025 
  444:  		ExecWait DoImmune 
  450:  	EndCaseGroup
  458:  	Case  ==  .Event:ShockDeath
  464:  		SetConst  *Var[0]  00000001 
  474:  		SetConst  *Var[1]  00A2002F % Hurt, not dead 
  484:  		ExecWait DoShockHit 
  490:  		SetConst  *Var[0]  00000001 
  4A0:  		SetConst  *Var[1]  00A2002F 
  4B0:  		ExecWait DoDeath 
  4BC:  		Return
  4C4:  	Case  ==  .Event:Death
  4D0:  		SetConst  *Var[0]  00000001 
  4E0:  		SetConst  *Var[1]  00A2002F % Hurt, not dead  
  4F0:  		ExecWait DoNormalHit 
  4FC:  		Wait     0000000A 
  508:  		SetConst  *Var[0]  00000001 
  518:  		SetConst  *Var[1]  00A2002F 
  528:  		ExecWait DoDeath 
  534:  		Return
  53C:  	Case  ==  .Event:SpinSmashDeath
  548:  		SetConst  *Var[0]  00000001 
  558:  		SetConst  *Var[1]  00A2002F % Hurt, not dead  
  568:  		ExecWait 8029B998 
  574:  		SetConst  *Var[0]  00000001 
  584:  		SetConst  *Var[1]  00A2002F 
  594:  		ExecWait DoDeath 
  5A0:  		Return
  5A8:  	Case  ==  .Event:EndFirstStrike
  5B4:  		SetConst  *Var[0]  00000001 
  5C4:  		SetConst  *Var[1]  00A20025 
  5D4:  		ExecWait DoReturnHome 
  5E0:  		Call     HPBarToHome 	( .Actor:Self )
  5F0:  	Case  ==  .Event:RecoverStatus
  5FC:  		SetConst  *Var[0]  00000001 
  60C:  		SetConst  *Var[1]  00A20025 
  61C:  		ExecWait DoRecover 
  628:  	Case  ==  .Event:ScareAway
  634:  		SetConst  *Var[0]  00000001 
  644:  		SetConst  *Var[1]  00A20028 
  654:  		SetConst  *Var[2]  00A2002F % Hurt, not dead  
  664:  		ExecWait DoScareAway 
  670:  		Return
  678:  	Default
  680:  EndSwitch
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:Script $Script_KiBarrage
{
   0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Thread
		Wait     00000005 
		Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
		Wait     0000000A 
		Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
	EndThread
	Call     SetAnimation 		( .Actor:Self 00000001 00A2002A )
	Wait 0000001E
	Call     SetAnimation 		( .Actor:Self 00000001 00A2002C )
	%
	Loop 3`
	Thread
	Call     SummonEnemy		( $KiFormation 00000000 )
	Set *Var[1] *Var[0]
	Call     SetActorScale 	( *Var[1] *Fixed[0.2] *Fixed[0.2] *Fixed[0.2] )
	Call     UseIdleAnimation 	( *Var[1] .False )
    Call     EnableIdleScript 	( *Var[1] 00000000 )
	Call     SetAnimation 		( *Var[1] 00000001 00F30003 )
	Call     SetTargetActor ( *Var[1] .Actor:Player )
	Call     SetGoalToTarget 	( *Var[1] )
	Call     SetActorSpeed     	( *Var[1] *Fixed[25.0] )
	Call     JumpToGoal      	( *Var[1] 00000014 00000000 00000001 00000000 )
	Wait 	 2`
	Call	EnemyTestTarget ( .Actor:Self  *Var[5] 00000000 00000000 00000001 00000010 )
	Switch  *Var[5] 
    	CaseOR  ==  00000006 
    	CaseOR  ==  00000005 % lucky, transparent
		Goto 00000001
	EndSwitch
		Call     EnemyDamageTarget 	( *Var[1] *Var[8] 10000000 00000000 80080864 0000000A 00000020 )
		Call     $SPSubtractMainFunction ( 00000007 00000000 )
	Wait     1`
	% Go off-screen
	Label 00000001
	Call     SetGoalPos		( *Var[1] -300` 0` 0` )
	Call     SetActorJumpGravity 	( *Var[1] *Fixed[1.0] )
	Call     JumpToGoal    		( *Var[1] 00000014 00000000 00000001 00000000 )
	Wait     4
	Call     RemoveActor 	( *Var[1] )
	EndThread
	Wait 12`
	EndLoop
	Call     UseIdleAnimation 	( .Actor:Self .True )
    Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Return
	End
}
	
#new:Script $Script_VanishingAct % Credit where its due, this is just a splice of Clover's 10-Hit Combo
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  128`
	Call	SetGoalPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20028 ) % running
	Call	RunToGoal    		( .Actor:Self 00000004 .False )
	Wait	15`
	Thread
		Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add		*Var[1]  3 
		Loop	3 
			Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait	00000003 
		EndLoop
	EndThread
	Call	SetAnimation 		( .Actor:Self 00000001 00A2002D ) % uppercut
	Call	PlaySoundAtActor 	( .Actor:Self 000002CD )
	Wait	5
	Call	SetActorPos			( .Actor:Self 0` -1000` 0` )
	Wait	8
	Call	ModifyActorDecoration	( .Actor:Self 00000001 00000000 00000000 00000000 00000000 00000000 )
	Call	GetActorPos		( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[1]  20`
	Call	SetGoalPos	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  40`
	Add		*Var[1]  60`
	Call	SetAnimation	( .Actor:Self 00000001 00A20034 ) % jump kick
	Call	SetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Thread
		Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add		*Var[1]  3 
		Loop	3 
			Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait	00000003 
		EndLoop
	EndThread
	Call	PlaySoundAtActor	( .Actor:Self 000002CD )
	Wait	8
	Call	FlyToGoal		( .Actor:Self 00000008 00000000 00000000 )
	Wait	2
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	4
	Call	EnemyDamageTarget 		( .Actor:Self *Var[0] 10000000 00000000 00000000 0000000C 00000040 ) % was C
	Call	GetGoalPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub		*Var[0]  40`
	Add		*Var[1]  60`
	Call	SetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	SetActorRotation 	( .Actor:Self 00000000 180` 00000000 )
	Thread
		Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add		*Var[1]  3 
		Loop	3 
			Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait	00000003 
		EndLoop
	EndThread
	Call	PlaySoundAtActor	( .Actor:Self 000002CD )
	Wait	8
	Call	FlyToGoal		( .Actor:Self 00000008 00000000 00000000 )
	Wait	2
	Call	PlaySoundAtActor 	( .Actor:Self 000003ED )
	Call	PlaySoundAtActor 	( .Actor:Self 000020BB )
	Wait	4
	Call	EnemyDamageTarget 		( .Actor:Self *Var[0] 10000000 00000000 00000000 0000000C 00000040 ) % was C
	Call     $SPSubtractMainFunction ( 00000007 00000000 )
	Thread
		Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add		*Var[1]  3 
		Loop	3 
			Call	PlayEffect	( 00000001 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait	00000003 
		EndLoop
	EndThread
	Call	GetActorPos			( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add		*Var[0]  128`
	Call	PlaySoundAtActor 	( .Actor:Self 000002CD )
	Call	SetActorPos 		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	Call	SetAnimation 		( .Actor:Self 00000001 00A20025 )
	Call	EnableActorBlur 	( .Actor:Self .False )
	Call	ModifyActorDecoration	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
	Call    SetAnimation 	( .Actor:Self 00000001 00A20025 )
	Call    SetGoalToHome 	( .Actor:Self )
	Call    SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
	Call    SetAnimation 	( .Actor:Self 00000001 00A20027 )
	Call    RunToGoal    	( .Actor:Self 00000000 .False )
	Call    SetAnimation 	( .Actor:Self 00000001 00A20025 )
	Call    EnableIdleScript 	( .Actor:Self .True )
	Call    UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}
	
#new:Script $Script_FuryFists
{
   0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
	0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 0000003F )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   4C:  Call     SetAnimation 	( .Actor:Self 00000001 00A20028 )
   64:  Call     SetGoalToTarget 	( .Actor:Self )
   74:  Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   90:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
   A4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 00A20027 )
   D4:  Wait     0000000A 
   E0:  Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
   F4:  Thread
   FC:  	Wait     0000000F 
  108:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  11C:  EndThread
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002A )
  13C:  Wait     0000001E 
  148:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002B )
  160:  Call     PlaySoundAtActor 	( .Actor:Self 000020BC )
  174:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  35C:  Call     SetGoalToTarget 	( .Actor:Self )
  36C:  Call     AddGoalPos 	( .Actor:Self 00000005 00000000 00000000 )
  388:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  3A0:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  3B4:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  3C8:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  3DC:  Wait     00000002
		Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
		Thread
			Wait     0000000F 
			Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
		EndThread
		Call     SetAnimation 	( .Actor:Self 00000001 00A2002A )
		Wait     0000000A
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000009 00000030 ) % was 9
		Call     $SPSubtractMainFunction ( 00000007 00000000 )
		Wait     00000014
		Call     SetAnimation 	( .Actor:Self 00000001 00A2002B )
		Wait     00000008
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000007 00000030 ) % was 7
		Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
		Thread
			Wait     0000000F 
			Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
		EndThread
		Call     SetAnimation 	( .Actor:Self 00000001 00A2002A )
		Wait     0000000C
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000009 00000030 ) % was 9
		Wait     00000014
		Call     SetAnimation 	( .Actor:Self 00000001 00A2002B )
		Wait     00000008
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000007 00000030 ) % was 7
  410:  Switch  *Var[0] 
  41C:  	CaseOR  ==  00000000 
  428:  	CaseOR  ==  00000002 
  434:  		Call     UseBattleCamPreset 	( 00000002 )
  444:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  458:  		Thread
  460:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000014 00000000 )
  47C:  			Set  *Var[0]  00000000 
  48C:  			Loop     0000000A 
  498:  				Add  *Var[0]  00000024 
  4A8:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  4C4:  				Wait     00000001 
  4D0:  			EndLoop
  4D8:  		EndThread
  4E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  4F0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  50C:  		Add  *Var[0]  00000032 
  51C:  		Set  *Var[1]  00000000 
  52C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.20019531] )
  540:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  558:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  574:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  594:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  5C0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  5DC:  		Wait     00000003 
  5E8:  		Add  *Var[0]  00000014 
  5F8:  		Set  *Var[1]  00000000 
  608:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  620:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  63C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  65C:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  670:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  688:  		Wait     00000014 
  694:  	EndCaseGroup
  69C:  EndSwitch
  6A4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20027 )
  6BC:  Call     SetGoalToHome 	( .Actor:Self )
  6CC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  6E0:  Call     SetAnimation 	( .Actor:Self 00000001 00A20028 )
  6F8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  710:  Call     SetAnimation 	( .Actor:Self 00000001 00A20027 )
  728:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  73C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  750:  Return
  758:  End
}
  
  #new:Script $Script_ForcePalm
{
   0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
	0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 0000003F )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   4C:  Call     SetAnimation 	( .Actor:Self 00000001 00A20028 )
   64:  Call     SetGoalToTarget 	( .Actor:Self )
   74:  Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   90:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
   A4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 00A20027 )
   D4:  Wait     0000000A 
   E0:  Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
   F4:  Thread
   FC:  	Wait     0000000F 
  108:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  11C:  EndThread
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002A )
  13C:  Wait     0000001E 
  148:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002B )
  160:  Call     PlaySoundAtActor 	( .Actor:Self 000020BC )
  174:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  35C:  Call     SetGoalToTarget 	( .Actor:Self )
  36C:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  388:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  3A0:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  3B4:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  3C8:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  3DC:  Wait     00000006
		Call     SetAnimation 	( .Actor:Self 00000001 00A2002C )
		Wait     00000006
		Call	PlaySoundAtActor	( .Actor:Player 000002D8 )
			Thread % added
				Call	8026BF48	 ( 00000001 )
				Call	BoostDefense ( .Actor:Player FFFFFFFD )
				Call	8026BF48	 ( 00000000 )
			EndThread % added
  410:  Switch  *Var[0] 
  41C:  	CaseOR  ==  00000000 
  428:  	CaseOR  ==  00000002 
  434:  		Call     UseBattleCamPreset 	( 00000002 )
  444:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  458:  		Thread
  460:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000014 00000000 )
  47C:  			Set  *Var[0]  00000000 
  48C:  			Loop     0000000A 
  498:  				Add  *Var[0]  00000024 
  4A8:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  4C4:  				Wait     00000001 
  4D0:  			EndLoop
  4D8:  		EndThread
  4E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  4F0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  50C:  		Add  *Var[0]  00000032 
  51C:  		Set  *Var[1]  00000000 
  52C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.20019531] )
  540:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  558:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  574:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  594:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  5C0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  5DC:  		Wait     00000003 
  5E8:  		Add  *Var[0]  00000014 
  5F8:  		Set  *Var[1]  00000000 
  608:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  620:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  63C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  65C:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  670:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  688:  		Wait     00000014 
  694:  	EndCaseGroup
  69C:  EndSwitch
  6A4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20027 )
  6BC:  Call     SetGoalToHome 	( .Actor:Self )
  6CC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  6E0:  Call     SetAnimation 	( .Actor:Self 00000001 00A20028 )
  6F8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  710:  Call     SetAnimation 	( .Actor:Self 00000001 00A20027 )
  728:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  73C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  750:  Return
  758:  End
}
  
#new:Script $Script_NowPerish
{
   0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 00000008 )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     SetBattleCamZoom  	( 000000C8 )
   44:  Call     SetBattleCamOffsetZ 	( 0000000D )
   54:  Call     MoveBattleCamOver 	( 0000003C )
   64:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002E )
   7C:  Wait     00000014 
   88:  Call     ActorSpeak  	( $Perish .Actor:Self 00000001 00A20029 00A20025 ) % Hyaaahhhh!!! Mario! Survive this if you can!!!!
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     UseBattleCamPreset 	( 00000007 )
   C8:  Call     BattleCamTargetActor ( .Actor:Self )
   D8:  Call     MoveBattleCamOver 	( 00000001 )
   E8:  Wait     0000001E 
   F4:  Call     PlaySoundAtActor 	( .Actor:Self 000003B9 )
  108:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
		Call     SetActorSpeed 	( .Actor:Self *Fixed[28.0] )
  /%
  11C:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000000 00000010 )
  140:  Switch  *Var[A] 
  14C:  	CaseOR  ==  00000006 
  158:  	CaseOR  ==  00000005 
  164:  		Call     UseBattleCamPreset 	( 00000002 )
  174:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  188:  		Call     SetGoalToTarget 	( .Actor:Self )
  198:  		Call     AddGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  1B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  1CC:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  1E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  1FC:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  210:  		Wait     0000000A 
  21C:  		If  *Var[A]  ==  00000005 
  22C:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  250:  		EndIf
  258:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  270:  		Call     SetGoalToHome 	( .Actor:Self )
  280:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  294:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  2AC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  2C4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  2DC:  		Return
  2E4:  	EndCaseGroup
  2EC:  EndSwitch
  %/
  2F4:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  308:  Call     SetGoalToTarget 	( .Actor:Self )
  318:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  334:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002C )
  34C:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  364:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  378:  Thread
  380:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  39C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  3B8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  3D4:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  3F0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  40C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  428:  EndThread
  430:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  444:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  458:  Wait     00000001 
  464:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000032 00000010 ) % was 18DMG, but in hex this is 12.
  Call     $SPSubtractMainFunction ( 00000007 00000000 )
  48C:  Wait     00000005 
  498:  Call     UseBattleCamPreset 	( 00000002 )
  4A8:  Thread
  4B0:  	Call     EnableActorBlur 	( .Actor:Self 00000001 )
  4C4:  	Wait     00000005 
  4D0:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  4E4:  	Call     SetAnimation 	( .Actor:Self 00000001 00A2002D )
  4FC:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  510:  	Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000001 00000000 )
  530:  	Call     EnableActorBlur 	( .Actor:Self 00000000 )
  544:  EndThread
  54C:  Thread
  554:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  570:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
  58C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  5A8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  5C4:  EndThread
  5CC:  Wait     00000002 
  5D8:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  5EC:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  60C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80010164 00000006 00000000 ) % unchanged
  Call     $SPSubtractMainFunction ( 00000007 00000000 )
  634:  Thread
  63C:  	Wait     00000005 
  648:  	Call     EnablePlayerBlur 	( 00000001 )
  658:  	Call     SetActorJumpGravity 	( .Actor:Player *Fixed[0.30078125] )
  66C:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  688:  	Call     SetJumpAnimations 	( .Actor:Player 00000000 00010017 00010017 00010017 )
  6A8:  	Call     SetGoalPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  6C4:  	Call     80273444 ( 00000032 00000000 00000000 )
  6DC:  	Call     EnablePlayerBlur 	( 00000000 )
  6EC:  EndThread
  6F4:  Wait     0000000F 
  700:  Call     SetGoalToTarget 	( .Actor:Self )
  710:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  72C:  Add  *Var[0]  00000032 
  73C:  Set  *Var[1]  00000000 
  74C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  760:  Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  778:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  794:  Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  7B4:  Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  7C8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  7E0:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7FC:  Wait     00000003 
  808:  Add  *Var[0]  00000014 
  818:  Set  *Var[1]  00000000 
  828:  Thread
  830:  	Wait     00000005 
  83C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  850:  	Wait     0000000A 
  85C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  870:  EndThread
  878:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002A )
  890:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8AC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  8CC:  Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  8E0:  Wait     00000005 
  8EC:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002B )
  904:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  918:  Call     SetGoalToTarget 	( .Actor:Self )
  928:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  944:  Call     RunToGoal   	( .Actor:Self 00000003 .False )
  95C:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  970:  Thread
  978:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  994:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  9B0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[6.0] )
  9CC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[5.0] )
  9E8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  A04:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  A20:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  A3C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  A58:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  A74:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  A90:  EndThread
  A98:  Call     PlaySoundAtActor 	( .Actor:Self 000003EE )
  AAC:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  ACC:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80010164 00000006 00000020 ) % unchanged
  Call     $SPSubtractMainFunction ( 00000007 00000000 )
  AF4:  Wait     0000000F 
  B00:  Switch  *Var[0] 
  B0C:  	CaseOR  ==  00000000 
  B18:  	CaseOR  ==  00000002 
  B24:  		Call     UseBattleCamPreset 	( 00000002 )
  B34:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BE )
  B48:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  B5C:  		Thread
  B64:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  B80:  			Set  *Var[0]  00000000 
  B90:  			Loop     0000000A 
  B9C:  				Add  *Var[0]  00000024 
  BAC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  BC8:  				Wait     00000001 
  BD4:  			EndLoop
  BDC:  		EndThread
  BE4:  		Call     SetGoalToTarget 	( .Actor:Self )
  BF4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C10:  		Add  *Var[0]  00000032 
  C20:  		Set  *Var[1]  00000000 
  C30:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  C44:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  C5C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  C98:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  CAC:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  CC4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  CE0:  		Wait     00000003 
  CEC:  		Add  *Var[0]  00000014 
  CFC:  		Set  *Var[1]  00000000 
  D0C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  D24:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D40:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  D60:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  D74:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  D8C:  		Wait     00000014 
  D98:  	EndCaseGroup
  DA0:  EndSwitch
  DA8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20024 )
  DC0:  Call     SetGoalToHome 	( .Actor:Self )
  DD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  DE4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20028 )
  DFC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  E14:  Call     SetAnimation 	( .Actor:Self 00000001 00A20024 )
  E2C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  E40:  Call     UseIdleAnimation 	( .Actor:Self .True )
  E54:  Return
  E5C:  End
}

#string $Perish
{
[Style Right]
Perish.[BR]
[Wait][End]
}

#string $NowPerish
{
[Style Right]
Now perish.[BR]
[Wait][End]
}

#new:Script $Script_NowPerishStart
{
   0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 00000008 )
   24:  Call     BattleCamTargetActor ( .Actor:Self )
   34:  Call     SetBattleCamZoom  	( 000000C8 )
   44:  Call     SetBattleCamOffsetZ 	( 0000000D )
   54:  Call     MoveBattleCamOver 	( 0000003C )
   64:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002E )
   7C:  Wait     00000014 
   88:  Call     ActorSpeak  	( $NowPerish .Actor:Self 00000001 00A20029 00A20025 ) % Hyaaahhhh!!! Mario! Survive this if you can!!!!
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     UseBattleCamPreset 	( 00000007 )
   C8:  Call     BattleCamTargetActor ( .Actor:Self )
   D8:  Call     MoveBattleCamOver 	( 00000001 )
   E8:  Wait     0000001E 
   F4:  Call     PlaySoundAtActor 	( .Actor:Self 000003B9 )
  108:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
		Call     SetActorSpeed 	( .Actor:Self *Fixed[28.0] )
  /%
  11C:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000000 00000010 )
  140:  Switch  *Var[A] 
  14C:  	CaseOR  ==  00000006 
  158:  	CaseOR  ==  00000005 
  164:  		Call     UseBattleCamPreset 	( 00000002 )
  174:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  188:  		Call     SetGoalToTarget 	( .Actor:Self )
  198:  		Call     AddGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  1B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20013 )
  1CC:  		Call     RunToGoal   	( .Actor:Self 0000000A .False )
  1E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  1FC:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  210:  		Wait     0000000A 
  21C:  		If  *Var[A]  ==  00000005 
  22C:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  250:  		EndIf
  258:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  270:  		Call     SetGoalToHome 	( .Actor:Self )
  280:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  294:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20008 )
  2AC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  2C4:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  2DC:  		Return
  2E4:  	EndCaseGroup
  2EC:  EndSwitch
  %/
  2F4:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  308:  Call     SetGoalToTarget 	( .Actor:Self )
  318:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  334:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002C )
  34C:  Call     RunToGoal   	( .Actor:Self 00000005 .False )
  364:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  378:  Thread
  380:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  39C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  3B8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  3D4:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  3F0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  40C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  428:  EndThread
  430:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  444:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  458:  Wait     00000001 
  464:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000032 00000010 ) % was 18DMG, but in hex this is 12.
  Call     $SPSubtractMainFunction ( 00000007 00000000 )
  48C:  Wait     00000005 
  498:  Call     UseBattleCamPreset 	( 00000002 )
  4A8:  Thread
  4B0:  	Call     EnableActorBlur 	( .Actor:Self 00000001 )
  4C4:  	Wait     00000005 
  4D0:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  4E4:  	Call     SetAnimation 	( .Actor:Self 00000001 00A2002D )
  4FC:  	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  510:  	Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000001 00000000 )
  530:  	Call     EnableActorBlur 	( .Actor:Self 00000000 )
  544:  EndThread
  54C:  Thread
  554:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  570:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.5] )
  58C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  5A8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  5C4:  EndThread
  5CC:  Wait     00000002 
  5D8:  Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
  5EC:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  60C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80010164 00000006 00000000 ) % unchanged
  Call     $SPSubtractMainFunction ( 00000007 00000000 )
  634:  Thread
  63C:  	Wait     00000005 
  648:  	Call     EnablePlayerBlur 	( 00000001 )
  658:  	Call     SetActorJumpGravity 	( .Actor:Player *Fixed[0.30078125] )
  66C:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  688:  	Call     SetJumpAnimations 	( .Actor:Player 00000000 00010017 00010017 00010017 )
  6A8:  	Call     SetGoalPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  6C4:  	Call     80273444 ( 00000032 00000000 00000000 )
  6DC:  	Call     EnablePlayerBlur 	( 00000000 )
  6EC:  EndThread
  6F4:  Wait     0000000F 
  700:  Call     SetGoalToTarget 	( .Actor:Self )
  710:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  72C:  Add  *Var[0]  00000032 
  73C:  Set  *Var[1]  00000000 
  74C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  760:  Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  778:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  794:  Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  7B4:  Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  7C8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  7E0:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7FC:  Wait     00000003 
  808:  Add  *Var[0]  00000014 
  818:  Set  *Var[1]  00000000 
  828:  Thread
  830:  	Wait     00000005 
  83C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  850:  	Wait     0000000A 
  85C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BD )
  870:  EndThread
  878:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002A )
  890:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8AC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  8CC:  Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  8E0:  Wait     00000005 
  8EC:  Call     SetAnimation 	( .Actor:Self 00000001 00A2002B )
  904:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  918:  Call     SetGoalToTarget 	( .Actor:Self )
  928:  Call     AddGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
  944:  Call     RunToGoal   	( .Actor:Self 00000003 .False )
  95C:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  970:  Thread
  978:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  994:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  9B0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[6.0] )
  9CC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[5.0] )
  9E8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  A04:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  A20:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  A3C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  A58:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  A74:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  A90:  EndThread
  A98:  Call     PlaySoundAtActor 	( .Actor:Self 000003EE )
  AAC:  Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  ACC:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80010164 00000006 00000020 ) % unchanged
  Call     $SPSubtractMainFunction ( 00000007 00000000 )
  AF4:  Wait     0000000F 
  B00:  Switch  *Var[0] 
  B0C:  	CaseOR  ==  00000000 
  B18:  	CaseOR  ==  00000002 
  B24:  		Call     UseBattleCamPreset 	( 00000002 )
  B34:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BE )
  B48:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
  B5C:  		Thread
  B64:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  B80:  			Set  *Var[0]  00000000 
  B90:  			Loop     0000000A 
  B9C:  				Add  *Var[0]  00000024 
  BAC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  BC8:  				Wait     00000001 
  BD4:  			EndLoop
  BDC:  		EndThread
  BE4:  		Call     SetGoalToTarget 	( .Actor:Self )
  BF4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C10:  		Add  *Var[0]  00000032 
  C20:  		Set  *Var[1]  00000000 
  C30:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  C44:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  C5C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  C98:  		Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  CAC:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  CC4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  CE0:  		Wait     00000003 
  CEC:  		Add  *Var[0]  00000014 
  CFC:  		Set  *Var[1]  00000000 
  D0C:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20033 )
  D24:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D40:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  D60:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B4 )
  D74:  		Call     SetAnimation 	( .Actor:Self 00000001 00A20032 )
  D8C:  		Wait     00000014 
  D98:  	EndCaseGroup
  DA0:  EndSwitch
  DA8:  Call     SetAnimation 	( .Actor:Self 00000001 00A20024 )
  DC0:  Call     SetGoalToHome 	( .Actor:Self )
  DD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
  DE4:  Call     SetAnimation 	( .Actor:Self 00000001 00A20028 )
  DFC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  E14:  Call     SetAnimation 	( .Actor:Self 00000001 00A20024 )
  E2C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  E40:  Call     UseIdleAnimation 	( .Actor:Self .True )
  E54:  Return
  E5C:  End
}

#new:Script $Script_SpiritBomb
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00A2002F )
	Wait 30`
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SmokeBurst )
	Thread
		Call     GetActorPos 	( .Actor:Self *Var[9] *Var[8] *Var[7] )
		Add  *Var[1]  00000003 
		Loop     00000003 
			Call     PlayEffect  	( ~FX:BigSmokePuff *Var[9] *Var[8] *Var[7] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Wait     00000003 
		EndLoop
	EndThread
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022D9A0_THREE )
	Call     SetAnimation 	( .Actor:Self 00000001 00A20019 )
	Set *Var[5] 2`
	Thread
		Loop
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
		Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
		If *Var[5] == 1`
			BreakLoop
		EndIf
		EndLoop
	EndThread
	Wait 15`
	Call	UseBattleCamPreset 	( 00000002 )
	Call	MoveBattleCamOver 	( 0000000A )
	Call	ActorSpeak  	( $NotOverYet .Actor:Self 00000001 00A20009 00A20005 )
	Wait 5`
	Call     SetAnimation 	( .Actor:Self 00000001 00A20010 )
	Call     GetActorPos    ( .Actor:Self *Var[9] *Var[8] *Var[7] )
	Call     PlayEffect  	( ~FX:ShockWave:LargeWhite *Var[9] 0` *Var[7] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Wait 10`
	Call     PlayEffect  	( ~FX:ShockWave:LargeWhite *Var[9] 0` *Var[7] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     SummonEnemy		( $KiFormation2 00000000 )
	Set *Var[1] *Var[0]
	Call     SetActorScale 	( *Var[1] *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
	Call     UseIdleAnimation 	( *Var[1] .False )
    Call     EnableIdleScript 	( *Var[1] 00000000 )
	Call     SetAnimation 		( *Var[1] 00000001 00F30002 )
	Wait 56`
	Call     SetAnimation 		( *Var[1] 00000001 00F30001 )
	Wait 20`
	Call     SetActorRotation 	( *Var[1] 00000000 00000000 30` )
	Call     SetAnimation 		( *Var[1] 00000001 00F30003 )
	Call     SetTargetActor		( *Var[1] .Actor:Player )
	Call     SetGoalToTarget 	( *Var[1] )
	Call     SetActorSpeed     	( *Var[1] *Fixed[2.0] )
	Call     JumpToGoal      	( *Var[1] 00000014 00000000 00000001 00000000 )
	Wait 	 1`
	Call     EnemyDamageTarget 	( *Var[1] *Var[8] 10000000 00000000 00000000 55` 00000020 ) % 55 damage to OHKO at full health without some kind of assistance.
	Wait     1`
	% Go off-screen
	Label 00000001
	Call     SetGoalPos		( *Var[1] -300` -300` 0` )
	Call     SetActorJumpGravity 	( *Var[1] *Fixed[1.0] )
	Call     JumpToGoal    		( *Var[1] 00000014 00000000 00000001 00000000 )
	Wait     4
	Call     RemoveActor 	( *Var[1] )
	Set *Var[5] 1`
	Wait 20`
	Call     GetPlayerHP 	( *Var[0] ) % If player survives, admit defeat.
	If       *Var[0] >  00000000 
		Call	ActorSpeak  	( $NoMore .Actor:Self 00000001 00A20009 00A20005 )
		SetConst  *Var[0]  00000001 
  		SetConst  *Var[1]  00A20018 
		ExecWait DoDeath
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .True )
    Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Return
	End
}
	
#string $NotOverYet
{
[Style Right]
[Shake][PrintRising]...cough hack cough...[BR]
[/fx][/fx]No, it cannot be! I must[BR]
prevail at any cost![BR]
[Wait][Next]
[BR]
I will not be bested by you[BR]
again.[PrintRising] For the pride of[BR]
Chan, Lee, and my dojo![BR]
[Wait][End]
}

#string $NoMore
{
[Style Right]
[Shake][PrintRising]...cough hack cough...[BR]
[/fx][/fx]I gave it my best. I cannot[BR]
continue any further.[BR]
[Wait][End]
}
	
#string $Rest
{
[Style Right]
[Shake][PrintRising]...cough hack cough...[BR]
[/fx][/fx]I need to rest.[Pause 10] Curse this weak[BR]
body! I must keep fighting![BR]
[Wait][End]
}
	
#new:Script $Script_TakeTurn_80230B20_THREE
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
    Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022D9EC_THREE )
	Call     GetActorVar 	( .Actor:Self 00000005 *Var[2] ) % what move to use?
	% At certain thresholds, he will lose a turn to exhaustion, 4 in total.
	Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	If  *Var[0]  <  200` 
		If *Var[1] == 0`
			Call     ActorSpeak  	( $Rest .Actor:Self 00000001 00A20029 00A20025 )
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_Rest )
			Call     SetActorVar 	( .Actor:Self 00000004 00000001 )
			Goto 00000001
		EndIf
	EndIf
   	If  *Var[0]  <  150` 
		If *Var[1] == 1`
			Call     ActorSpeak  	( $Rest .Actor:Self 00000001 00A20029 00A20025 )
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_Rest )
			Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
			Goto 00000001
		EndIf
	EndIf
	If  *Var[0]  <  100` 
		If *Var[1] == 2`
			Call     ActorSpeak  	( $Rest .Actor:Self 00000001 00A20029 00A20025 )
			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_Rest )
			Call     SetActorVar 	( .Actor:Self 00000004 00000003 )
			Goto 00000001
		EndIf
	EndIf
	% We will come back to this later.
	Call     GetPlayerHP 	( *Var[A] )
	If *Var[1] > 0 % if he is beyond the first stage of the fight
		If *Var[A] > 49` %essentially, if the player has full HP
			Call     ActorSpeak  	( $Ineffective .Actor:Self 00000001 00A20009 00A20005 )
			ExecWait $Script_ForcePalm
		EndIf
	EndIf
  % Adding a little section here to check for LS and delete them at low HP
  If  *Var[0]  <  121` % Once he is at or below 120HP
    Set *Var[5] 1`    % We check for LS
    %Call     GetActorHP ( .Actor:Self *Var[0] )
    %Call     SetEnemyHP ( .Actor:Self *Var[0] )
    Loop 10`                                           % Time to do something dirty. We are going to check if the player has a Life Shroom
      Call FindItem  ( .Item:LifeShroom *Var[9])          % and if they do, take it away from them and destroy it!
      If *Var[9] >= 00000000                               
        Set *Var[5] 2`
        Call RemoveItem ( .Item:LifeShroom *Var[9]) 
      EndIf
    EndLoop
    If *Var[5] == 2`
      Call ActorSpeak   ( $LS .Actor:Self 00000001 00A20029 00A20025 )
    EndIf
  EndIf
	% When he isn't exhausted, he will hit like a freight train moving at warp 7 into a collapsing star
		Switch *Var[2]
		Case == 0`
			ExecWait $Script_FuryFists
			Call     SetActorVar 	( .Actor:Self 00000005 00000001 )
		Case == 1`
			If  *Var[0]  >  125` % Half HP
				ExecWait $Script_VanishingAct
			Else
				ExecWait $Script_NowPerish
			EndIf
			Call     SetActorVar 	( .Actor:Self 00000005 00000002 )
		Case == 2`
			ExecWait $Script_FuryFists
			Call     SetActorVar 	( .Actor:Self 00000005 00000003 )
		Case == 3`
			ExecWait $Script_VanishingAct
			Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
		EndSwitch
	% Lets check again.
	Call     GetPlayerHP 	( *Var[B] )
	Sub *Var[A] 00000007
	% Check to make sure we did at least 7 damage.
	If *Var[B] < *Var[A]
		Goto 00000001
	Else
		Call     ActorSpeak  	( $Ineffective .Actor:Self 00000001 00A20009 00A20005 )
		ExecWait $Script_ForcePalm
	EndIf
	Label 00000001
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}
	
#string $Ineffective
{
[Style Right]
My attacks are insufficient.[BR]
I must improvise, adapt, and[BR]
overcome![BR]
[Wait][End]
}

#new:Script $Script_NextTurn_80230D44_THREE
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetBattlePhase ( *Var[0] )
   38:  Switch  *Var[0] 
   44:  	Case  ==  .Phase:PlayerBegin
   50:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   68:  		If  *Var[0]  ==  00000000 
   78:  			Call     UseBattleCamPreset 	( 0000000D )
   88:  			Call     BattleCamTargetActor ( .Actor:Self )
   98:  			Call     SetTargetActor ( .Actor:Self .Actor:Player )
   AC:  			Wait     0000000A 
   B8:  			Call     ActorSpeak  	( $BattleStart .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
   D8:  			Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   F0:  			Call     SetAnimation 	( .Actor:Self 00000001 00A2000D )
  108:  			Wait     0000000F 
  114:  			Call     SetAnimation 	( .Actor:Self 00000001 00A2000C )
  12C:  			Wait     00000005 
  138:  			Call     PlaySoundAtActor 	( .Actor:Self 000020B8 )
  14C:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  168:  			Add  *Var[1]  00000014 
  178:  			Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1BC:  			Set  *Var[0]  00000000 
  1CC:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20000 )
  1E4:  			Loop     0000000F 
  1F0:  				Add  *Var[0]  00000018 
  200:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
  21C:  				Wait     00000001 
  228:  			EndLoop
  230:  			Set  *Var[0]  00000000 
  240:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20000 )
  258:  			Loop     00000005 
  264:  				Add  *Var[0]  00000012 
  274:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
  290:  				Wait     00000001 
  29C:  			EndLoop
  2A4:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:SmokeBurst )
  2B8:  			Thread
  2C0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2DC:  				Add  *Var[1]  00000003 
  2EC:  				Loop     00000003 
  2F8:  					Call     PlayEffect  	( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  33C:  					Wait     00000003 
  348:  				EndLoop
					EndThread
					Thread
					    Loop
						Call     GetActorVar 	( .Actor:Self 00000006 *Var[6] )
						If *Var[6] == 0
						Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
						Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
						Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
						Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
						Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
						Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
						Else
							BreakLoop
						EndIf
						EndLoop
  350:  			EndThread
  358:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20000 )
  370:  			Loop     00000005 
  37C:  				Add  *Var[0]  00000024 
  38C:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
  3A8:  				Wait     00000001 
  3B4:  			EndLoop
  3BC:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  3D4:  			Loop     00000005 
  3E0:  				Add  *Var[0]  00000012 
  3F0:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Var[0] 00000000 )
  40C:  				Wait     00000001 
  418:  			EndLoop
  420:  			Wait     0000001E
					Call     ActorSpeak  	( $Thisistogo .Actor:Self 00000001 00A2000A 00A20006 ) % Kwaaaaa! Behold my fury, Mario!!
					Wait     00000002 
					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
					Wait     00000001 
					Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
					Wait     0000000A
					Call     GetActorPos    ( .Actor:Self *Var[9] *Var[8] *Var[7] )
					Call     PlayEffect  	( ~FX:ShockWave:LargeWhite *Var[9] 0` *Var[7] 00000000 00000000 00000000 00000000
					Wait     0000000F
					Set *Var[5] 2`
  42C:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022D9EC_THREE )
  444:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20028 )
  45C:  			Call     SetAnimation 	( .Actor:Self 00000001 00A2002D )
					Wait     0000001A 
  4DC:  			Call     SetAnimation 	( .Actor:Self 00000001 00A20003 )
  4F4:  			Call     UseBattleCamPreset 	( 00000002 )
  504:  			Call     MoveBattleCamOver 	( 0000000A )
					Call     SetActorVar 	( .Actor:Self 00000006 00000001 )
  514:  			Call     ActorSpeak  	( $TimesUp .Actor:Self 00000001 00A20029 00A20025 ) % Kwaaaaa! Behold my fury, Mario!!
					Wait     0000000A
					ExecWait $Script_NowPerishStart
  534:  		EndIf
  53C:  	Case  ==  .Phase:EnemyBegin
  548:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  55C:  		If  *Var[0]  &  00351000 
  56C:  			BreakCase
  574:  		EndIf
  57C:  		Call     GetActorHP  	( .Actor:Self *Var[0] )
  590:  		Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
  5A4:  		Div  *Var[1]  00000002 
  5B4:  		If  *Var[0]  <=  *Var[1] 
  5C4:  			Call     UseBattleCamPreset 	( 00000002 )
  5D4:  			Call     MoveBattleCamOver 	( 0000000A )
  5E4:  			Call     ActorSpeak  	( $CutYouDown .Actor:Self 00000001 00A20029 00A20025 ) % Now...it is time I stopped being so merciful.
  604:  			BreakCase
  60C:  		EndIf
  614:  		Call     GetPlayerHP 	( *Var[0] )
  624:  		If  *Var[0]  <=  0000000A 
  634:  			Call     UseBattleCamPreset 	( 00000002 )
  644:  			Call     MoveBattleCamOver 	( 0000000A )
  654:  			Call     ActorSpeak  	( $YouCannotWin .Actor:Self 00000001 00A20029 00A20025 ) % You underestimate me, Mario! Did you really think  ...
  674:  			BreakCase
  67C:  		EndIf
  684:  EndSwitch
  68C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#string $BattleStart
{
[Style Right]
[PrintRising]For the pride of my dojo and[BR]
the pride of my students I[BR]
must defeat you.[BR]
[Wait][Next]
[BR]
I won't hold back this time.[BR]
[Wait][End]
}

#string $TimesUp
{
[Style Right]
[PrintRising]Behold the true power that I[BR]
possess.[Pause 21] Your time is up, Mario.[BR]
[Wait][End]
}

#string $CutYouDown
{
[Style Right]
[PrintRising]Don't think you've won just[BR]
yet! I will cut you down![BR]
[Wait][End]
}

#string $YouCannotWin
{
[Style Right]
[PrintRising]Look at you, backed into a[BR]
corner. This will be the final[BR]
blow![BR]
[Wait][End]
}

#string $Thisistogo
{
[Style Right]
[PrintRising]I must go[Pause 3].[Pause 3].[Pause 3].[Pause 3]further[Pause 3].[Pause 3].[Pause 3].beyond![BR]
[Wait][End]
}
  

#string $LS
{
[Style Right]
[PrintRising]Mario, you lack honor![BR]
Our battle is reaching its[BR]
peak, and you rely on such[BR]
cowardly tactics?[BR]
[Wait][Next]
Dispose of those Life Shrooms[BR]
at once! I will not lose to[BR]
such dishonorable fighting.[BR]
[Wait][End]
}

#new:Script $Script_HandleEvent_80231408_THREE
{
    0:  ExecWait $Script_8022DC44_THREE 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00351000 
   30:  	Return
   38:  EndIf
   40:  Call     GetBattleFlags ( *Var[0] )
   50:  If  *Var[0]  &  00000240 
   60:  	Call     GetLastDamage 	( .Actor:Self *Var[0] )
   74:  	If  *Var[0]  >  00000000 
   84:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   9C:  		Call     AddActorVar 	( .Actor:Self 00000003 00000001 )
   B4:  	EndIf
   BC:  EndIf
   C4:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   D8:  Switch  *Var[0] 
   E4:  	CaseOR  ==  .Event:Hit
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  .Event:SpinSmashHit
  108:  	CaseOR  ==  .Event:Immune
  114:  	CaseOR  ==  .Event:AirLiftFailed
  120:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[A] )
  138:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[B] )
  150:  		Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  168:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  17C:  		If  *Var[0]  &  003F1000 
  18C:  			BreakCase
  194:  		EndIf
  19C:  		Set  *Flag[00]  00000000 
  1AC:  		Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  1C4:  		Switch  *Var[0] 
  1D0:  			CaseOR  ==  00000001 
  1DC:  			CaseOR  ==  00000000 
  1E8:  				Set  *Flag[00]  00000001 
  1F8:  			EndCaseGroup
  200:  		EndSwitch
  208:  		If  *Flag[00]  ==  00000000 
  218:  			BreakCase
  220:  		EndIf
  228:  		Call     UseIdleAnimation 	( .Actor:Self .False )
  23C:  		Call     EnableIdleScript 	( .Actor:Self 00000000 )
  250:  		If  *Var[A]  ==  00000001 
  260:  			If  *Var[B]  >  00000002 
  270:  				Call     UseBattleCamPreset 	( 00000002 )
  280:  				Call     MoveBattleCamOver 	( 0000000A )
  290:  				Call     ActorSpeak  	( $NiceHit .Actor:Self 00000001 00A20029 00A20025 ) % Hm! You have great hidden strength for one clothed ...
  2B0:  				Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
  2C8:  			EndIf
  2D0:  		Else
  2D8:  			Call     UseBattleCamPreset 	( 00000002 )
  2E8:  			Call     MoveBattleCamOver 	( 0000000A )
  2F8:  			Call     ActorSpeak  	( $Pathetic .Actor:Self 00000001 00A20029 00A20025 ) % You foolish novice! Do you think you can beat me w ...
  318:  		EndIf
  320:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  334:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  348:  	EndCaseGroup
  350:  EndSwitch
  358:  Return
  360:  End
}

#string $NiceHit
{
[Style Right]
[PrintRising]Hm! Your power may rival[BR]
my own, but I still hold[BR]
the upper hand![BR]
[Wait][End]
}

#string $Pathetic
{
[Style Right]
[PrintRising]Pathetic.[Pause 21] How can you hope[BR]
to defeat me with such weak[BR]
attacks?[BR]
[Wait][End]
}

% Ki Attacks

#new:Vector3D $KiPos
{
70` 10` 10`
}

#new:Vector3D $KiPos2
{
70` 70` 10`
}

#new:SpecialFormation $KiFormation
{
$KiAttack	$KiPos 00000009 00000000 00000000 00000000 00000000 
}

#new:SpecialFormation $KiFormation2
{
$KiAttack	$KiPos2 00000009 00000000 00000000 00000000 00000000 
}

#new:Actor $KiAttack
{
% stats
[Index]        7b % no need for a index
[Level]        12`b 
[MaxHP]         7`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022DA44_THREE 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_Ki 
[Script]      $Script_Init_Ki 
% move effectiveness
[Escape]       30`b 
[Item]         50`b 
[AirLift]      90`b 
[Hurricane]    10`b % Bow's "Sp
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         80`b  80`b % width height
[HealthBar]     0`b   0`b % dx dyook" as well
[UpAndAway]    95`b 
[PowerBounce]  3`b 
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:PartsTable $PartsTable_Ki
{
00800000 01000000 001400FF $IdleAnimations_Ki $DefenseTable_8022DA38_THREE 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_Ki
{
.Status:Normal    00F30001
.Status:Stone     00F30001
.Status:Sleep     00F30001
.Status:Poison    00F30001
.Status:Stop      00F30001
.Status:Static    00F30001
.Status:Paralyze  00F30001
.Status:Dizzy     00F30001
.Status:Fear  	  00F30001
.Status:End
}

#new:Script $Script_Init_Ki
{
	Call	BindTakeTurn	( .Actor:Self $Script_Idle_Ki )
	Call	BindIdle		( .Actor:Self $Script_Idle_Ki )
	Call	BindHandleEvent	( .Actor:Self $Script_Idle_Ki )
	Return
	End
}
	
#new:Script $Script_Idle_Ki
{
Return
End
}
