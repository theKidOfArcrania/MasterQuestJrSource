% Automatically dumped from section 10

#new:Actor $DandyGuy
{
% stats
[Index]        E8b 
[Level]        75`b 
[MaxHP]        50`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224A40_10 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_80224AEC_10 
[Script]      $Script_Init_80224B38_10 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802186C0_10
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       ~Func:get_variable
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       ~Func:get_variable
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021878C_10
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  DADDU     A0, S1, R0
   40:  JAL       ~Func:get_variable
   44:  DADDU     S4, V0, R0
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  DADDU     A0, S1, R0
   54:  JAL       ~Func:get_variable
   58:  DADDU     S3, V0, R0
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  DADDU     A0, S1, R0
   68:  JAL       ~Func:get_float_variable
   6C:  DADDU     S2, V0, R0
   70:  DADDU     A0, S1, R0
   74:  LW        A1, 0 (S0)
   78:  JAL       ~Func:get_variable
   7C:  MOV.S     F20, F0
   80:  ADDIU     A0, R0, 6
   84:  LIA       A1, $End[0]
   8C:  MTC1      S4, F0
   90:  NOP
   94:  CVT.S.W   F0, F0
   98:  SWC1      F0, 28 (A1)
   9C:  MTC1      S3, F0
   A0:  NOP
   A4:  CVT.S.W   F0, F0
   A8:  SWC1      F0, 2C (A1)
   AC:  MTC1      S2, F0
   B0:  NOP
   B4:  CVT.S.W   F0, F0
   B8:  MFC1      A2, F20
   BC:  DADDU     A3, V0, R0
   C0:  JAL       800712D0
   C4:  SWC1      F0, 30 (A1)
   C8:  LW        RA, 24 (SP)
   CC:  LW        S4, 20 (SP)
   D0:  LW        S3, 1C (SP)
   D4:  LW        S2, 18 (SP)
   D8:  LW        S1, 14 (SP)
   DC:  LW        S0, 10 (SP)
   E0:  LDC1      F20, 28 (SP)
   E4:  ADDIU     V0, R0, 2
   E8:  JR        RA
   EC:  ADDIU     SP, SP, 30
}

   /%
#new:Actor $CovertGuySummoned
% stats
[Index]        E7b 
[Level]        75`b 
[MaxHP]        50`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802274B8_SUMTHIN 
% ai
[PartsCount]   2`s 
[PartsTable] $PartsTable_80227564_SUMTHIN
[Script]      $Script_Init_802275D4_SUMTHIN
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Actor $MalpracticeGuySummoned
% stats
[Index]        DBb 
[Level]        75`b 
[MaxHP]         50`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80223470_10 
% ai
[PartsCount] 1`s 
[PartsTable] $PartsTable_8022351C_10 
[Script]      $Script_StartAI_80223568_10  
% move effectiveness
[Escape]       0`b 
[Item]         0`b 
[AirLift]      0`b 
[Hurricane]    0`b % Bow's "Spook" as well
[UpAndAway]    0`b 
[PowerBounce]  50`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   12`b  31`b % dx dy

%/

#new:IdleAnimations $IdleAnimations_802249E0_10
{
.Status:Normal    003C0701
.Status:Stone     003C0700
.Status:Sleep     003C0706
.Status:Poison    003C0701
.Status:Stop      003C0700
.Status:Static    003C0701
.Status:Paralyze  003C0700
.Status:Dizzy     003C0707
.Status:Fear  003C0707
.Status:End
}

#new:DefenseTable $DefenseTable_80224A2C_10
{
.Element:Normal 00000000
.Element:Cosmic 00000063
.Element:End
}

#new:StatusTable $StatusTable_80224A40_10
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      20`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      0`
.Status:Fear  0`
.Status:Static     0`
.Status:Paralyze   20`
.Status:Shrink     0`
.Status:Stop       45`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_80224AEC_10
{
00800000 01000000 001800FF $IdleAnimations_802249E0_10 $DefenseTable_80224A2C_10 00000000 00000000 00F60000 00000000 
}

/%

#new:Actor $AntiGuySummoned
% stats
[Index]        AFb 
[Level]        75`b 
[MaxHP]        50`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022191C_10 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_802219C8_10 
[Script]       $Script_Init_80221A60_10
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

%/

#new:Script $Script_Init_80224B38_10
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80226338_10 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80224B9C_10 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224D10_10 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80224B9C_10
{
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00001000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 0000000E )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call     $Function_802186C0_10 ( FFFFFFF3 0000000F 00000004 0000000D )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF6 )
   C4:  	Call     $Function_802186C0_10 ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End
}

#new:Script $Script_80224CAC_10
{
    0:  Call     ResetAllActorSounds ( FFFFFF81 )
   10:  SetConst  *Var[0]  00000001 
   20:  SetConst  *Var[1]  003C0704 
   30:  ExecWait DoReturnHome 
   3C:  Call     SetAnimation 	( .Actor:Self 00000001 003C0701 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_80224D10_10
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  003C0708 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  003C070E 
   C0:  		SetConst  *Var[2]  003C070F 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  003C070E 
  108:  		SetConst  *Var[2]  003C070F 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  003C070F 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  003C0708 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:SpinSmashDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  003C0708 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  003C0708 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  003C0708 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  003C0708 
  254:  		ExecWait 8029BD70 
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait $Script_80224CAC_10 
  280:  	Case  ==  .Event:ShockDeath
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		SetConst  *Var[1]  003C0708 
  2AC:  		ExecWait DoShockHit 
  2B8:  		SetConst  *Var[0]  00000001 
  2C8:  		SetConst  *Var[1]  003C0708 
  2D8:  		ExecWait DoDeath 
  2E4:  		Return
  2EC:  	CaseOR  ==  00000017
  2F8:  	CaseOR  ==  .Event:Immune
  304:  		SetConst  *Var[0]  00000001 
  314:  		SetConst  *Var[1]  003C0701 
  324:  		ExecWait DoImmune 
  330:  	EndCaseGroup
  338:  	Case  ==  .Event:Death
  344:  		SetConst  *Var[0]  00000001 
  354:  		SetConst  *Var[1]  003C0708 
  364:  		ExecWait DoNormalHit 
  370:  		Wait     0000000A 
  37C:  		SetConst  *Var[0]  00000001 
  38C:  		SetConst  *Var[1]  003C0708 
  39C:  		ExecWait DoDeath 
  3A8:  		Return
  3B0:  	Case  ==  .Event:RecoverStatus
  3BC:  		SetConst  *Var[0]  00000001 
  3CC:  		SetConst  *Var[1]  003C0701 
  3DC:  		ExecWait DoRecover 
  3E8:  	Case  ==  .Event:ScareAway
  3F4:  		SetConst  *Var[0]  00000001 
  404:  		SetConst  *Var[1]  003C0704 
  414:  		SetConst  *Var[2]  003C0711 
  424:  		ExecWait DoScareAway 
  430:  		Return
  438:  	Case  ==  .Event:BeginAirLift
  444:  		SetConst  *Var[0]  00000001 
  454:  		SetConst  *Var[1]  003C0704 
  464:  		ExecWait DoAirLift 
  470:  	CaseOR  ==  .Event:BlowAway
  47C:  		SetConst  *Var[0]  00000001 
  48C:  		SetConst  *Var[1]  003C0704 
  49C:  		ExecWait DoBlowAway 
  4A8:  		Return
  4B0:  	Case  ==  .Event:AirLiftFailed
  4BC:  		SetConst  *Var[0]  00000001 
  4CC:  		SetConst  *Var[1]  003C0701 
  4DC:  		ExecWait DoImmune 
  4E8:  	Default
  4F0:  EndSwitch
  4F8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  50C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  520:  Return
  528:  End
}

#new:Script $Script_BasicAttack_10
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetActorSounds ( FFFFFF81 00000000 000020BA 000003B4 )
   90:  Call     SetActorSounds ( FFFFFF81 00000004 0000000A 00000000 )
   AC:  Call     SetAnimation 	( .Actor:Self 00000001 003C0710 )
   C4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   D8:  Call     SetGoalToTarget 	( .Actor:Self )
   E8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  104:  Add  *Var[0]  0000000A 
  114:  Set  *Var[1]  00000000 
  124:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  158:  Call     PlaySoundAtActor 	( .Actor:Self 000002E2 )
  16C:  Call     SetAnimation 	( .Actor:Self 00000001 003C070C )
  184:  Set  *Var[0]  00000000 
  194:  Loop     0000001E 
  1A0:  	Add  *Var[0]  00000030 
  1B0:  	Mod  *Var[0]  00000168 
  1C0:  	Call     SetActorYaw 	( .Actor:Self *Var[0] )
  1D4:  	Wait     00000001 
  1E0:  EndLoop
  1E8:  Call     SetActorYaw 	( .Actor:Self 00000000 )
  1FC:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000020 )
  220:  Switch  *Var[0] 
  22C:  	CaseOR  ==  00000006 
  238:  	CaseOR  ==  00000005 
  244:  		Call     SetAnimation 	( .Actor:Self 00000001 003C070B )
  25C:  		Wait     00000014 
  268:  		If  *Var[0]  ==  00000005 
  278:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  29C:  		EndIf
  2A4:  		Call     UseBattleCamPreset 	( 00000002 )
  2B4:  		Call     ResetAllActorSounds ( FFFFFF81 )
  2C4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  2D8:  		ExecWait $Script_80224CAC_10 
  2E4:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2F8:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  30C:  		Return
  314:  	EndCaseGroup
  31C:  EndSwitch
  324:  Call     SetGoalToTarget 	( .Actor:Self )
  540:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
		Wait 10`
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
		Wait 10`
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  35C:  Switch  *Var[0] 
  368:  	CaseOR  ==  00000000 
  374:  	CaseOR  ==  00000002 
  380:  		Call     WasStatusInflicted ( FFFFFF81 *Var[0] )
  394:  		If  *Var[0]  ==  00000001 
  3A4:  			Thread
  3AC:  				Set  *Var[0]  00000000 
  3BC:  				Loop     0000001E 
  3C8:  					Add  *Var[0]  00000030 
  3D8:  					Mod  *Var[0]  00000168 
  3E8:  					Call     SetActorYaw 	( .Actor:Player *Var[0] )
  3FC:  					Wait     00000001 
  408:  				EndLoop
  410:  				Call     SetActorYaw 	( .Actor:Player 00000000 )
  424:  			EndThread
  42C:  		EndIf
  434:  		Call     PlaySoundAtActor 	( .Actor:Self 000002E3 )
  448:  		Call     SetAnimation 	( .Actor:Self 00000001 003C070B )
  460:  		Set  *Var[0]  00000000 
  470:  		Loop     0000000F 
  47C:  			Add  *Var[0]  00000018 
  48C:  			Mod  *Var[0]  00000168 
  49C:  			Call     SetActorYaw 	( .Actor:Self *Var[0] )
  4B0:  			Wait     00000001 
  4BC:  		EndLoop
  4C4:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  4D8:  		Call     SetAnimation 	( .Actor:Self 00000001 003C070C )
  4F0:  		Call     UseBattleCamPreset 	( 00000002 )
  500:  		Call     PlaySoundAtActor 	( .Actor:Self 000002E4 )
  514:  		Thread
  51C:  			Set  *Var[0]  00000000 
  52C:  			Loop     00000014 
  538:  				Add  *Var[0]  00000048 
  548:  				Mod  *Var[0]  00000168 
  558:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  56C:  				Wait     00000001 
  578:  			EndLoop
  580:  			Call     SetActorYaw 	( .Actor:Self *Var[0] )
  594:  		EndThread
  59C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5B8:  		Add  *Var[0]  00000028 
  5C8:  		Set  *Var[1]  00000000 
  5D8:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  5EC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  608:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  628:  		Call     SetAnimation 	( .Actor:Self 00000001 003C070A )
  640:  		Wait     00000019 
  64C:  		Call     ResetAllActorSounds ( FFFFFF81 )
  65C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  670:  		ExecWait $Script_80224CAC_10 
  67C:  	EndCaseGroup
  684:  EndSwitch
  68C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_SleepySpin_10
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetActorSounds ( FFFFFF81 00000000 000020BA 000003B4 )
   90:  Call     SetActorSounds ( FFFFFF81 00000004 0000000A 00000000 )
   AC:  Call     SetAnimation 	( .Actor:Self 00000001 003C0710 )
   C4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   D8:  Call     SetGoalToTarget 	( .Actor:Self )
   E8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  104:  Add  *Var[0]  0000000A 
  114:  Set  *Var[1]  00000000 
  124:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  158:  Call     PlaySoundAtActor 	( .Actor:Self 000002E2 )
  16C:  Call     SetAnimation 	( .Actor:Self 00000001 003C070C )
  184:  Set  *Var[0]  00000000 
  194:  Loop     0000001E 
  1A0:  	Add  *Var[0]  00000030 
  1B0:  	Mod  *Var[0]  00000168 
  1C0:  	Call     SetActorYaw 	( .Actor:Self *Var[0] )
  1D4:  	Wait     00000001 
  1E0:  EndLoop
  1E8:  Call     SetActorYaw 	( .Actor:Self 00000000 )
  1FC:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000020 )
  220:  Switch  *Var[0] 
  22C:  	CaseOR  ==  00000006 
  238:  	CaseOR  ==  00000005 
  244:  		Call     SetAnimation 	( .Actor:Self 00000001 003C070B )
  25C:  		Wait     00000014 
  268:  		If  *Var[0]  ==  00000005 
  278:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  29C:  		EndIf
  2A4:  		Call     UseBattleCamPreset 	( 00000002 )
  2B4:  		Call     ResetAllActorSounds ( FFFFFF81 )
  2C4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  2D8:  		ExecWait $Script_80224CAC_10 
  2E4:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2F8:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  30C:  		Return
  314:  	EndCaseGroup
  31C:  EndSwitch
  324:  Call     SetGoalToTarget 	( .Actor:Self )
  334:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80040164 00000000 00000020 )
  			Call	PlaySoundAtActor	( .Actor:Player 000002D8 )
			Thread % added
				Call	8026BF48	( 00000001 )
				Call	BoostDefense	( .Actor:Player FFFFFFFF )
				Call	8026BF48	( 00000000 )
			EndThread % added
  35C:  Switch  *Var[0] 
  368:  	CaseOR  ==  00000000 
  374:  	CaseOR  ==  00000002 
  380:  		Call     WasStatusInflicted ( FFFFFF81 *Var[0] )
  394:  		If  *Var[0]  ==  00000001 
  3A4:  			Thread
  3AC:  				Set  *Var[0]  00000000 
  3BC:  				Loop     0000001E 
  3C8:  					Add  *Var[0]  00000030 
  3D8:  					Mod  *Var[0]  00000168 
  3E8:  					Call     SetActorYaw 	( .Actor:Player *Var[0] )
  3FC:  					Wait     00000001 
  408:  				EndLoop
  410:  				Call     SetActorYaw 	( .Actor:Player 00000000 )
  424:  			EndThread
  42C:  		EndIf
  434:  		Call     PlaySoundAtActor 	( .Actor:Self 000002E3 )
  448:  		Call     SetAnimation 	( .Actor:Self 00000001 003C070B )
  460:  		Set  *Var[0]  00000000 
  470:  		Loop     0000000F 
  47C:  			Add  *Var[0]  00000018 
  48C:  			Mod  *Var[0]  00000168 
  49C:  			Call     SetActorYaw 	( .Actor:Self *Var[0] )
  4B0:  			Wait     00000001 
  4BC:  		EndLoop
  4C4:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  4D8:  		Call     SetAnimation 	( .Actor:Self 00000001 003C070C )
  4F0:  		Call     UseBattleCamPreset 	( 00000002 )
  500:  		Call     PlaySoundAtActor 	( .Actor:Self 000002E4 )
  514:  		Thread
  51C:  			Set  *Var[0]  00000000 
  52C:  			Loop     00000014 
  538:  				Add  *Var[0]  00000048 
  548:  				Mod  *Var[0]  00000168 
  558:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  56C:  				Wait     00000001 
  578:  			EndLoop
  580:  			Call     SetActorYaw 	( .Actor:Self *Var[0] )
  594:  		EndThread
  59C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5B8:  		Add  *Var[0]  00000028 
  5C8:  		Set  *Var[1]  00000000 
  5D8:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  5EC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  608:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  628:  		Call     SetAnimation 	( .Actor:Self 00000001 003C070A )
  640:  		Wait     00000019 
  64C:  		Call     ResetAllActorSounds ( FFFFFF81 )
  65C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  670:  		ExecWait $Script_80224CAC_10 
  67C:  	EndCaseGroup
  684:  EndSwitch
  68C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_TakeTurn_80226338_10
{
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000002 
   28:  	Call     RandInt     	( 00000064 *Var[0] )
   3C:  	If  *Var[0]  <  0000003C 
   4C:  		Call     GetStatusFlags ( .Actor:Player *Var[0] )
   60:  		If  *Var[0]  &  00040000 
   70:  			ExecWait $Script_BasicAttack_10 
   7C:  		Else
   84:  			ExecWait $Script_SleepySpin_10 
   90:  		EndIf
   98:  	Else
   A0:  		ExecWait $Script_BasicAttack_10 
   AC:  	EndIf
   B4:  	Return
   BC:  EndIf
  280:  Call     RandInt     	( 00000064 *Var[0] )
  294:  If  *Var[0]  <  0000003C 
  2A4:  	Call     GetStatusFlags ( .Actor:Player *Var[0] )
  2B8:  	If  *Var[0]  &  00040000 
  2C8:  		ExecWait $Script_BasicAttack_10 
  2D4:  	Else
  2DC:  		ExecWait $Script_SleepySpin_10 
  2E8:  	EndIf
  2F0:  Else
  2F8:  	ExecWait $Script_BasicAttack_10 
  304:  EndIf
  30C:  Return
  314:  End
}

/%

#new:SpecialFormation $SpecialFormation_802273A8_10
$AntiGuySummoned $Vector3D_8022739C_10 00000064 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_802273C4_10
$CovertGuySummoned $Vector3D_8022739C_10 00000064 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_802273E0_10
$MalpracticeGuySummoned $Vector3D_8022739C_10 00000064 00000000 00000000 00000000 00000000 

%/
