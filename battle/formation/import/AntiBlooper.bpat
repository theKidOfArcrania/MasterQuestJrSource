% Automatically dumped from section 1B

#new:Actor $AntiBlooper
{
% stats
[Index]        53b 
[Level]        65`b 
[MaxHP]        60`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021F554_AB 
% ai
[PartsCount]   2`s 
[PartsTable] $PartsTable_8021F6AC_AB 
[Script]      $Script_Init_8021F71C_AB 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        -111`b -88`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]    0`b  60`b % dx dy
[StatusIcon]   40`b  80`b % dx dy
}

#new:Function $Function_80218680_AB
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021876C_AB
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       8011D82C
   18:  ADDIU     A0, R0, 1
   1C:  DADDU     A0, R0, R0
   20:  DADDU     A1, A0, R0
   24:  DADDU     A2, A0, R0
   28:  DADDU     A3, A0, R0
   2C:  LAW       V0, 801512F0
   34:  ADDIU     V1, R0, 1
   38:  JAL       8011BE5C
   3C:  SB        V1, 0 (V0)
   40:  ADDIU     V0, R0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  DADDU     A0, R0, R0
   4C:  DADDU     A1, A0, R0
   50:  DADDU     A2, A0, R0
   54:  LW        V1, 70 (S0)
   58:  ADDIU     V0, R0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       8011BE5C
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218804_AB
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  ADDIU     V0, R0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  DADDU     A0, R0, R0
   20:  DADDU     A1, A0, R0
   24:  LW        V0, 70 (S0)
   28:  DADDU     A2, A0, R0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       8011BE5C
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  DADDU     V0, R0, R0
        .o58
   58:  DADDU     A0, R0, R0
   5C:  DADDU     A1, A0, R0
   60:  DADDU     A2, A0, R0
   64:  JAL       8011BE5C
   68:  DADDU     A3, A0, R0
   6C:  ADDIU     V0, R0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218884_AB
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S0, 18 (SP)
   14:  SDC1      F28, 48 (SP)
   18:  SDC1      F26, 40 (SP)
   1C:  SDC1      F24, 38 (SP)
   20:  SDC1      F22, 30 (SP)
   24:  SDC1      F20, 28 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  MTC1      V0, F28
   44:  NOP
   48:  CVT.S.W   F28, F28
   4C:  JAL       ~Func:get_variable
   50:  DADDU     A0, S1, R0
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  MTC1      V0, F26
   60:  NOP
   64:  CVT.S.W   F26, F26
   68:  JAL       ~Func:get_variable
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_variable
   7C:  DADDU     A0, S1, R0
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F20
   8C:  NOP
   90:  CVT.S.W   F20, F20
   94:  JAL       ~Func:get_variable
   98:  DADDU     A0, S1, R0
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_variable
   B0:  DADDU     A0, S1, R0
   B4:  LIF       F0, 40.0
   BC:  MTC1      V0, F24
   C0:  NOP
   C4:  CVT.S.W   F24, F24
   C8:  ADD.S     F0, F22, F0
   CC:  MOV.S     F12, F28
   D0:  MFC1      A2, F20
   D4:  MFC1      A3, F0
   D8:  JAL       80029C80
   DC:  MOV.S     F14, F26
   E0:  LIF       F2, 10.0
   E8:  DADDU     A0, R0, R0
   EC:  SUB.S     F20, F20, F2
   F0:  LIF       F2, 60.0
   F8:  LIF       F4, 2.5
  100:  ADD.S     F22, F22, F2
  104:  LIF       F2, 20.0
  10C:  ADDIU     V0, R0, 28
  110:  SW        V0, 14 (SP)
  114:  SWC1      F4, 10 (SP)
  118:  ADD.S     F24, F24, F2
  11C:  MFC1      A1, F20
  120:  MFC1      A2, F22
  124:  MFC1      A3, F24
  128:  JAL       80071B10
  12C:  MOV.S     F20, F0
  130:  LW        V1, C (V0)
  134:  SWC1      F20, 38 (V1)
  138:  LW        V1, C (V0)
  13C:  ADDIU     A0, R0, 2
  140:  SW        A0, 18 (V1)
  144:  LW        V1, C (V0)
  148:  SW        A0, 1C (V1)
  14C:  LW        V1, C (V0)
  150:  SW        A0, 20 (V1)
  154:  LW        V1, C (V0)
  158:  ADDIU     A0, R0, 50
  15C:  SW        A0, 28 (V1)
  160:  LW        V1, C (V0)
  164:  SW        A0, 2C (V1)
  168:  LW        V1, C (V0)
  16C:  SW        A0, 30 (V1)
  170:  LW        RA, 20 (SP)
  174:  LW        S1, 1C (SP)
  178:  LW        S0, 18 (SP)
  17C:  LDC1      F28, 48 (SP)
  180:  LDC1      F26, 40 (SP)
  184:  LDC1      F24, 38 (SP)
  188:  LDC1      F22, 30 (SP)
  18C:  LDC1      F20, 28 (SP)
  190:  ADDIU     V0, R0, 2
  194:  JR        RA
  198:  ADDIU     SP, SP, 50
}

#new:Function $Function_80218A20_AB
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218A78_AB
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       ~Func:get_variable
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       ~Func:get_variable
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218B2C_AB
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       ~Func:get_variable
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       ~Func:get_variable
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Script $Script_8021EF60_AB
{
    0:  Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 0050030C )
   30:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   4C:  If  *Var[B]  >  00000014 
   5C:  	Sub  *Var[B]  00000014 
   6C:  Else
   74:  	Set  *Var[B]  00000000 
   84:  EndIf
   8C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
   A0:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   BC:  Call     FallToGoal ( FFFFFF81 00000008 )
   D0:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
   EC:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  100:  Set  *Var[7]  *Var[4] 
  110:  Add  *Var[7]  *Var[4] 
  120:  Add  *Var[7]  *Var[0] 
  130:  MulF  *Var[7]  *Fixed[0.33007812] 
  140:  Set  *Var[8]  *Var[5] 
  150:  Add  *Var[8]  *Var[5] 
  160:  Add  *Var[8]  *Var[1] 
  170:  MulF  *Var[8]  *Fixed[0.33007812] 
  180:  Set  *Var[9]  *Var[6] 
  190:  Add  *Var[9]  *Var[6] 
  1A0:  Add  *Var[9]  *Var[2] 
  1B0:  MulF  *Var[9]  *Fixed[0.33007812] 
  1C0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  1D4:  Call     SetGoalPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
  1F0:  Call     FlyToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  20C:  Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
  224:  Call     SetAnimation 	( .Actor:Self 00000001 0050030C )
  23C:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  258:  Sub  *Var[B]  00000014 
  268:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  284:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  298:  Call     FallToGoal ( FFFFFF81 00000008 )
  2AC:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  2C0:  Set  *Var[7]  *Var[0] 
  2D0:  Add  *Var[7]  *Var[0] 
  2E0:  Add  *Var[7]  *Var[4] 
  2F0:  MulF  *Var[7]  *Fixed[0.33007812] 
  300:  Set  *Var[8]  *Var[1] 
  310:  Add  *Var[8]  *Var[1] 
  320:  Add  *Var[8]  *Var[5] 
  330:  MulF  *Var[8]  *Fixed[0.33007812] 
  340:  Set  *Var[9]  *Var[2] 
  350:  Add  *Var[9]  *Var[2] 
  360:  Add  *Var[9]  *Var[6] 
  370:  MulF  *Var[9]  *Fixed[0.33007812] 
  380:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  394:  Call     SetGoalPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
  3B0:  Call     FlyToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  3CC:  Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
  3E4:  Call     SetAnimation 	( .Actor:Self 00000001 0050030C )
  3FC:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  418:  Sub  *Var[B]  00000014 
  428:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  444:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  458:  Call     FallToGoal ( FFFFFF81 00000008 )
  46C:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  480:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  494:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B0:  Call     FlyToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8021F43C_AB
{
    0:  Call     SetGoalToHome 	( .Actor:Self )
   10:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   2C:  Set  *Var[3]  0000000C 
   3C:  ExecWait $Script_8021EF60_AB 
   48:  Return
   50:  End
}

#new:IdleAnimations $IdleAnimations_8021F494_AB
{
.Status:Normal    00500300
.Status:Stop      00500300
.Status:Sleep     00500307
.Status:Paralyze  00500308
.Status:Paralyze  00500300
.Status:Dizzy     00500308
.Status:Shrink    00500300
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F4D0_AB
{
.Status:Normal    0050030C
.Status:Stop      00500300
.Status:Sleep     00500307
.Status:Paralyze  00500308
.Status:Paralyze  00500300
.Status:Dizzy     00500308
.Status:Shrink    0050030C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F50C_AB
{
.Status:Normal    00500300
.Status:Stop      00500300
.Status:Sleep     00500307
.Status:Paralyze  00500308
.Status:Paralyze  00500300
.Status:Dizzy     00500308
.Status:Shrink    00500300
.Status:End
}

#new:DefenseTable $DefenseTable_8021F548_AB
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021F554_AB
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        80`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      1`
.Status:End
}

#new:StatusTable $StatusTable_8021F600_AB
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        75`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021F6AC_AB
{
00020000 01000000 005003FF $IdleAnimations_8021F494_AB $DefenseTable_8021F548_AB 00000000 00000000 00000000 00000000 
00800000 02001400 003C00FF 00000000 $DefenseTable_8021F548_AB 00000000 00000000 00E20000 00000000 
}

#new:Script $Script_Init_8021F71C_AB
{
    0:  Call     ForceHomePos 	( .Actor:Self 0000005A 0000002D FFFFFFF6 )
   1C:  Call     HPBarToHome 	( .Actor:Self )
   2C:  Call     SetActorScale 	( .Actor:Self *Fixed[2.0] *Fixed[2.0] *Fixed[2.0] )
   48:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   60:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   60:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   78:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_SuperBlooper_AB )
   78:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_SuperBlooper_AB )
   8C:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021F7E0_AB )
   A0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021FC18_AB )
   B4:  Return
   BC:  End
}

#new:Script $Script_Idle_8021F7E0_AB
{
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   20:  If  *Var[A]  &  00351000 
   30:  	Wait     00000001 
   3C:  	Goto     00000000 
   48:  EndIf
   50:  Call     SetIdleGoalToHome ( FFFFFF81 )
   60:  Call     GetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
   7C:  Add  *Var[1]  00000000 
   8C:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
   A8:  If  *Var[4]  >=  *Var[1] 
   B8:  	Goto     0000000B 
   C4:  EndIf
   CC:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021F4D0_AB )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
   FC:  Wait     00000009 
  108:  Call     SetAnimation 	( .Actor:Self 00000001 0050030C )
  120:  Call     SetActorIdleJumpGravity ( FFFFFF81 *Fixed[1.0] )
  134:  Call     SetActorIdleSpeed ( FFFFFF81 *Fixed[1.0] )
  148:  Call     SetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  164:  Call     IdleFlyToGoal ( FFFFFF81 00000000 00000000 0000000B )
  180:  Label    0000000B 
  18C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1A0:  If  *Var[A]  &  00351000 
  1B0:  	Wait     00000001 
  1BC:  	Goto     00000000 
  1C8:  EndIf
  1D0:  Call     SetIdleGoalToHome ( FFFFFF81 )
  1E0:  Call     GetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  1FC:  Add  *Var[1]  0000000A 
  20C:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  228:  If  *Var[4]  >=  *Var[1] 
  238:  	Goto     0000000C 
  244:  EndIf
  24C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021F4D0_AB )
  264:  Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
  27C:  Wait     00000009 
  288:  Call     SetAnimation 	( .Actor:Self 00000001 0050030C )
  2A0:  Call     SetActorIdleJumpGravity ( FFFFFF81 *Fixed[1.0] )
  2B4:  Call     SetActorIdleSpeed ( FFFFFF81 *Fixed[1.0] )
  2C8:  Call     SetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  2E4:  Call     IdleFlyToGoal ( FFFFFF81 00000000 00000000 0000000B )
  300:  Wait     00000003 
  30C:  Label    0000000C 
  318:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  32C:  If  *Var[A]  &  00351000 
  33C:  	Wait     00000001 
  348:  	Goto     00000000 
  354:  EndIf
  35C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021F50C_AB )
  374:  Call     SetIdleGoalToHome ( FFFFFF81 )
  384:  Call     GetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  3A0:  Add  *Var[1]  FFFFFFF6 
  3B0:  Call     SetActorIdleJumpGravity ( FFFFFF81 *Fixed[0.80078125] )
  3C4:  Call     SetActorIdleSpeed ( FFFFFF81 *Fixed[0.30078125] )
  3D8:  Call     SetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  3F4:  Call     IdleFlyToGoal ( FFFFFF81 00000000 00000001 0000000B )
  410:  Wait     00000001 
  41C:  Goto     00000000 
  428:  Return
  430:  End
}

#new:Script $Script_HandleEvent_8021FC18_AB
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00500304 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:Death
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00500304 
   C0:  		ExecWait DoNormalHit 
   CC:  		SetConst  *Var[0]  00000001 
   DC:  		SetConst  *Var[1]  00500304 
   EC:  		ExecWait $Script_80220100_AB 
   F8:  		Return
  100:  	Case  ==  .Event:BurnHit
  10C:  		Set  *Var[0]  00000001 
  11C:  		Set  *Var[1]  00500305 
  12C:  		Set  *Var[2]  00500306 
  13C:  		ExecWait DoBurnHit 
  148:  	Case  ==  .Event:BurnDeath
  154:  		Set  *Var[0]  00000001 
  164:  		Set  *Var[1]  00500305 
  174:  		Set  *Var[2]  00500306 
  184:  		ExecWait DoBurnHit 
  190:  		SetConst  *Var[0]  00000001 
  1A0:  		SetConst  *Var[1]  00500306 
  1B0:  		ExecWait $Script_80220100_AB 
  1BC:  		Return
  1C4:  	Case  ==  .Event:SpinSmashHit
  1D0:  		SetConst  *Var[0]  00000001 
  1E0:  		SetConst  *Var[1]  00500304 
  1F0:  		ExecWait 8029B998 
  1FC:  	Case  ==  .Event:SpinSmashDeath
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  00500304 
  228:  		ExecWait 8029B998 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  00500304 
  254:  		ExecWait $Script_80220100_AB 
  260:  		Return
  268:  	CaseOR  ==  00000017
  274:  	CaseOR  ==  .Event:Immune
  280:  	CaseOR  ==  .Event:AirLiftFailed
  28C:  	CaseOR  ==  0000001D
  298:  	CaseOR  ==  0000001E
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  00500300 
  2C4:  		ExecWait DoImmune 
  2D0:  	EndCaseGroup
  2D8:  	CaseOR  ==  .Event:StarBeam
  2E4:  	CaseOR  ==  00000014
  2F0:  		ExecWait $Script_80221E80_AB 
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  00500304 
  31C:  		ExecWait DoNormalHit 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:ShockHit
  33C:  		ExecWait $Script_80221E80_AB 
  348:  		SetConst  *Var[0]  00000001 
  358:  		SetConst  *Var[1]  00500304 
  368:  		ExecWait DoShockHit 
  374:  		SetConst  *Var[0]  00000001 
  384:  		SetConst  *Var[1]  00500304 
  394:  		ExecWait 8029BD70 
  3A0:  		ExecWait $Script_8021F43C_AB 
  3AC:  	Case  ==  .Event:ShockDeath
  3B8:  		ExecWait $Script_80221E80_AB 
  3C4:  		SetConst  *Var[0]  00000001 
  3D4:  		SetConst  *Var[1]  00500304 
  3E4:  		ExecWait DoShockHit 
  3F0:  		SetConst  *Var[0]  00000001 
  400:  		SetConst  *Var[1]  00500304 
  410:  		ExecWait 8029BD70 
  41C:  		SetConst  *Var[0]  00000001 
  42C:  		SetConst  *Var[1]  00500304 
  43C:  		ExecWait $Script_80220100_AB 
  448:  		Return
  450:  	Case  ==  .Event:EndFirstStrike
  45C:  		ExecWait $Script_8021F43C_AB 
  468:  	Case  ==  .Event:RecoverStatus
  474:  		SetConst  *Var[0]  00000001 
  484:  		SetConst  *Var[1]  00500300 
  494:  		ExecWait DoRecover 
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  4C4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4D8:  Return
  4E0:  End
}

#new:Script $Script_80220100_AB
{
    0:  ExecWait DoDeath 
    C:  Return
   14:  End
}

#new:Script $Script_NextTurn_SuperBlooper_AB
{
Call     GetBattlePhase ( *Var[0] )
Switch   *Var[0] 
	Case     ==  .Phase:PlayerBegin
	Call     	GetActorVar ( .Actor:Self 0000000A *Var[0] )
	If       *Var[0] ==  00000000
		ExecWait $Script_SpawnBabies_AB
		Call 	SetActorVar	( .Actor:Self 0000000A 00000001 )
	EndIf
EndSwitch
Return
End 
}

#new:Script $Script_TakeTurn_SuperBlooper_AB
{
    0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000003 
   30:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   48:  		If  *Var[0]  ==  00000000 
   58:  			Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   70:  		EndIf
   78:  	Case  ==  00000001 
   84:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
   98:  		If  *Var[0]  &  00080000 
   A8:  			Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
   C0:  		Else
   C8:  			Call     ActorExists 	( .Actor:Enemy1 *Var[0] )
   DC:  			If  *Var[0]  !=  00000000 
   EC:  				Call     ActorExists 	( .Actor:Enemy2 *Var[0] )
  100:  				If  *Var[0]  !=  00000000 
  110:  					Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  128:  				EndIf
  130:  			EndIf
  138:  		EndIf
  140:  	Default
  148:  EndSwitch
  150:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  168:  Switch  *Var[0] 
  174:  	Case  ==  00000001 
  180:  		Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  198:  		ExecWait $Script_SpawnBabies_AB 
  1A4:  		Return
  1AC:  	Case  ==  00000002 
  1B8:  		Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
  1D0:  		ExecWait $Script_Tackle_SuperBlooper_AB 
  1DC:  		Return
  1E4:  	Case  ==  00000003 
  1F0:  		Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  208:  		ExecWait $Script_SprayInk_SuperBlooper_AB  
  214:  		Return
  21C:  	Default
  224:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  238:  		If  *Var[0]  !&  00080000 
  248:  			Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  260:  			Call     RandInt     	( 00000064 *Var[0] )
  274:  			If  *Var[0]  <  00000032 
  284:  				ExecWait $Script_Tackle_SuperBlooper_AB 
  290:  			Else
  298:  				ExecWait $Script_SprayInk_SuperBlooper_AB 
  2A4:  			EndIf
  2AC:  		Else
  2B4:  			ExecWait $Script_Tackle_SuperBlooper_AB 
  2C0:  		EndIf
  2C8:  EndSwitch
  2D0:  Return
  2D8:  End
}

#new:Script $Script_Tackle_SuperBlooper_AB
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   58:  Set  *Var[1]  00000064 
   68:  Set  *Var[3]  0000000F 
   78:  ExecWait $Script_8021EF60_AB 
   84:  Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
   98:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
   BC:  Switch  *Var[F] 
   C8:  	CaseOR  ==  00000006 
   D4:  	CaseOR  ==  00000005 
   E0:  		Thread
   E8:  			Set  *Var[0]  00000000 
   F8:  			Loop     00000024 
  104:  				Add  *Var[0]  0000001E 
  114:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  128:  				Wait     00000001 
  134:  			EndLoop
  13C:  			Call     SetActorYaw 	( .Actor:Self 00000000 )
  150:  		EndThread
  158:  		Call     SetAnimation 	( .Actor:Self 00000001 0050030D )
  170:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  18C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  1A0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  1DC:  		If  *Var[F]  ==  00000005 
  1EC:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  210:  		EndIf
  218:  		Add  *Var[0]  0000001E 
  228:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  244:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  264:  		Add  *Var[0]  00000014 
  274:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  290:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2B0:  		ExecWait $Script_8021F43C_AB 
  2BC:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  2D0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2E4:  		Return
  2EC:  	EndCaseGroup
  2F4:  EndSwitch
  2FC:  Thread
  304:  	Set  *Var[0]  00000000 
  314:  	Loop     00000010 
  320:  		Add  *Var[0]  0000001E 
  330:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  344:  		Wait     00000001 
  350:  	EndLoop
  358:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  36C:  EndThread
  374:  Call     SetAnimation 	( .Actor:Self 00000001 0050030D )
  38C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  3A0:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  3BC:  Add  *Var[1]  0000001E 
  3CC:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3E8:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  408:  Wait     00000002 
  414:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000006 00000020 )
  43C:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  450:  If  *Var[0]  &  00100000 
  460:  	Call     SetAnimation 	( .Actor:Self 00000001 00500304 )
  478:  Else
  480:  	Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
  498:  EndIf
  4A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4BC:  Add  *Var[0]  0000001E 
  4CC:  Sub  *Var[1]  0000000F 
  4DC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  4F0:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  50C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  52C:  ExecWait $Script_8021F43C_AB 
  538:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  54C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  560:  Return
  568:  End
}

#new:Script $Script_SprayInk_SuperBlooper_AB
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   68:  Add  *Var[0]  00000055 
   78:  Add  *Var[1]  0000002D 
   88:  Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
   A0:  Call     SetAnimation 	( .Actor:Self 00000001 0050030C )
   B8:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   D4:  If  *Var[B]  >  0000001E 
   E4:  	Sub  *Var[B]  0000001E 
   F4:  Else
   FC:  	Set  *Var[B]  00000000 
  10C:  EndIf
  114:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  128:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  144:  Call     FallToGoal ( FFFFFF81 00000008 )
  158:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  174:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  188:  Set  *Var[7]  *Var[4] 
  198:  Add  *Var[7]  *Var[0] 
  1A8:  MulF  *Var[7]  *Fixed[0.5] 
  1B8:  Set  *Var[8]  *Var[5] 
  1C8:  Add  *Var[8]  *Var[1] 
  1D8:  MulF  *Var[8]  *Fixed[0.5] 
  1E8:  Set  *Var[9]  *Var[6] 
  1F8:  Add  *Var[9]  *Var[2] 
  208:  MulF  *Var[9]  *Fixed[0.5] 
  218:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  22C:  Call     SetGoalPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
  248:  Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
  264:  Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
  27C:  Call     SetAnimation 	( .Actor:Self 00000001 0050030C )
  294:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  2B0:  Sub  *Var[B]  00000014 
  2C0:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  2DC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  2F0:  Call     FallToGoal ( FFFFFF81 00000008 )
  304:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  318:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  32C:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  348:  Call     FlyToGoal  	( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
  364:  Call     SetAnimation 	( .Actor:Self 00000001 00500303 )
  37C:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  398:  Sub  *Var[B]  0000001E 
  3A8:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.20019531] )
  3BC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
  3D0:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  3EC:  Call     FlyToGoal  	( .Actor:Self 00000010 00000000 .Easing:Linear )
  408:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000028 00000000 )
  424:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFD8 )
  440:  Call     PlaySoundAtActor 	( .Actor:Self 000003DE )
  454:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  470:  Add  *Var[3]  00000001 
  480:  Sub  *Var[4]  0000001E 
  490:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4AC:  Call     $Function_80218884_AB ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] )
  4D0:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 10000000 00000000 00000001 00000010 )
  4F4:  Switch  *Var[F] 
  500:  	CaseOR  ==  00000006 
  50C:  	CaseOR  ==  00000005 
  518:  		Wait     0000000A 
  524:  		If  *Var[F]  ==  00000005 
  534:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  558:  		EndIf
  560:  		Wait     0000001E 
  56C:  		Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
  584:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  5A0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  5BC:  		ExecWait $Script_8021F43C_AB 
  5C8:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  5DC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  5F0:  		Return
  5F8:  	EndCaseGroup
  600:  EndSwitch
  608:  Wait     0000000A 
  614:  Call     SetGoalToTarget 	( .Actor:Self )
  624:  Call     80269EAC ( 0000001A )
  634:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 00000006 00000020 )
  65C:  Wait     0000001E 
  668:  Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
  680:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  69C:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  6B8:  ExecWait $Script_8021F43C_AB 
  6C4:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  6D8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6EC:  Return
  6F4:  End
}

#new:Script $Script_SpawnBabies_AB
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   44:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   60:  Call     UseBattleCamPreset 	( 00000007 )
   70:  Call     BattleCamTargetActor ( .Actor:Self )
   80:  Call     SetBattleCamOffsetZ 	( 00000032 )
   90:  Call     SetBattleCamZoom  	( 0000014A )
   A0:  Call     MoveBattleCamOver 	( 00000028 )
   B0:  Wait     00000014 
   BC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
   D0:  Call     $Function_8021876C_AB ( )
   DC:  Call     $Function_80218680_AB ( 00000032 00000014 )
   F0:  Thread
   F8:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.30078125] )
  114:  EndThread
  11C:  Call     UseBattleCamPreset 	( 00000007 )
  12C:  Call     BattleCamTargetActor ( .Actor:Self )
  13C:  Call     SetBattleCamOffsetZ 	( 00000041 )
  14C:  Call     SetBattleCamZoom  	( 000000F0 )
  15C:  Call     MoveBattleCamOver 	( 0000000F )
  16C:  Call     SetAnimation 	( .Actor:Self 00000001 00500309 )
  184:  Wait     0000000F 
  190:  Call     $Function_80218680_AB ( 00000064 00000014 )
  1A4:  Thread
  1AC:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.40039062] )
  1C8:  EndThread
  1D0:  Call     UseBattleCamPreset 	( 00000007 )
  1E0:  Call     BattleCamTargetActor ( .Actor:Self )
  1F0:  Call     SetBattleCamOffsetZ 	( 00000050 )
  200:  Call     SetBattleCamZoom  	( 00000096 )
  210:  Call     MoveBattleCamOver 	( 0000000F )
  220:  Call     SetAnimation 	( .Actor:Self 00000001 0050030A )
  238:  Wait     0000000F 
  244:  Call     $Function_80218680_AB ( 00000096 00000014 )
  258:  Thread
  260:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.5] )
  27C:  EndThread
  284:  Call     UseBattleCamPreset 	( 00000007 )
  294:  Call     BattleCamTargetActor ( .Actor:Self )
  2A4:  Call     SetBattleCamOffsetZ 	( 0000005F )
  2B4:  Call     SetBattleCamZoom  	( 0000003C )
  2C4:  Call     MoveBattleCamOver 	( 0000000F )
  2D4:  Call     SetAnimation 	( .Actor:Self 00000001 0050030B )
  2EC:  Wait     0000001E 
  2F8:  Call     UseBattleCamPreset 	( 00000002 )
  308:  Call     MoveBattleCamOver 	( 00000014 )
  318:  Call     SetAnimation 	( .Actor:Self 00000001 00500303 )
  330:  Wait     0000000A 
  33C:  Call     ActorExists 	( .Actor:Enemy1 *Var[1] )
  350:  If  *Var[1]  ==  00000000 
  360:  	Call     PlaySoundAtActor 	( .Actor:Self 000003D9 )
  374:  	Call     SummonEnemy 	( $SpecialFormation_80221EFC_AB 00000000 )
  388:  EndIf
  390:  Call     ActorExists 	( .Actor:Enemy2 *Var[1] )
  3A4:  If  *Var[1]  ==  00000000 
  3B4:  	Call     PlaySoundAtActor 	( .Actor:Self 000003D9 )
  3C8:  	Call     SummonEnemy 	( $SpecialFormation_80221F18_AB 00000000 )
  3DC:  EndIf
  3E4:  Wait     00000002 
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 0050030C )
  408:  Call     $Function_80218804_AB ( )
  414:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  428:  Call     UseIdleAnimation 	( .Actor:Self .True )
  43C:  Return
  444:  Return
  44C:  End
}

#new:Script $Script_Enrage_AB
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   44:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   60:  Call     UseBattleCamPreset 	( 00000007 )
   70:  Call     BattleCamTargetActor ( .Actor:Self )
   80:  Call     SetBattleCamOffsetZ 	( 0000001C )
   90:  Call     SetBattleCamZoom  	( 00000129 )
   A0:  Call     MoveBattleCamOver 	( 00000032 )
   B0:  Wait     00000014 
   BC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
   D0:  Call     $Function_8021876C_AB ( )
   DC:  Call     $Function_80218680_AB ( 00000046 00000050 )
   F0:  Thread
   F8:  	Call     ShakeCam    	( 00000001 00000000 00000028 *Fixed[0.30078125] )
  114:  EndThread
  11C:  Call     SetAnimation 	( .Actor:Self 00000001 00500309 )
  134:  Wait     0000000A 
  140:  Call     SetAnimation 	( .Actor:Self 00000001 0050030A )
  158:  Wait     0000000A 
  164:  Call     SetAnimation 	( .Actor:Self 00000001 0050030B )
  17C:  Wait     0000000A 
  188:  ExecWait $Script_80221DC4_AB 
  194:  Call     UseBattleCamPreset 	( 00000002 )
  1A4:  Call     MoveBattleCamOver 	( 0000001E )
  1B4:  Call     $Function_80218804_AB ( )
  1C0:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  1D4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  1E8:  Return
  1F0:  Return
  1F8:  End
}

#new:Script $Script_EnragedTackle_AB
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   58:  Set  *Var[1]  00000064 
   68:  Set  *Var[3]  0000000F 
   78:  ExecWait $Script_8021EF60_AB 
   84:  Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
   98:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
   BC:  Switch  *Var[F] 
   C8:  	CaseOR  ==  00000006 
   D4:  	CaseOR  ==  00000005 
   E0:  		Thread
   E8:  			Set  *Var[0]  00000000 
   F8:  			Loop     00000024 
  104:  				Add  *Var[0]  0000001E 
  114:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  128:  				Wait     00000001 
  134:  			EndLoop
  13C:  			Call     SetActorYaw 	( .Actor:Self 00000000 )
  150:  		EndThread
  158:  		Call     SetAnimation 	( .Actor:Self 00000001 0050030D )
  170:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  18C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  1A0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  1DC:  		ExecWait $Script_80221E80_AB 
  1E8:  		If  *Var[F]  ==  00000005 
  1F8:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  21C:  		EndIf
  224:  		Add  *Var[0]  0000001E 
  234:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  270:  		Add  *Var[0]  00000014 
  280:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  29C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2BC:  		ExecWait $Script_8021F43C_AB 
  2C8:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  2DC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2F0:  		Return
  2F8:  	EndCaseGroup
  300:  EndSwitch
  308:  Thread
  310:  	Set  *Var[0]  00000000 
  320:  	Loop     00000010 
  32C:  		Add  *Var[0]  0000001E 
  33C:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  350:  		Wait     00000001 
  35C:  	EndLoop
  364:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  378:  EndThread
  380:  Call     SetAnimation 	( .Actor:Self 00000001 0050030D )
  398:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  3AC:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  3C8:  Add  *Var[1]  0000001E 
  3D8:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F4:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  414:  Call     GetStatusFlags ( .Actor:Player *Var[E] )
  428:  If  *Var[E]  &  00100000 
  438:  	Goto     00000000 
  444:  EndIf
  44C:  Wait     00000002 
  458:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 00000008 00000040 )
  480:  Call     GetPlayerHP 	( *Var[E] )
  490:  If  *Var[E]  ==  00000000 
  4A0:  	Goto     00000001 
  4AC:  EndIf
  4B4:  Thread
  4BC:  	Set  *Var[0]  00000000 
  4CC:  	Loop     00000014 
  4D8:  		Add  *Var[0]  00000024 
  4E8:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  4FC:  		Wait     00000001 
  508:  	EndLoop
  510:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  524:  EndThread
  52C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.40039062] )
  540:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  55C:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  57C:  Label    00000000 
  588:  Wait     00000002 
  594:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 00000008 00000020 )
  5BC:  Label    00000001 
  5C8:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  5DC:  If  *Var[0]  &  00100000 
  5EC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500304 )
  604:  Else
  60C:  	Call     SetAnimation 	( .Actor:Self 00000001 00500300 )
  624:  EndIf
  62C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  648:  Add  *Var[0]  0000001E 
  658:  Sub  *Var[1]  0000000F 
  668:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  67C:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  698:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  6B8:  ExecWait $Script_80221E80_AB 
  6C4:  ExecWait $Script_8021F43C_AB 
  6D0:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  6E4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6F8:  Return
  700:  End
}

#new:Script $Script_80221DC4_AB
{
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   18:  Call     8026ED20 ( FFFFFF81 00000001 00000001 )
   30:  Call     8026EBF8 ( FFFFFF81 00000001 00000000 00000002 00000000 00000006 0000000C 00000006 00000000 00000000 )
   64:  Call     8026EA7C ( FFFFFF81 00000001 0000000F )
   7C:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021F600_AB )
   90:  Call     SetPartEventBits 	( .Actor:Self 00000002 00400000 .True )
   AC:  Return
   B4:  End
}

#new:Script $Script_80221E80_AB
{
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   18:  Call     8026ED20 ( FFFFFF81 00000001 00000000 )
   30:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021F554_AB )
   44:  Call     SetPartEventBits 	( .Actor:Self 00000002 00400000 .False )
   60:  Return
   68:  End
}

#new:Vector3D $Vector3D_80221EF0_AC
{
90` 55` 0`
}

#new:Vector3D $Vector3D_80221EF0_AB
{
90` 55` 0`
}

#new:SpecialFormation $SpecialFormation_80221EFC_AB
{
$10_AntiGuy $Vector3D_80221EF0_AB 0000005F 0000001E 00000044 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80221F18_AB
{
$10_AntiGuy $Vector3D_80221EF0_AC 0000005E 00000086 0000002D 00000000 00000000 
}

#new:Script $Script_80221F40_AB
{
    0:  Call     SetAnimation 	( .Actor:Self 00000001 00510000 )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 00510001 )
   30:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   4C:  If  *Var[B]  >  00000014 
   5C:  	Sub  *Var[B]  00000014 
   6C:  Else
   74:  	Set  *Var[B]  00000000 
   84:  EndIf
   8C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
   A0:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   BC:  Call     FallToGoal ( FFFFFF81 00000008 )
   D0:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
   EC:  Call     PlaySoundAtActor 	( .Actor:Self 0000035F )
  100:  Set  *Var[7]  *Var[4] 
  110:  Add  *Var[7]  *Var[4] 
  120:  Add  *Var[7]  *Var[0] 
  130:  MulF  *Var[7]  *Fixed[0.33007812] 
  140:  Set  *Var[8]  *Var[5] 
  150:  Add  *Var[8]  *Var[5] 
  160:  Add  *Var[8]  *Var[1] 
  170:  MulF  *Var[8]  *Fixed[0.33007812] 
  180:  Set  *Var[9]  *Var[6] 
  190:  Add  *Var[9]  *Var[6] 
  1A0:  Add  *Var[9]  *Var[2] 
  1B0:  MulF  *Var[9]  *Fixed[0.33007812] 
  1C0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  1D4:  Call     SetGoalPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
  1F0:  Call     FlyToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  20C:  Call     SetAnimation 	( .Actor:Self 00000001 00510000 )
  224:  Call     SetAnimation 	( .Actor:Self 00000001 00510001 )
  23C:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  258:  Sub  *Var[B]  00000014 
  268:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  284:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  298:  Call     FallToGoal ( FFFFFF81 00000008 )
  2AC:  Call     PlaySoundAtActor 	( .Actor:Self 0000035F )
  2C0:  Set  *Var[7]  *Var[0] 
  2D0:  Add  *Var[7]  *Var[0] 
  2E0:  Add  *Var[7]  *Var[4] 
  2F0:  MulF  *Var[7]  *Fixed[0.33007812] 
  300:  Set  *Var[8]  *Var[1] 
  310:  Add  *Var[8]  *Var[1] 
  320:  Add  *Var[8]  *Var[5] 
  330:  MulF  *Var[8]  *Fixed[0.33007812] 
  340:  Set  *Var[9]  *Var[2] 
  350:  Add  *Var[9]  *Var[2] 
  360:  Add  *Var[9]  *Var[6] 
  370:  MulF  *Var[9]  *Fixed[0.33007812] 
  380:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  394:  Call     SetGoalPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
  3B0:  Call     FlyToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  3CC:  Call     SetAnimation 	( .Actor:Self 00000001 00510000 )
  3E4:  Call     SetAnimation 	( .Actor:Self 00000001 00510001 )
  3FC:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  418:  Sub  *Var[B]  00000014 
  428:  Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  444:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  458:  Call     FallToGoal ( FFFFFF81 00000008 )
  46C:  Call     PlaySoundAtActor 	( .Actor:Self 0000035F )
  480:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  494:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B0:  Call     FlyToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8022241C_AB
{
    0:  Call     SetGoalToHome 	( .Actor:Self )
   10:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   2C:  Set  *Var[3]  0000000C 
   3C:  ExecWait $Script_80221F40_AB 
   48:  Return
   50:  End
}

#new:IdleAnimations $IdleAnimations_80222474_AB
{
.Status:Normal    00510000
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510000
.Status:End
}

#new:IdleAnimations $IdleAnimations_802224B0_AB
{
.Status:Normal    00510001
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510001
.Status:End
}

#new:IdleAnimations $IdleAnimations_802224EC_AB
{
.Status:Normal    00510000
.Status:Stop      00510000
.Status:Sleep     00510006
.Status:Paralyze  00510007
.Status:Paralyze  00510000
.Status:Dizzy     00510007
.Status:Shrink    00510000
.Status:End
}

#new:DefenseTable $DefenseTable_80222528_AB
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80222534_AB
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep     100`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink      0`
.Status:Stop      100`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_802225E0_AB
{
00020000 01000000 005500FF $IdleAnimations_80222474_AB $DefenseTable_80222528_AB 00000000 00000000 00000000 00000000 
00800000 02001B00 000000FF 00000000 $DefenseTable_80222528_AB 00000000 00000000 01F30000 00000000 
}

#new:Actor $BlooperBaby_AB
{
% stats
[Index]        CCb 
[Level]         0`b 
[MaxHP]         6`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80222534_AB 
% ai
[PartsCount]   2`s 
[PartsTable] $PartsTable_802225E0_AB 
[Script]      $Script_Init_80222650_AB 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  25`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -12`b  20`b % dx dy
[StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_Init_80222650_AB
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022319C_AB )
   14:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80222CF8_AB )
   28:  Call     PlaySoundAtActor 	( .Actor:Self 0000035F )
   3C:  Call     $Function_80218A20_AB ( 00000050 00000014 )
   50:  Call     SetAnimation 	( .Actor:Self 00000001 00510000 )
   68:  Call     SetAnimation 	( .Actor:Self 00000001 00510001 )
   80:  Call     GetActorPos 	( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
   9C:  Add  *Var[1]  0000000A 
   AC:  Sub  *Var[2]  0000000A 
   BC:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D8:  Set  *Var[1]  00000014 
   E8:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
   FC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[0.30078125] )
  110:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Call     FlyToGoal  	( .Actor:Self 00000008 00000000 .Easing:Linear )
  148:  Call     PlaySoundAtActor 	( .Actor:Self 0000035F )
  15C:  Call     $Function_80218A20_AB ( 00000050 00000014 )
  170:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  188:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  1A0:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[2] )
  1B8:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  1E8:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  Call     FlyToGoal  	( .Actor:Self 0000000C FFFFFFFE .Easing:CubicOut )
  220:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  23C:  Call     BindIdle    	( .Actor:Self $Script_Idle_802228C0_AB )
  250:  Call     HPBarToHome 	( .Actor:Self )
  260:  Return
  268:  End
}

#new:Script $Script_Idle_802228C0_AB
{
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   20:  If  *Var[A]  &  00351000 
   30:  	Wait     00000001 
   3C:  	Goto     00000000 
   48:  EndIf
   50:  Call     SetGoalToHome 	( .Actor:Self )
   60:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   7C:  Add  *Var[1]  00000000 
   8C:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
   A8:  If  *Var[4]  >=  *Var[1] 
   B8:  	Goto     0000000B 
   C4:  EndIf
   CC:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802224B0_AB )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00510000 )
   FC:  Wait     00000009 
  108:  Call     SetAnimation 	( .Actor:Self 00000001 00510001 )
  120:  Call     SetActorIdleJumpGravity ( FFFFFF81 *Fixed[1.0] )
  134:  Call     SetActorIdleSpeed ( FFFFFF81 *Fixed[1.0] )
  148:  Call     SetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  164:  Call     IdleFlyToGoal ( FFFFFF81 00000000 00000000 0000000B )
  180:  Label    0000000B 
  18C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1A0:  If  *Var[A]  &  00351000 
  1B0:  	Wait     00000001 
  1BC:  	Goto     00000000 
  1C8:  EndIf
  1D0:  Call     SetGoalToHome 	( .Actor:Self )
  1E0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1FC:  Add  *Var[1]  00000005 
  20C:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  228:  If  *Var[4]  >=  *Var[1] 
  238:  	Goto     0000000C 
  244:  EndIf
  24C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802224B0_AB )
  264:  Call     SetAnimation 	( .Actor:Self 00000001 00510000 )
  27C:  Wait     00000009 
  288:  Call     SetAnimation 	( .Actor:Self 00000001 00510001 )
  2A0:  Call     SetActorIdleJumpGravity ( FFFFFF81 *Fixed[1.0] )
  2B4:  Call     SetActorIdleSpeed ( FFFFFF81 *Fixed[1.0] )
  2C8:  Call     SetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  2E4:  Call     IdleFlyToGoal ( FFFFFF81 00000000 00000000 0000000B )
  300:  Wait     00000003 
  30C:  Label    0000000C 
  318:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  32C:  If  *Var[A]  &  00351000 
  33C:  	Wait     00000001 
  348:  	Goto     00000000 
  354:  EndIf
  35C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802224EC_AB )
  374:  Call     SetGoalToHome 	( .Actor:Self )
  384:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3A0:  Add  *Var[1]  FFFFFFFB 
  3B0:  Call     SetActorIdleJumpGravity ( FFFFFF81 *Fixed[0.80078125] )
  3C4:  Call     SetActorIdleSpeed ( FFFFFF81 *Fixed[0.30078125] )
  3D8:  Call     SetIdleGoal ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  3F4:  Call     IdleFlyToGoal ( FFFFFF81 00000000 00000001 0000000B )
  410:  Wait     00000001 
  41C:  Goto     00000000 
  428:  Return
  430:  End
}

#new:Script $Script_HandleEvent_80222CF8_AB
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00510002 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:Death
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00510002 
   C0:  		ExecWait DoNormalHit 
   CC:  		SetConst  *Var[1]  00510003 
   DC:  		ExecWait $Script_80223170_AB 
   E8:  		Return
   F0:  	Case  ==  .Event:BurnHit
   FC:  		Set  *Var[0]  00000001 
  10C:  		Set  *Var[1]  00510004 
  11C:  		Set  *Var[2]  00510005 
  12C:  		ExecWait DoBurnHit 
  138:  	Case  ==  .Event:BurnDeath
  144:  		Set  *Var[0]  00000001 
  154:  		Set  *Var[1]  00510004 
  164:  		Set  *Var[2]  00510005 
  174:  		ExecWait DoBurnHit 
  180:  		SetConst  *Var[1]  00510005 
  190:  		ExecWait $Script_80223170_AB 
  19C:  		Return
  1A4:  	Case  ==  .Event:SpinSmashHit
  1B0:  		SetConst  *Var[0]  00000001 
  1C0:  		SetConst  *Var[1]  00510002 
  1D0:  		ExecWait 8029B998 
  1DC:  	Case  ==  .Event:SpinSmashDeath
  1E8:  		SetConst  *Var[0]  00000001 
  1F8:  		SetConst  *Var[1]  00510002 
  208:  		ExecWait 8029B998 
  214:  		SetConst  *Var[0]  00000001 
  224:  		SetConst  *Var[1]  00510003 
  234:  		ExecWait $Script_80223170_AB 
  240:  		Return
  248:  	CaseOR  ==  00000017
  254:  	CaseOR  ==  .Event:Immune
  260:  	CaseOR  ==  .Event:AirLiftFailed
  26C:  		SetConst  *Var[0]  00000001 
  27C:  		SetConst  *Var[1]  00510000 
  28C:  		ExecWait DoImmune 
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:ShockHit
  2AC:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  2C8:  		SetConst  *Var[0]  00000001 
  2D8:  		SetConst  *Var[1]  00510002 
  2E8:  		ExecWait DoShockHit 
  2F4:  		SetConst  *Var[0]  00000001 
  304:  		SetConst  *Var[1]  00510002 
  314:  		ExecWait 8029BD70 
  320:  		ExecWait $Script_8022241C_AB 
  32C:  	CaseOR  ==  .Event:ShockDeath
  338:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  		SetConst  *Var[0]  00000001 
  364:  		SetConst  *Var[1]  00510002 
  374:  		ExecWait DoShockHit 
  380:  		SetConst  *Var[0]  00000001 
  390:  		SetConst  *Var[1]  00510002 
  3A0:  		ExecWait 8029BD70 
  3AC:  		SetConst  *Var[0]  00000001 
  3BC:  		SetConst  *Var[1]  00510003 
  3CC:  		ExecWait $Script_80223170_AB 
  3D8:  		Return
  3E0:  	Case  ==  .Event:EndFirstStrike
  3EC:  		ExecWait $Script_8022241C_AB 
  3F8:  	Case  ==  .Event:RecoverStatus
  404:  		SetConst  *Var[0]  00000001 
  414:  		SetConst  *Var[1]  00510000 
  424:  		ExecWait DoRecover 
  430:  	Default
  438:  EndSwitch
  440:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  454:  Call     UseIdleAnimation 	( .Actor:Self .True )
  468:  Return
  470:  End
}

#new:Script $Script_80223170_AB
{
    0:  SetConst  *Var[0]  00000001 
   10:  ExecWait DoDeath 
   1C:  Return
   24:  End
}

#new:Script $Script_TakeTurn_8022319C_AB
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   68:  Set  *Var[1]  00000064 
   78:  Set  *Var[3]  0000000C 
   88:  ExecWait $Script_80221F40_AB 
   94:  Thread
   9C:  	Wait     00000002 
   A8:  	Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
   BC:  EndThread
   C4:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
   E8:  Switch  *Var[F] 
   F4:  	CaseOR  ==  00000006 
  100:  	CaseOR  ==  00000005 
  10C:  		Call     SetAnimation 	( .Actor:Self 00000001 00510002 )
  124:  		Call     SetGoalToTarget 	( .Actor:Self )
  134:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  150:  		Set  *Var[1]  00000000 
  160:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  174:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  190:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  1B0:  		If  *Var[F]  ==  00000005 
  1C0:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  1E4:  		EndIf
  1EC:  		Add  *Var[0]  0000001E 
  1FC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  218:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  238:  		Add  *Var[0]  00000014 
  248:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  284:  		ExecWait $Script_8022241C_AB 
  290:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  2A4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2B8:  		Return
  2C0:  	EndCaseGroup
  2C8:  	CaseOR  ==  00000007 
  2D4:  	CaseOR  ==  00000008 
  2E0:  		Call     SetAnimation 	( .Actor:Self 00000001 00510002 )
  2F8:  		Call     SetGoalToTarget 	( .Actor:Self )
  308:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  324:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  338:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  354:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  374:  		If  *Var[F]  ==  00000007 
  384:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 00000000 00000040 )
  3AC:  		EndIf
  3B4:  		Add  *Var[0]  0000001E 
  3C4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3E0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  400:  		ExecWait $Script_8022241C_AB 
  40C:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  420:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  434:  		Return
  43C:  	EndCaseGroup
  444:  EndSwitch
  44C:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  468:  Add  *Var[1]  00000032 
  478:  Call     UseBattleCamPreset 	( 00000013 )
  488:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
  4A0:  Call     SetBattleCamZoom  	( 00000145 )
  4B0:  Call     MoveBattleCamOver 	( 0000001E )
  4C0:  Call     SetAnimation 	( .Actor:Self 00000001 00510002 )
  4D8:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  4EC:  Call     SetGoalToTarget 	( .Actor:Self )
  4FC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:  Sub  *Var[1]  0000000A 
  528:  Sub  *Var[2]  00000005 
  538:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  554:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  574:  Call     SetGoalToTarget 	( .Actor:Self )
  584:  Call     SetAnimation 	( .Actor:Self 00000001 00510008 )
  59C:  Call     ShowMessageBox ( 00000031 00007FFF )
  5B0:  Call     802694A4 ( 00000001 )
  5C0:  Call     LoadActionCommand 	( 00000006 )
  5D0:  Call     802A9000 ( )
  5DC:  Call     SetupMashMeter ( 00000001 0000000F 00000000 00000000 00000000 00000000 )
  600:  Wait     0000000A 
  60C:  Call     SetBattleFlagBits 	( 00004000 .False )
  620:  Call     802A9110 ( 00000000 00007FFF 00000003 )
  638:  Loop     00000005 
  644:  	Call     UseIdleAnimation 	( .Actor:Player .False )
  658:  	Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  670:  	Set  *Flag[00]  00000000 
  680:  	Loop     0000000A 
  68C:  		Call     GetActionSuccessCopy ( *Var[1] )
  69C:  		If  *Var[1]  ==  00000001 
  6AC:  			Set  *Flag[00]  00000001 
  6BC:  			BreakLoop
  6C4:  		EndIf
  6CC:  		Wait     00000001 
  6D8:  	EndLoop
  6E0:  	If  *Flag[00]  ==  00000001 
  6F0:  		Call     DispatchEventPlayer ( 00000042 )
  700:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  714:  		BreakLoop
  71C:  	EndIf
  724:  	Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  738:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  754:  	Set  *Flag[00]  00000000 
  764:  	Loop     00000002 
  770:  		Call     GetActionSuccessCopy ( *Var[1] )
  780:  		If  *Var[1]  ==  00000001 
  790:  			Set  *Flag[00]  00000001 
  7A0:  			BreakLoop
  7A8:  		EndIf
  7B0:  		Wait     00000001 
  7BC:  	EndLoop
  7C4:  	If  *Flag[00]  ==  00000001 
  7D4:  		Call     DispatchEventPlayer ( 00000042 )
  7E4:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  7F8:  		BreakLoop
  800:  	EndIf
  808:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.1005859] *Fixed[1.0] )
  824:  	Set  *Flag[00]  00000000 
  834:  	Loop     00000002 
  840:  		Call     GetActionSuccessCopy ( *Var[1] )
  850:  		If  *Var[1]  ==  00000001 
  860:  			Set  *Flag[00]  00000001 
  870:  			BreakLoop
  878:  		EndIf
  880:  		Wait     00000001 
  88C:  	EndLoop
  894:  	If  *Flag[00]  ==  00000001 
  8A4:  		Call     DispatchEventPlayer ( 00000042 )
  8B4:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  8C8:  		BreakLoop
  8D0:  	EndIf
  8D8:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.2001953] *Fixed[1.0] )
  8F4:  	Set  *Flag[00]  00000000 
  904:  	Loop     00000003 
  910:  		Call     GetActionSuccessCopy ( *Var[1] )
  920:  		If  *Var[1]  ==  00000001 
  930:  			Set  *Flag[00]  00000001 
  940:  			BreakLoop
  948:  		EndIf
  950:  		Wait     00000001 
  95C:  	EndLoop
  964:  	If  *Flag[00]  ==  00000001 
  974:  		Call     DispatchEventPlayer ( 00000042 )
  984:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  998:  		BreakLoop
  9A0:  	EndIf
  9A8:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  9C4:  	Set  *Flag[00]  00000000 
  9D4:  	Loop     00000002 
  9E0:  		Call     GetActionSuccessCopy ( *Var[1] )
  9F0:  		If  *Var[1]  ==  00000001 
  A00:  			Set  *Flag[00]  00000001 
  A10:  			BreakLoop
  A18:  		EndIf
  A20:  		Wait     00000001 
  A2C:  	EndLoop
  A34:  	If  *Flag[00]  ==  00000001 
  A44:  		Call     DispatchEventPlayer ( 00000042 )
  A54:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  A68:  		BreakLoop
  A70:  	EndIf
  A78:  	Call     UseIdleAnimation 	( .Actor:Player .True )
  A8C:  	Call     80269EAC ( 00000001 )
  A9C:  	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
  AC4:  	Call     StartRumble ( 00000002 )
  AD4:  	Call     GetLastDamage 	( .Actor:Player *Var[3] )
  AE8:  	If  *Var[3]  !=  00000000 
  AF8:  		Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  B0C:  		Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  B20:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B3C:  		Add  *Var[1]  0000000A 
  B4C:  		Call     $Function_80218A78_AB ( *Var[0] *Var[1] *Var[2] *Var[3] )
  B68:  		Thread
  B70:  			Wait     0000000F 
  B7C:  			Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
  B90:  			Call     $Function_80218B2C_AB ( *Var[0] *Var[1] *Var[2] *Var[3] )
  BAC:  		EndThread
  BB4:  		Add  *Var[0]  00000014 
  BC4:  		Add  *Var[1]  00000014 
  BD4:  		Call     PlayEffect  	( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C18:  		Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
  C2C:  		Call     GetActorHP  	( .Actor:Self *Var[0] )
  C40:  		Add  *Var[0]  *Var[3] 
  C50:  		If  *Var[0]  >  *Var[1] 
  C60:  			Set  *Var[0]  *Var[1] 
  C70:  		EndIf
  C78:  		Call     SetEnemyHP  	( .Actor:Self *Var[0] )
  C8C:  	Else
  C94:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  CB0:  		Call     DispatchEventPlayer ( 00000042 )
  CC0:  		Call     80269470 ( )
  CCC:  		BreakLoop
  CD4:  	EndIf
  CDC:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  CF8:  	Set  *Flag[00]  00000000 
  D08:  	Loop     00000003 
  D14:  		Call     GetActionSuccessCopy ( *Var[1] )
  D24:  		If  *Var[1]  ==  00000001 
  D34:  			Set  *Flag[00]  00000001 
  D44:  			BreakLoop
  D4C:  		EndIf
  D54:  		Wait     00000001 
  D60:  	EndLoop
  D68:  	If  *Flag[00]  ==  00000001 
  D78:  		Call     DispatchEventPlayer ( 00000042 )
  D88:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  D9C:  		BreakLoop
  DA4:  	EndIf
  DAC:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.2001953] *Fixed[1.0] )
  DC8:  	Set  *Flag[00]  00000000 
  DD8:  	Loop     00000002 
  DE4:  		Call     GetActionSuccessCopy ( *Var[1] )
  DF4:  		If  *Var[1]  ==  00000001 
  E04:  			Set  *Flag[00]  00000001 
  E14:  			BreakLoop
  E1C:  		EndIf
  E24:  		Wait     00000001 
  E30:  	EndLoop
  E38:  	If  *Flag[00]  ==  00000001 
  E48:  		Call     DispatchEventPlayer ( 00000042 )
  E58:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  E6C:  		BreakLoop
  E74:  	EndIf
  E7C:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.1005859] *Fixed[1.0] )
  E98:  	Set  *Flag[00]  00000000 
  EA8:  	Loop     00000002 
  EB4:  		Call     GetActionSuccessCopy ( *Var[1] )
  EC4:  		If  *Var[1]  ==  00000001 
  ED4:  			Set  *Flag[00]  00000001 
  EE4:  			BreakLoop
  EEC:  		EndIf
  EF4:  		Wait     00000001 
  F00:  	EndLoop
  F08:  	If  *Flag[00]  ==  00000001 
  F18:  		Call     DispatchEventPlayer ( 00000042 )
  F28:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  F3C:  		BreakLoop
  F44:  	EndIf
  F4C:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  F68:  	Call     GetPlayerHP 	( *Var[1] )
  F78:  	If  *Var[1]  ==  00000000 
  F88:  		Call     DispatchEventPlayer ( 00000042 )
  F98:  		Call     80269470 ( )
  FA4:  		BreakLoop
  FAC:  	EndIf
  FB4:  	Set  *Flag[00]  00000000 
  FC4:  	Loop     0000000C 
  FD0:  		Call     GetActionSuccessCopy ( *Var[1] )
  FE0:  		If  *Var[1]  ==  00000001 
  FF0:  			Set  *Flag[00]  00000001 
 1000:  			BreakLoop
 1008:  		EndIf
 1010:  		Wait     00000001 
 101C:  	EndLoop
 1024:  	If  *Flag[00]  ==  00000001 
 1034:  		Call     DispatchEventPlayer ( 00000042 )
 1044:  		BreakLoop
 104C:  	EndIf
 1054:  EndLoop
 105C:  Call     DispatchEventPlayer ( 00000042 )
 106C:  Call     80269470 ( )
 1078:  Call     UseIdleAnimation 	( .Actor:Player .True )
 108C:  Call     UseBattleCamPreset 	( 00000002 )
 109C:  Call     MoveBattleCamOver 	( 00000014 )
 10AC:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
 10C0:  If  *Var[0]  &  00100000 
 10D0:  	Call     SetAnimation 	( .Actor:Self 00000001 00510002 )
 10E8:  Else
 10F0:  	Call     SetAnimation 	( .Actor:Self 00000001 00510000 )
 1108:  EndIf
 1110:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 112C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1148:  Add  *Var[0]  0000001E 
 1158:  Sub  *Var[1]  0000000F 
 1168:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
 117C:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1198:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
 11B8:  ExecWait $Script_8022241C_AB 
 11C4:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
 11D8:  Call     UseIdleAnimation 	( .Actor:Self .True )
 11EC:  Return
 11F4:  End
}

