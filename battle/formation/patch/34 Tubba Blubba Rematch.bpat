
% ====================================================
% Rematch bosses only give SP the first time they are
% defeated. Set their level to 0 for repeat fights.
% ====================================================

#new:Function $Function_SetLevel
{
	PUSH	RA, S0, S1, S2
	DADDU	S1, A0, R0
	LW		S0, C (S1)
	LW		A1, 0 (S0)
	JAL		~Func:get_variable
	ADDIU	S0, S0, 4
	DADDU	A0, S1, R0
	LW		A1, 0 (S0)
	JAL		~Func:get_variable
	DADDU	S2, V0, R0
	SB		V0, 6 (S2)
	POP		RA, S0, S1, S2
	JR		RA
	ADDIU	V0, R0, 2
}

% ====================================================
% Tubba Blubba (CHANGES VS PRO MODE NOT VANILLA)
% + Increased max HP
% + only the Butt Stomp attack shrinks now
% + still can use the 2-turn charge attack from his heart
% + Regains 7 HP and geta +2 atk at the end of every turn (Up from 5HP and 1ATK)
% + Added Boo Cannon attack, thanks to JaThePlayer
% ====================================================

#new:Actor $TubbaBlubba
{
% stats
[Index]        A3b 
[Level]        65`b 
[MaxHP]        120`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_Tubba 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_Tubba 
[Script]      $Script_Init_Tubba 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  3`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        110`b 100`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -33`b  78`b % dx dy
[StatusIcon]   10`b  75`b % dx dy
}

#new:PartsTable $PartsTable_Tubba
{
00800000 01000000 F14B00FF $IdleAnimations_Tubba $DefenseTable_Tubba 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_Tubba
{
.Status:Normal    006B0001
.Status:Stone     006B0000
.Status:Sleep     006B0018
.Status:Poison    006B0001
.Status:Stop      006B0000
.Status:Static    006B0000
.Status:Paralyze  006B0000
.Status:Paralyze  006B0000
.Status:Dizzy     006B0018
.Status:Fear  006B0000
.Status:End
}

#new:DefenseTable $DefenseTable_Tubba
{
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_Tubba
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      00`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      00`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   00`
.Status:Shrink     90`
.Status:Stop       00`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod    -3`
.Status:StopTurnMod       0`
.Status:End
}

#new:Script $Script_Init_Tubba
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Tubba )
		Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_Tubba )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_Tubba )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_Tubba )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Exec     $Script_80225E08 
		Exec     $Script_Resize 
		If	*Flag_BeatRematch3  ==  .True
			Call	$Function_SetLevel	( $TubbaBlubba 0 )
		EndIf
   60:  Return
   68:  End
}

% Heal 10 HP and power up +2 attack every turn
#new:Script $Script_NextTurn_Tubba
{
	Call	GetBattlePhase ( *Var[0] )
	If  *Var[0] ==  .Phase:EnemyEnd
		Thread
			Wait     00000005 
			Call     PlaySoundAtActor    ( *Var[0] 0000206D )
			Call     PlaySoundAtActor    ( *Var[0] 00000214 )
			Wait     30` 
			Call     PlaySoundAtActor    ( *Var[0] 0000025C )
		EndThread
		Call	8026BF48	( 00000001 )
		Call	HealActor	( .Actor:Self 00000004 00000001 )
		Call	8026BF48	( 00000000 )
		%
		Call	GetActorAttackBoost ( .Actor:Self *Var[0] )
		If  *Var[0]  <  10
			Call	PlaySoundAtActor	( .Actor:Self 000002D8 )
			Call	8026BF48	( 00000001 )
			Call	BoostAttack	( .Actor:Self 0000003 )
			Call	8026BF48	( 00000000 )
		EndIf
		%
	EndIf
	Return
	End
}

#new:Script $Script_Resize
{
	Set  *Var[4]  0		% last boost
	Set  *Var[5]  100`	% current size
	Label	0
	Wait	1
	Call	ActorExists	( .Actor:Self *Var[0] )
	If  *Var[0]  ==  .False 
		Goto	0
	EndIf
	Call	GetActorAttackBoost ( .Actor:Self *Var[0] )
	If  *Var[0]  ==  *Var[4]
		Goto	0
	EndIf
	If  *Var[0]  >  *Var[4]
		% duration (unused)
		Set  *Var[2]  *Var[0]
		Sub  *Var[2]  *Var[4]
		Mul  *Var[2]  20`
		% target size
		Switch  *Var[0]
			Case  ==  1
				Set *Var[6] 110`
			Case  ==  2
				Set *Var[6] 120`
			Case  ==  3
				Set *Var[6] 130`
			Case  ==  4
				Set *Var[6] 140`
			Case  ==  5
				Set *Var[6] 150`
			Case  ==  6
				Set *Var[6] 160`
			Default
				Set  *Var[4]  *Var[0]
				Goto	0
		EndSwitch
		Set  *Var[4]  *Var[0]
	Else
		% duration (unused)
		Set  *Var[2]  *Var[4]
		Sub  *Var[2]  *Var[0]
		Mul  *Var[2]  20`
		% target size
		Switch  *Var[0]
			Case  ==  0
				Set *Var[6] 100`
			Case  ==  1
				Set *Var[6] 110`
			Case  ==  2
				Set *Var[6] 120`
			Case  ==  3
				Set *Var[6] 130`
			Case  ==  4
				Set *Var[6] 140`
			Case  ==  5
				Set *Var[6] 150`
			Default
				Set  *Var[4]  *Var[0]
				Goto	0
		EndSwitch
		Set  *Var[4]  *Var[0]
	EndIf
	% do resizing
	Call     MakeLerp	( *Var[5] *Var[6] 30` 00000000 )
	Label    1 
		Call	UpdateLerp  	( )
		DivF	*Var[0]  100`
		Call	SetActorScale	( .Actor:Self *Var[0] *Var[0] *Var[0] )
		Wait     1 
	If  *Var[1]  ==  .True 
		Goto     1
	EndIf
	Set  *Var[5]  *Var[6]
	Goto     0 
	Return
	End
}
   
#new:Script $Script_Idle_Tubba
{
	Label    00000000 
	Call     ActorExists 	( .Actor:Self *Var[0] )
	If       *Var[0] !=  00000000 
		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
		If       *Var[0] !=  00000000 
			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
			Call     GetStatusFlags ( .Actor:Self *Var[4] )
			If       *Var[4] !&  00080000 
				Add  *Var[2] 55` 
				SetF *Var[4] *Fixed[1.0] 
			Else
				Add  *Var[2] 28` 
				SetF *Var[4] *Fixed[0.4] 
			EndIf
			Call     $Function_UpdateEffectPosition ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] )
              Call     EnableActorGlow 	( .Actor:Self .True )
		Else
              Call     EnableActorGlow 	( .Actor:Self .False )
           EndIf
	EndIf
	Wait     00000001 
	Goto     00000000 
	Return
	End
}

#new:Script $Script_80225E08
{
    0:  Label    00000000 
    C:  Wait     00000001 
   18:  Call     ActorExists 	( .Actor:Self *Var[0] )
   2C:  If       *Var[0] ==  00000000 
   3C:     Return
   44:  EndIf
   4C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   60:  If       *Var[0]  &  00080000 
   70:     Goto     00000000 
   7C:  EndIf
   84:  Call     GetAnimation ( FFFFFF81 00000001 *Var[0] )
   9C:  If       *Var[0] ==  006B0006 
   AC:     Goto     00000001 
   B8:  EndIf
   C0:  If       *Var[0] ==  006B0007 
   D0:     Goto     00000001 
   DC:  EndIf
   E4:  Goto     00000000 
   F0:  Label    00000001 
   FC:  Call     StartRumble ( 00000001 )
  10C:  Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  128:  Wait     00000001 
  134:  Goto     00000000 
  140:  Return
  148:  End
}

#new:Script $Script_HandleEvent_Tubba
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[A] )
   3C:  Switch   *Var[A] 
   48:     CaseOR   ==  .Event:HitCombo
   54:     CaseOR   ==  .Event:Hit
   60:        SetConst *Var[0] 00000001 
   70:        SetConst *Var[1] 006B0014 
   80:        ExecWait DoNormalHit 
   8C:     EndCaseGroup
   94:     Case     ==  .Event:BurnHit
   A0:        SetConst *Var[0] 00000001 
   B0:        SetConst *Var[1] 006B0014 
   C0:        SetConst *Var[2] FFFFFFFF 
   D0:        ExecWait DoBurnHit 
   DC:     Case     ==  .Event:BurnDeath
   E8:        SetConst *Var[0] 00000001 
   F8:        SetConst *Var[1] 006B0014 
  108:        SetConst *Var[2] FFFFFFFF 
  118:        ExecWait DoBurnHit 
  124:        ExecWait $Script_Death_Tubba 
  130:        Return
  138:     Case     ==  .Event:SpinSmashHit
  144:        SetConst *Var[0] 00000001 
  154:        SetConst *Var[1] 006B0014 
  164:        ExecWait 8029B998 
  170:     Case     ==  .Event:ShockHit
  17C:        Call     UseBattleCamPreset 	( 00000002 )
  18C:        Call     MoveBattleCamOver 	( 00000014 )
  19C:        SetConst *Var[0] 00000001 
  1AC:        SetConst *Var[1] 006B0014 
  1BC:        ExecWait DoShockHit 
  1C8:        SetConst *Var[0] 00000001 
  1D8:        SetConst *Var[1] 006B0014 
  1E8:        ExecWait 8029BD70 
  1F4:        ExecWait $Script_80225FD4 
  200:     CaseOR   ==  00000017
  20C:     CaseOR   ==  .Event:Immune
  218:     CaseOR   ==  .Event:AirLiftFailed
  224:        SetConst *Var[0] 00000001 
  234:        SetConst *Var[1] 006B0001 
  244:        ExecWait DoImmune 
  250:     EndCaseGroup
  258:     Case     ==  .Event:ShockDeath
  264:        Call     UseBattleCamPreset 	( 00000002 )
  274:        Call     MoveBattleCamOver 	( 00000014 )
  284:        SetConst *Var[0] 00000001 
  294:        SetConst *Var[1] 006B0014 
  2A4:        ExecWait DoShockHit 
  2B0:        ExecWait $Script_Death_Tubba 
  2BC:        Return
  2C4:     Case     ==  .Event:Death
  2D0:        SetConst *Var[0] 00000001 
  2E0:        SetConst *Var[1] 006B0014 
  2F0:        ExecWait DoNormalHit 
  2FC:        ExecWait $Script_Death_Tubba 
  308:        Return
  310:     Case     ==  .Event:SpinSmashDeath
  31C:        SetConst *Var[0] 00000001 
  32C:        SetConst *Var[1] 006B0014 
  33C:        ExecWait 8029B998 
  348:        ExecWait $Script_Death_Tubba 
  354:        Return
  35C:     Case     ==  .Event:RecoverStatus
  368:        SetConst *Var[0] 00000001 
  378:        SetConst *Var[1] 006B0001 
  388:        ExecWait DoRecover 
  394:     Default
  39C:  EndSwitch
  3A4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  3CC:  Return
  3D4:  End
}
  
  %DID A FRESH AI OVER CLOVERS RANDOM ONE. THIS ONE SHOULD MAKE THE NEW TUBBA A FRESH CHALLENGE
  
#new:Script $Script_TakeTurn_Tubba
{
%FIRST CHECK IF HE CHARGED UP, IF HE IS, ATTACK WITH SUPER ATTACK
Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  .True
		ExecWait $Script_Unleash
		Call	SetActorVar 	( .Actor:Self 00000000 .False )
		Call     SetActorVar 	( .Actor:Self 00000002 00000003 )
		Goto	0
	EndIf
%NEXT CHECK IF PARTNER IS KNOCKED OUT. IF THEY ARENT, KNOCK THEM OUT
Call     GetActorVar 	( .Actor:Self 00000002 *Var[6] )
Switch *Var[6]
Case == 00000000
	Call		GetStatusFlags	( .Actor:Partner *Var[0] )
	If  *Var[0] !&  01000000
		ExecWait $Script_SmashAttack
		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
		Goto 0
	Else
		ExecWait $Script_LeapAttack
		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
		Goto 0
	EndIf
%IF TUBBA IS LOW, TRY AND SHRINK TO GAIN SOME TURNS TO HEAL
Case == 00000001
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	If  *Var[0]  <=  20`
		ExecWait $Script_LeapAttack 
		Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
		Goto 0
	Else
		ExecWait $Script_BooCannon
		Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
		Goto 0
	EndIf
%IF BOW ISNT ACTIVE PARTNER, OR PARTNER IS DISABLED, USE CHARGE ATTACK
Case == 00000002
	Call		GetStatusFlags	( .Actor:Partner *Var[0] )
	If  *Var[0] !&  01000000
		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
		Call     EnemyTestTarget ( .Actor:Self *Var[0] 10000020 00000000 00000002 00000020 )
		If       *Var[0] !=  00000005
			ExecWait $Script_ChargeUp
			Call     SetActorVar 	( .Actor:Self 00000000 .True )
			Goto 0
		Else
			ExecWait $Script_SmashAttack
			Call     SetActorVar 	( .Actor:Self 00000002 00000003 )
			Goto 0
		EndIf
	Else
		ExecWait $Script_ChargeUp
		Call     SetActorVar 	( .Actor:Self 00000000 .True )
		Goto 0
	EndIf
% FINALLY, JUST USE THE BOO CANNON
Case == 00000003
	ExecWait $Script_BooCannon
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Goto 0
EndSwitch
  Label 0
  Call	EnableIdleScript 	( .Actor:Self 00000001 )
  Call	UseIdleAnimation 	( .Actor:Self .True )
  Return
  End
}
  
/%
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  .True
		ExecWait $Script_Unleash
		Call	SetActorVar 	( .Actor:Self 00000000 .False )
		Goto	0
	EndIf
	Call	RandInt	( 100` *Var[0] )
	Switch  *Var[0]
		Case  <  5`
			ExecWait $Script_SmashAttack
		Case  <  90`
			ExecWait $Script_BooCannon 			
		Case  <  95`
			ExecWait $Script_LeapAttack 
		Default
			ExecWait $Script_ChargeUp
			Call     SetActorVar 	( .Actor:Self 00000000 .True )
	EndSwitch
	Label	0
	Call	EnableIdleScript 	( .Actor:Self 00000001 )
	Call	UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
	%/

#new:Script $Script_SmashAttack
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 0000003F )
   24:  Call     SetBattleCamZoom  	( 00000096 )
   34:  Call     BattleCamTargetActor ( .Actor:Self )
   44:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   5C:  Set      *Var[1] 006B0006 
   6C:  ExecWait $Script_80225F8C 
   78:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
   90:  Call     SetGoalToTarget 	( .Actor:Self )
   A0:  Call     GetStatusFlags ( .Actor:Self *Var[5] )
   B4:  If       *Var[5] !&  00080000 
   C4:     Call     AddGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   E0:  Else
   E8:     Call     AddGoalPos 	( .Actor:Self 00000014 00000000 00000000 )
  104:  EndIf
  10C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  120:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  138:  Call     SetAnimation 	( .Actor:Self 00000001 006B0015 )
  150:  Wait     00000008 
  15C:  Call     PlaySoundAtActor 	( .Actor:Self 0000035E )
  170:  Call     SetAnimation 	( .Actor:Self 00000001 006B0016 )
  188:  Wait     00000014 
  194:  Call     SetAnimation 	( .Actor:Self 00000001 006B0017 )
  1AC:  Wait     00000003 
  1B8:  Call     SetGoalToTarget 	( .Actor:Self )
  1C8:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  1DC:  If       *Var[0] !&  00080000 
  1EC:     Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  208:     Set      *Var[1] 00000000 
  218:     Call     PlayEffect  	( 00000006 00000004 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:     Thread
  264:        Call     StartRumble ( 00000001 )
  274:        Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[15.0] )
  290:     EndThread
  298:     Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  2AC:  EndIf
  2B4:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  2D8:  Switch   *Var[A] 
  2E4:     CaseOR   ==  00000006 
  2F0:     CaseOR   ==  00000005 
  2FC:        Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  318:        Call     PlayEffect  	( 00000025 00000000 *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:        Wait     0000001E 
  368:        Set      *Var[1] 006B0001 
  378:        ExecWait $Script_80225F8C 
  384:        Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  39C:        Call     UseBattleCamPreset 	( 00000002 )
  3AC:        Call     MoveBattleCamOver 	( 00000014 )
  3BC:        If       *Var[A] ==  00000005 
  3CC:           Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3F0:        EndIf
  3F8:        ExecWait $Script_80225FD4 
  404:        Return
  40C:     EndCaseGroup
  414:     Default
  41C:  EndSwitch
  424:  Call     GetStatusFlags ( .Actor:Self *Var[5] )
  438:  If       *Var[5] !&  00080000 
  448:     Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  464:     Call     PlayEffect  	( 00000025 00000001 *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4A8:  EndIf
  4B0:  Wait     00000002 
  4BC:  Call     SetGoalToTarget 	( .Actor:Self )
  4CC:  If       *Var[5] !&  00080000 
  4DC:     Call     80269EAC ( 00000017 )
  4EC:  EndIf
  4F4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 00000009 00000020 )
  	Wait     0000000D 
  				Call     SetTargetActor ( .Actor:Self .Actor:Partner )
   				Call     SetGoalToTarget 	( .Actor:Self )
   				Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 20000110 0000FFFF 00000000 00000002 00000020 )
  51C:  Call     UseBattleCamPreset 	( 0000003F )
  52C:  Call     SetBattleCamZoom  	( 000000C8 )
  53C:  Call     BattleCamTargetActor ( .Actor:Self )
  54C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  564:  Call     MoveBattleCamOver 	( 0000001E )
  574:  Switch   *Var[F] 
  580:     CaseOR   ==  00000000 
  58C:     CaseOR   ==  00000002 
  598:        Wait     0000001E 
  5A4:        Set      *Var[1] 006B0001 
  5B4:        ExecWait $Script_80225F8C 
  5C0:        Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  5D8:        Call     UseBattleCamPreset 	( 00000002 )
  5E8:        Call     MoveBattleCamOver 	( 00000014 )
  5F8:        Call     YieldTurn ( )
  604:        ExecWait $Script_80225FD4 
  610:     EndCaseGroup
  618:  EndSwitch
  620:  Return
  628:  End
}

#new:Script $Script_LeapAttack
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 0000003F )
   24:  Call     SetBattleCamZoom  	( 00000096 )
   34:  Call     BattleCamTargetActor ( .Actor:Self )
   44:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   5C:  Set      *Var[1] 006B0006 
   6C:  ExecWait $Script_80225F8C 
   78:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
   90:  Call     SetGoalToTarget 	( .Actor:Self )
   A0:  Call     AddGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   BC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   D0:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E8:  Call     SetAnimation 	( .Actor:Self 00000001 006B000A )
  100:  Wait     00000008 
  10C:  Call     SetAnimation 	( .Actor:Self 00000001 006B000B )
  124:  Call     SetActorSounds ( FFFFFF81 00000002 000003E7 00000000 )
  140:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  164:  Switch   *Var[0] 
  170:     CaseOR   ==  00000006 
  17C:     CaseOR   ==  00000005 
  188:        Set      *Var[A] *Var[0] 
  198:        Thread
  1A0:           Wait     0000000C 
  1AC:           Call     SetAnimation 	( .Actor:Self 00000001 006B000C )
  1C4:        EndThread
  1CC:        Call     SetGoalToTarget 	( .Actor:Self )
  1DC:        Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F8:        Sub      *Var[0] 0000000F 
  208:        Set      *Var[1] 00000000 
  218:        Add      *Var[2] 00000005 
  228:        Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  23C:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  258:        Call     JumpToGoal  	( .Actor:Self 00000017 00000000 00000001 00000000 )
  278:        Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  28C:        Call     PlayEffect  	( 00000025 00000000 *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:        Call     SetAnimation 	( .Actor:Self 00000001 006B000D )
  2E8:        Thread
  2F0:           Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  30C:           Call     PlayEffect  	( 0000001D 00000000 *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  350:        EndThread
  358:        Thread
  360:           Call     StartRumble ( 00000001 )
  370:           Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
  38C:        EndThread
  394:        Call     ResetActorSounds ( FFFFFF81 00000002 )
  3A8:        Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3C4:        Sub      *Var[0] 00000014 
  3D4:        Set      *Var[1] 00000000 
  3E4:        Add      *Var[2] 00000005 
  3F4:        Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  408:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  424:        Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  444:        Call     StartRumble ( 00000001 )
  454:        Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
  470:        Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  48C:        Call     PlayEffect  	( 0000001D 00000000 *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  4D0:        If       *Var[A] ==  00000005 
  4E0:           Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  504:        EndIf
  50C:        Call     UseBattleCamPreset 	( 00000002 )
  51C:        Call     MoveBattleCamOver 	( 00000014 )
  52C:        Wait     00000008 
  538:        Call     SetAnimation 	( .Actor:Self 00000001 006B000E )
  550:        Wait     00000004 
  55C:        ExecWait $Script_80225FD4 
  568:        Return
  570:     EndCaseGroup
  578:     Default
  580:        Thread
  588:           Wait     00000009 
  594:           Call     SetAnimation 	( .Actor:Self 00000001 006B000C )
  5AC:        EndThread
  5B4:        Call     SetGoalToTarget 	( .Actor:Self )
  5C4:        Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  5D8:        Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  5F8:  EndSwitch
  600:  Wait     00000002 
  60C:  Call     SetGoalToTarget 	( .Actor:Self )
  61C:  Call     GetStatusFlags ( .Actor:Self *Var[5] )
  630:  If       *Var[5] !&  00080000 
  640:     Call     80269EAC ( 00000018 )
  650:     Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  664:  EndIf
  66C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 8008033C 0000000B 00000020 )
  694:  Call     UseBattleCamPreset 	( 0000003F )
  6A4:  Call     SetBattleCamZoom  	( 000000C8 )
  6B4:  Call     BattleCamTargetActor ( .Actor:Self )
  6C4:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  6DC:  Call     MoveBattleCamOver 	( 0000001E )
  6EC:  Switch   *Var[F] 
  6F8:     CaseOR   ==  00000000 
  704:     CaseOR   ==  00000002 
  710:        Call     GetStatusFlags ( .Actor:Self *Var[5] )
  724:        If       *Var[5]  &  00080000 
  734:           Goto     00000001 
  740:        EndIf
  748:        Call     GetBattleFlags ( *Var[0] )
  758:        If       *Var[0] !&  80000000 
  768:           Call     GetStatusFlags ( .Actor:Player *Var[0] )
  77C:           If       *Var[0] !&  00100000 
  78C:              Call     LandJump ( FFFFFF81 )
  79C:           Else
  7A4:              Goto     00000001 
  7B0:           EndIf
  7B8:        Else
  7C0:           Goto     00000001 
  7CC:        EndIf
  7D4:        Label    00000000 
  7E0:        Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7FC:        Call     PlayEffect  	( 00000025 00000000 *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  840:        Call     SetAnimation 	( .Actor:Self 00000001 006B000D )
  858:        Thread
  860:           Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  87C:           Call     PlayEffect  	( 0000001D 00000000 *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  8C0:        EndThread
  8C8:        Thread
  8D0:           Call     StartRumble ( 00000001 )
  8E0:           Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
  8FC:        EndThread
  904:        Call     ResetActorSounds ( FFFFFF81 00000002 )
  918:        Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  934:        Sub      *Var[0] 00000014 
  944:        Set      *Var[1] 00000000 
  954:        Add      *Var[2] 00000005 
  964:        Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  978:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  994:        Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  9B4:        Call     StartRumble ( 00000001 )
  9C4:        Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
  9E0:        Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9FC:        Call     PlayEffect  	( 0000001D 00000000 *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  A40:        Goto     00000002 
  A4C:        Label    00000001 
  A58:        Call     GetStatusFlags ( .Actor:Self *Var[5] )
  A6C:        If       *Var[5] !&  00080000 
  A7C:           Wait     00000003 
  A88:           Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AA4:           Call     PlayEffect  	( 00000025 00000001 *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AE8:           Call     StartRumble ( 00000001 )
  AF8:           Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
  B14:        EndIf
  B1C:        Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B38:        Add      *Var[0] 00000028 
  B48:        Set      *Var[1] 00000000 
  B58:        Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  B6C:        Thread
  B74:           Wait     00000008 
  B80:           Call     SetAnimation 	( .Actor:Self 00000001 006B000E )
  B98:        EndThread
  BA0:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BBC:        Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  BDC:        If       *Var[5] !&  00080000 
  BEC:           Call     StartRumble ( 00000001 )
  BFC:           Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[3.0] )
  C18:           Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C34:           Call     PlayEffect  	( 0000001D 00000000 *Var[0] *Var[1] *Var[2] 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  C78:           Wait     00000008 
  C84:        EndIf
  C8C:        Label    00000002 
  C98:        Call     UseBattleCamPreset 	( 00000002 )
  CA8:        Call     MoveBattleCamOver 	( 00000014 )
  CB8:        Call     YieldTurn ( )
  CC4:        ExecWait $Script_80225FD4 
  CD0:     EndCaseGroup
  CD8:  EndSwitch
  CE0:  Return
  CE8:  End
}

#new:Script $Script_80225FD4
{
    0:  Set      *Var[1] 006B0001 
   10:  ExecWait $Script_80225F8C 
   1C:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
   34:  Call     SetGoalToHome 	( .Actor:Self )
   44:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   58:  Set      *Var[1] 006B0006 
   68:  ExecWait $Script_80225F8C 
   74:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
   8C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   A4:  Set      *Var[1] 006B0001 
   B4:  ExecWait $Script_80225F8C 
   C0:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
   D8:  Call     SetActorYaw 	( .Actor:Self 00000000 )
   EC:  Return
   F4:  End
}
   
#new:Script $Script_80225F8C
{
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  If       *Var[0] ==  00000000 
   28:     Return
   30:  EndIf
   38:  Return
   40:  End
}

#new:Script $Script_Death_Tubba
{
	Set      *Var[0] 00000001 
	Set      *Var[1] 006B0014 
	ExecWait DoDeath 
	Return
	End
}

#new:Script $Script_ChargeUp
{
    0:  Call     UseBattleCamPreset 	( 00000013 )
   10:  Call     SetBattleCamTarget 	( 00000055 00000032 00000000 )
   28:  Call     SetBattleCamZoom  	( 00000118 )
   38:  Call     SetBattleCamOffsetZ 	( 00000000 )
   48:  Call     MoveBattleCamOver 	( 00000028 )
   58:  Wait     00000028 
   64:  Call     SetAnimation 	( .Actor:Self 00000001 006B0002 )
   7C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   98:  Call     GetStatusFlags ( .Actor:Self *Var[4] )
   AC:  If       *Var[4] !&  00080000 
   BC:     Add  *Var[1] 55` 
   CC:     SetF *Var[3] *Fixed[1.0] 
   DC:  Else
   E4:     Add  *Var[1] 28`
   F4:     SetF *Var[3] *Fixed[0.4] 
  104:  EndIf
  10C:  Call     PlayEffect  	( 00000047 00000001 *Var[0] *Var[1] *Var[2] *Var[3] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  150:  Call     PlayEffect  	( 0000006B 00000006 *Var[0] *Var[1] *Var[2] *Var[3] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     PlaySoundAtActor 	( .Actor:Self 000020F7 )
  1A8:  Wait     0000003C 
  1B4:  Call     UseBattleCamPreset 	( 00000002 )
  1C4:  Call     MoveBattleCamOver 	( 00000014 )
  1D4:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  1E8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  220:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  258:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     GetStatusFlags ( .Actor:Self *Var[4] )
  288:  If       *Var[4] !&  00080000 
  298:     Add  *Var[1] 55` 
  2A8:     SetF *Var[3] *Fixed[1.0] 
  2B8:  Else
  2C0:     Add  *Var[1] 28` 
  2D0:     SetF *Var[3] *Fixed[0.4] 
  2E0:  EndIf
  2E8:  Call     PlayEffect  	( 0000006B 00000003 *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  32C:  Call     SetActorVar 	( .Actor:Self 00000004 *Var[F] )
  344:  Call     EnableActorGlow 	( .Actor:Self .True )
  370:  Return
  378:  End
}
  
#new:Script $Script_Unleash
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     UseBattleCamPreset 	( 00000013 )
   24:  Call     SetBattleCamTarget 	( 00000055 00000032 00000000 )
   3C:  Call     SetBattleCamZoom  	( 00000118 )
   4C:  Call     SetBattleCamOffsetZ 	( 00000000 )
   5C:  Call     MoveBattleCamOver 	( 00000014 )
   6C:  Wait     00000014 
   78:  Call     PlaySoundAtActor 	( .Actor:Self 000020D4 )
   8C:  Call     SetAnimation 	( .Actor:Self 00000001 006B0002 )
   A4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C0:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   D4:  If       *Var[3] !&  00080000 
   E4:     Add  *Var[1] 55`
   F4:  Else
   FC:     Add  *Var[1] 28`
  10C:  EndIf
  114:  Call     PlayEffect  	( 00000013 00000000 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  158:  Wait     0000003C 
  164:  Call     UseBattleCamPreset 	( 00000002 )
  174:  Call     MoveBattleCamOver 	( 00000014 )
  184:  Call     SetAnimation 	( .Actor:Self 00000001 006B0001 )
  19C:  Thread
  1A4:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:     Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.8] )
  1D4:     Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F0:     Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  210:  EndThread
  268:  Call     EnableActorGlow 	( .Actor:Self .False )
  27C:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  294:  Call     RemoveEffect 		( *Var[0] )
  2A4:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
  2DC:  Call     PlaySound   	( 000020F9 )
  2EC:  Call     SetGoalToTarget 	( .Actor:Self )
  2FC:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  320:  Switch   *Var[A] 
  32C:     CaseOR   ==  00000006 
  338:     CaseOR   ==  00000005 
  344:        Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  360:        Add      *Var[1] 00000005 
  370:        Call     PlayEffect  	( 00000066 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3B4:        Wait     00000091 
  3C0:        If       *Var[A] ==  00000005 
  3D0:           Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3F4:        Else
  3FC:        EndIf
  404:        Return
  40C:     EndCaseGroup
  414:  EndSwitch
  41C:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  438:  Add      *Var[1] 00000005 
  448:  Call     PlayEffect  	( 00000066 00000000 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  48C:  Thread
  494:     Wait     000000A0 
  4A0:     Call     PlaySound   	( 000020FC )
  4B0:  EndThread
  4B8:  Call     UseIdleAnimation 	( .Actor:Player .False )
  4CC:  Call     SetAnimation 	( .Actor:Player 00000000 0001002B )
  4E4:  Wait     0000001E 
  4F0:  Call     UseBattleCamPreset 	( 00000013 )
  500:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  51C:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
  534:  Call     SetBattleCamZoom  	( 0000012C )
  544:  Call     SetBattleCamOffsetZ 	( 00000023 )
  554:  Call     MoveBattleCamOver 	( 00000032 )
  564:  Wait     00000038 
  570:  Call     PlaySoundAtActor 	( .Actor:Player 000003DB )
  584:  Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  59C:  Wait     00000025 
  5A8:  Call     PlaySoundAtActor 	( .Actor:Player 000003DB )
  5BC:  Wait     00000016 
  5C8:  Call     UseBattleCamPreset 	( 00000002 )
  5D8:  Call     MoveBattleCamOver 	( 0000000A )
  5E8:  Call     PlaySoundAtActor 	( .Actor:Player 000020FB )
  5FC:  Call     UseIdleAnimation 	( .Actor:Player .True )
  610:  Wait     00000002 
  61C:  Call     SetGoalToTarget 	( .Actor:Self )
  62C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 0000001C 00000020 )
  654:  Return
  65C:  End
}

#new:Function $Function_UpdateEffectPosition
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  DADDU     A0, S1, R0
   3C:  JAL       ~Func:get_variable
   40:  DADDU     S2, V0, R0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  DADDU     A0, S1, R0
   50:  JAL       ~Func:get_variable
   54:  DADDU     S4, V0, R0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  DADDU     A0, S1, R0
   64:  JAL       ~Func:get_variable
   68:  DADDU     S3, V0, R0
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  JAL       ~Func:get_float_variable
   78:  DADDU     S0, V0, R0
   7C:  LW        V0, C (S2)
   80:  MTC1      S4, F2
   84:  NOP
   88:  CVT.S.W   F2, F2
   8C:  SWC1      F2, 4 (V0)
   90:  LW        V0, C (S2)
   94:  MTC1      S3, F2
   98:  NOP
   9C:  CVT.S.W   F2, F2
   A0:  SWC1      F2, 8 (V0)
   A4:  LW        V0, C (S2)
   A8:  MTC1      S0, F2
   AC:  NOP
   B0:  CVT.S.W   F2, F2
   B4:  SWC1      F2, C (V0)
   B8:  LW        V1, C (S2)
   BC:  SWC1      F0, 34 (V1)
   C0:  LW        RA, 24 (SP)
   C4:  LW        S4, 20 (SP)
   C8:  LW        S3, 1C (SP)
   CC:  LW        S2, 18 (SP)
   D0:  LW        S1, 14 (SP)
   D4:  LW        S0, 10 (SP)
   D8:  ADDIU     V0, R0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}
  
% ====================================================
% Boss Formation
% ====================================================

#new:Formation $Boss_Formation
{
$TubbaBlubba 00000002 0000000A 00000000 00000000 00000000 00000000 
}
  
#new:FormationTable $FormationTable
{
00000000 00000001 $Boss_Formation $Boss_Stage 00000000 
00000000 00000000 00000000 00000000 00000000
}

% ====================================================
% Boss Stage
% ====================================================

#new:StageTable $StageTable
{
00000000 00000000 
}

#new:Stage $Boss_Stage
{
"arn_tex"
"arn_bt02_shape"
"arn_bt02_hit"
$Script_BeforeBattle 
$Script_AfterBattle 
"arn_bg"
$ForegroundModels 
00000000 
00000000 
00000000
}

#new:ForegroundModelList $ForegroundModels
{
FFFFFFFF 00000019 00000000  
}

#new:Script $Script_BeforeBattle
{
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Set      *Var[0] 00000008 
   20:  ExecWait $Script_SpinWindmill 
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle
{
	Return
	End
}

#new:Script $Script_SpinWindmill
{
	Set      *Var[A] *Var[0] 
	Set      *Var[0] 00000000 
	Label    00000000 
	Add      *Var[0] 00000001 
	If       *Var[0]  >  00000167 
		Sub      *Var[0] 00000168 
	EndIf
	Call     RotateModel 	( *Var[A] *Var[0] 00000000 00000000 00000001 )
	Wait     00000001 
	Goto     00000000 
	Return
	End
}

	% Extra Stuff for Boo Cannon

#new:Vector3D $BooPos
{
70` 58` 10`
}

#new:SpecialFormation $BooFormation
{
$SkyBoo	$BooPos 00000009 00000000 00000000 00000000 00000000 
}

#new:Script $Script_BooCannon	
{
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseIdleAnimation 	( .Actor:Self .False )
    Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetAnimation 		( .Actor:Self 00000001 006B0008 )
	Call	GetActorAttackBoost ( .Actor:Self *Var[3] )
	Div *Var[3] 2`
	Add *Var[3] 5`
	Wait 6`
	Loop 3`
	Thread
	Call     SummonEnemy		( $BooFormation 00000000 )
	Set *Var[1] *Var[0]
	Call     UseIdleAnimation 	( *Var[1] .False )
    Call     EnableIdleScript 	( *Var[1] 00000000 )
	Call     SetAnimation 		( *Var[1] 00000001 006B0819 )
	Call     SetTargetActor ( *Var[1] .Actor:Player )
	Call     SetGoalToTarget 	( *Var[1] )
	Call     SetActorSpeed     	( *Var[1] *Fixed[12.0] )
	Call     JumpToGoal      	( *Var[1] 00000014 00000000 00000001 00000000 )
	Wait 	 2`
	Call	EnemyTestTarget ( .Actor:Self  *Var[5] 00000000 00000000 00000001 00000010 )
	Switch  *Var[5] 
    	CaseOR  ==  00000006 
    	CaseOR  ==  00000005 % lucky, transparent
		Goto 00000001
	EndSwitch
		Call     EnemyDamageTarget 	( *Var[1] *Var[8] 10000000 00000000 00000000 *Var[3] 00000020 )
	Wait     1`
	% Go off-screen
	Label 00000001
	Call     SetGoalPos		( *Var[1] -300` 0` 0` )
	Call     SetActorJumpGravity 	( *Var[1] *Fixed[1.0] )
	Call     JumpToGoal    		( *Var[1] 00000014 00000000 00000001 00000000 )
	Wait     4
	Call     RemoveActor 	( *Var[1] )
	EndThread
	Thread
	Wait 	 10`
	Call     SummonEnemy		( $BooFormation 00000000 )
	Call     UseIdleAnimation 	( *Var[0] .False )
    Call     EnableIdleScript 	( *Var[0] 00000000 )
	Call     SetAnimation 		( *Var[0] 00000001 006B0819 )
	Call     SetTargetActor ( *Var[0] .Actor:Player )
	Call     SetGoalToTarget 	( *Var[0] )
	Call     SetActorSpeed     	( *Var[0] *Fixed[20.0] )
	Call     JumpToGoal      	( *Var[0] 00000014 00000000 00000001 00000000 )
	Wait 	 2`
	Call	EnemyTestTarget ( .Actor:Self  *Var[5] 00000000 00000000 00000001 00000010 )
	Switch  *Var[5] 
    	CaseOR  ==  00000006 
    	CaseOR  ==  00000005 % lucky, transparent
		Goto 00000001
	EndSwitch
		Call     EnemyDamageTarget 	( *Var[0] *Var[8] 00000000 00000000 00000000 *Var[3] 00000020 )
	Wait     1`
	% Go off-screen
	Label 00000001
	Call     SetGoalPos		( *Var[0] -300` 0` 0` )
	Call     SetActorJumpGravity 	( *Var[0] *Fixed[1.0] )
	Call     JumpToGoal    		( *Var[0] 00000014 00000000 00000001 00000000 )
	Wait     4
	Call     RemoveActor 	( *Var[0] )
	EndThread
	Wait 28`
	EndLoop
	Call     UseIdleAnimation 	( .Actor:Self .True )
    Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Return
	End
}

#new:Actor $SkyBoo
{
% stats
[Index]        7b % no need for a index
[Level]        12`b 
[MaxHP]         7`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_Tubba
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_Boo 
[Script]      $Script_Init_Boo 
% move effectiveness
[Escape]       30`b 
[Item]         50`b 
[AirLift]      90`b 
[Hurricane]    10`b % Bow's "Sp
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         20`b  20`b % width height
[HealthBar]     0`b   0`b % dx dyook" as well
[UpAndAway]    95`b 
[PowerBounce]  3`b 
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:PartsTable $PartsTable_Boo
{
00800000 01000000 001400FF $IdleAnimations_Boo $DefenseTable_Tubba 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_Boo
{
.Status:Normal    006B0819
.Status:Stone     006B0819
.Status:Sleep     006B0819
.Status:Poison    006B0819
.Status:Stop      006B0819
.Status:Static    006B0819
.Status:Paralyze  006B0819
.Status:Dizzy     006B0819
.Status:Fear  	  006B0819
.Status:End
}

#new:Script $Script_Init_Boo
{
	Call	BindTakeTurn	( .Actor:Self $Script_Idle_Boo )
	Call	BindIdle		( .Actor:Self $Script_Idle_Boo )
	Call	BindHandleEvent	( .Actor:Self $Script_Idle_Boo )
	Return
	End
}
	
#new:Script $Script_Idle_Boo
{
Return
End
}
