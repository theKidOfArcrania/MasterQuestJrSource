
#define .SpellStartX  -300`
#define .SpellStartY   300`

% Immediately vanishes owner of calling script.
#new:Function $Function_Vanish % ( duration )
{
	ADDIU	SP, SP, FFE0
	SW		RA, 10 (SP)
	SW		S1, 14 (SP)
	SW		S2, 18 (SP)
	% get turn count
	LW		A1, 0 (S0)
	JAL		~Func:get_variable
	DADDU	S1, A0, R0
	ANDI	V0, V0, 00FF
	% add electify status
	LW		A0, 148 (S1)
	JAL		~Func:get_actor
	DADDU	S2, V0, R0
	ORI		S2, S2, 0E00
	SH		S2, 218 (V0)
	% return
	LW		RA, 10 (SP)
	LW		S1, 14 (SP)
	LW		S2, 18 (SP)
	ADDIU	V0, R0, 2
	JR		RA
	ADDIU	SP, SP, 20
}
	
% ====================================================
% Piranha Plant
% + Increased length of poison (3 -> 5 turns)
% + Faster bite (10 -> 6 frame delay)
% ====================================================

@ $PutridPiranha
{
% stats
[Index]        2Db 
[Level]        17`b 
[MaxHP]        12`b 
[Escape]       30`b
[Hurricane]    10`b % Bow's "Spook" as well 
}

@ $StatusTable_8021B100
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      15`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      40`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     75`
.Status:Stop       65`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod       0`
.Status:End
}

@ $Script_Breath
{
[4B0]	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 80020364 00000004 00000020 )
}

@ $Script_Bite
{
[720]	Wait     00000006
[76C]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000007 00000020 )
}

% ====================================================
% WMagikoopa
% + Heals an ally by 8 HP or all allies by 5 HP
% + 50% chance to spawn with transparent
% + Can vanish self
% + Shape spell flies in from off screen
% + Less XP
% ====================================================

@ $WMagikoopa
{
[Level]        19`b % was 21
}

@ $FlyingWMagikoopa
{
[Level]        19`b % was 21
}

@ $Script_Init_80225F58 % Ground
{
	Call	BindIdle    	( .Actor:Self $Script_Idle_80223E14 )
	Call	BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802274E4 )
	Call	BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80223E24 )
	Call	SetActorVar 	( .Actor:Self 00000000 00000000 )
	% 50% chance to spawn with invisible status
	Call	RandInt	 ( 100` *Var[0] )
	If	*Var[0] > 50`
		Call	$Function_Vanish ( 2 )
	EndIf
	Return
	End
}

@ $Script_Init_80225FBC % Flying
{
	Call     BindIdle    	( .Actor:Self $Script_Idle_80223E14 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802274E4 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224A44 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	% 50% chance to spawn with invisible status
	Call	RandInt	 ( 100` *Var[0] )
	If	*Var[0] > 50`
		Call	$Function_Vanish ( 2 )
	EndIf
	Return
	End
}
	
@ $Script_TakeTurn_802274E4
{
	% if alone, flee
	Call     CountPlayerTargets ( FFFFFF81 00008002 *Var[0] )
	If       *Var[0] ==  00000001 
		ExecWait $Script_WMagikoopa_RunAway 
		Return
	EndIf
	% 30% chance to go invisible
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  04002000 
		Call	RandInt	( 100` *Var[0] )
		If	*Var[0] > 70`
			ExecWait $Script_VanishSelf
			Return
		EndIf
	EndIf
   % else, decide what to do based on allies' HP
	Set      *Var[A] 00000000 % num hurt
	Set      *Var[B] 00000000 % heal all amount
	Set      *Var[C] 00000000 % best heal amount
	Set      *Var[D] 00000000 % best npc
	Set      *Var[E] 7FFFFFFF % best npc HP
	Call     EnemyCreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
		Label    0` 
		Call     GetOwnerTarget 	( *Var[0] *Var[1] )
		Call     GetActorHP      ( *Var[0] *Var[2] )
		Call     GetEnemyMaxHP   ( *Var[0] *Var[3] )
		If       *Var[2]  !=  *Var[3]
			Call     GetOwnerTarget 	( *Var[0] *Var[1] )
			Add      *Var[A] 00000001 
			% get heal amount
			Set     *Var[F] *Var[3]
			Sub     *Var[F] *Var[2]
			Add     *Var[B] *Var[F]
			% check against most injured ally
			If	*Var[F] >= *Var[C]
				If *Var[F] == *Var[C]
					% heal amount == best heal, prioritize ally with lowest HP
					If *Var[2] < *Var[E]
						Set    *Var[C] *Var[F]
						Set    *Var[D] *Var[0]
						Set    *Var[E] *Var[2]
					EndIf
				Else
					% heal amount > best heal, found new best heal
					Set    *Var[C] *Var[F]
					Set    *Var[D] *Var[0]
					Set    *Var[E] *Var[2]
				EndIf
			EndIf
		EndIf
		Call     ChooseNextTarget 	( 00000000 *Var[0] )
		If       *Var[0]  !=  FFFFFFFF
			Goto     0` 
		EndIf
	% choose an action
	If  *Var[A] == 0
		% attack if noone is hurt
		ExecWait $Script_WMagikoopa_DoAttack
	Else
		% noone is badly hurt, attack with P = 0.4
		If *Var[B] < 5
			Call     RandInt ( 100` *Var[9] )
			If       *Var[9]  <=  40`
				ExecWait $Script_WMagikoopa_DoAttack 
			Else
				ExecWait $Script_WMagikoopa_DoHeal 
			EndIf
		% need to heal someone
		Else
			ExecWait $Script_WMagikoopa_DoHeal
		EndIf
	EndIf
	Return
	End
}

% Assume numHurt > 0 when this script is executed
#new:Script $Script_WMagikoopa_DoHeal
{
	If *Var[A] == 1
		% heal the only hurt ally
		ExecWait $Script_HealOne
	Else
		% choose the option that restores the most HP
		If *Var[B] > *Var[C]
			ExecWait $Script_HealAll 
		Else
			ExecWait $Script_HealOne 
		EndIf
	EndIf
	Return
	End
}

#new:Script $Script_WMagikoopa_DoAttack
{
	% 70% chance to go invisible
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  04002000 
		Call	RandInt	( 100` *Var[0] )
		If	*Var[0] > 30`
			ExecWait $Script_VanishSelf
			Return
		EndIf
	EndIf
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If       *Var[0]  &  00000200 
		ExecWait $Script_WMagikoopa_ShapeSpell 
	Else
		ExecWait $Script_RandomAttack 
	EndIf
	Return
	End
}

#new:Script $Script_RandomAttack
{
	Call	RandInt	( 100` *Var[0] )
	If	*Var[0] > 50`
		ExecWait $Script_WMagikoopa_WandStrike 
	Else
		ExecWait $Script_WMagikoopa_ShapeSpell
	EndIf
	Return
	End
}

% Shape spell now rains down from the top left corner of the screen.
@ $Script_WMagikoopa_ShapeSpell
{
[288]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[2B0]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[4A4]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[4CC]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
}

@ $Script_HealAll
{
[5E0]	Call     HealActor     	( *Var[0] 00000005 00000001 )	% was 3
}

@ $Script_HealOne
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( FFFFFF81 00000000 )
	Call     UseBattleCamPreset 	( 0000000E )
	Call     BattleCamTargetActor ( FFFFFF81 )
	Call     MoveBattleCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If       *Var[0] !&  00000200 
		Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
	Else
		Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self 000020D4 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If       *Var[0] !&  00000200 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     GetStatusFlags ( .Actor:Self *Var[A] )
		If       *Var[A]  &  00080000 
			Sub      *Var[0] 00000006 
			Add      *Var[1] 0000000C 
			Sub      *Var[2] 00000002 
			Call     PlayEffect  	( 00000033 00000007 *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Else
			Sub      *Var[0] 00000010 
			Add      *Var[1] 0000001F 
			Sub      *Var[2] 00000002 
			Call     PlayEffect  	( 00000033 00000007 *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		EndIf
	Else
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     GetStatusFlags ( .Actor:Self *Var[A] )
		If       *Var[A]  &  00080000 
			Sub      *Var[0] 0000000C 
			Add      *Var[1] 0000000E 
			Sub      *Var[2] 00000002 
			Call     PlayEffect  	( 00000033 00000007 *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Else
			Sub      *Var[0] 0000001E 
			Add      *Var[1] 00000024 
			Sub      *Var[2] 00000002 
			Call     PlayEffect  	( 00000033 00000007 *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If       *Var[0] !&  00000200 
		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
	Else
		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
	EndIf
	Wait     00000005 
	Thread
		Wait     00000005 
		Call     PlaySoundAtActor 	( *Var[D] 0000206D )
		Call     PlaySoundAtActor 	( *Var[D] 00000214 )
		Wait     0000001E 
		Call     PlaySoundAtActor 	( *Var[D] 0000025C )
	EndThread
	Thread
		Call     8026BF48 ( 00000001 )
		Call     HealActor  ( *Var[D] 00000008 00000000 ) % was 5
		Call     8026BF48 ( 00000000 )
	EndThread
	Call     WaitForBuffDone ( )
	Call     UseBattleCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     YieldTurn ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_VanishSelf
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( FFFFFF81 00000000 )
	Call     UseBattleCamPreset 	( 0000000E )
	Call     BattleCamTargetActor ( FFFFFF81 )
	Call     MoveBattleCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If       *Var[0] !&  00000200 
		Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
	Else
		Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self 000020D4 )
	Call     GetActorFlags 		( .Actor:Self *Var[0] )
	If       *Var[0] !&  00000200 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     GetStatusFlags ( .Actor:Self *Var[A] )
		If       *Var[A]  &  00080000 
			Sub      *Var[0] 00000006 
			Add      *Var[1] 0000000C 
			Sub      *Var[2] 00000002 
			Call     PlayEffect  	( 00000033 00000006 *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Else
			Sub      *Var[0] 00000010 
			Add      *Var[1] 0000001F 
			Sub      *Var[2] 00000002 
			Call     PlayEffect  	( 00000033 00000006 *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		EndIf
	Else
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     GetStatusFlags ( .Actor:Self *Var[A] )
		If       *Var[A]  &  00080000 
			Sub      *Var[0] 0000000C 
			Add      *Var[1] 0000000E 
			Sub      *Var[2] 00000002 
			Call     PlayEffect  	( 00000033 00000006 *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Else
			Sub      *Var[0] 0000001E 
			Add      *Var[1] 00000024 
			Sub      *Var[2] 00000002 
			Call     PlayEffect  	( 00000033 00000006 *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If       *Var[0] !&  00000200 
		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
	Else
		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
	EndIf
	Wait     00000005 
	Thread
		Wait     0000000A 
		Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
	EndThread
	Thread
		Call     8026BF48 ( 00000001 )
		Call     VanishActor ( .Actor:Self 00000002 )
		Call     8026BF48 ( 00000000 )
	EndThread
	Call     WaitForBuffDone ( )
	Call     UseBattleCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     YieldTurn ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

% ====================================================
% RMagikoopa
% + Boosts attack by 2 per cast (+4 damage)
% + Shape spell flies in from off screen
% + Less XP
% ====================================================

@ $RMagikoopa
{
[Level]        19`b % was 21
}

@ $FlyingRMagikoopa
{
[Level]        19`b % was 21
}

@ $Script_TakeTurn_802233E0
{
[C8]	If       *Var[4] <=  00000006			% maximum attack boost (was 3)
[6A8]	Call     BoostAttack ( *Var[8] 00000002 )	% Increase attack boost from +1 to +2 (damage boost = +4)
}

% Shape spell now rains down from the top left corner of the screen.
@ $Script_RMagikoopa_ShapeSpell
{
[288]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[2B0]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[4A4]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[4CC]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
}

% ====================================================
% Medi Guys (same changes as Chapter 4)
% + Heals an ally by 6HP or all allies by 3HP
% + Increased heal frequency, improved move selection AI
% + Attack speed increased, 40% chance to inflict Sleep
% + Added 1 defense for increased resiliency
% ====================================================

@ $MediGuy
{
% stats
[Index]        22b 
[Level]        14`b 
[MaxHP]         9`b 
}

#delete $Script_80220CEC

@ $DefenseTable_8021F8DC
{
.Element:Normal  00000001
.Element:Shock   00000000
.Element:End
}

@ $Script_TakeTurn_80220DCC
{
	Set      *Var[A] 00000000 % num hurt
	Set      *Var[B] 00000000 % heal all amount
	Set      *Var[C] 00000000 % best heal amount
	Set      *Var[D] 00000000 % best npc
	Set      *Var[E] 7FFFFFFF % best npc HP
	% check HP of allies
	Call     EnemyCreateTargetList 	( 00000002 )
	Call     InitTargetIterator 	( )
		Label    0` 
		Call     GetOwnerTarget 	( *Var[0] *Var[1] )
		Call     GetActorHP      ( *Var[0] *Var[2] )
		Call     GetEnemyMaxHP   ( *Var[0] *Var[3] )
		If       *Var[2]  !=  *Var[3]
			Call     GetOwnerTarget 	( *Var[0] *Var[1] )
			Add      *Var[A] 00000001 
			% get heal amount
			Set     *Var[F] *Var[3]
			Sub     *Var[F] *Var[2]
			Add     *Var[B] *Var[F]
			% check against most injured ally
			If	*Var[F] >= *Var[C]
				If *Var[F] == *Var[C]
					% heal amount == best heal, prioritize ally with lowest HP
					If *Var[2] < *Var[E]
						Set    *Var[C] *Var[F]
						Set    *Var[D] *Var[0]
						Set    *Var[E] *Var[2]
					EndIf
				Else
					% heal amount > best heal, found new best heal
					Set    *Var[C] *Var[F]
					Set    *Var[D] *Var[0]
					Set    *Var[E] *Var[2]
				EndIf
			EndIf
		EndIf
		Call     ChooseNextTarget 	( 00000000 *Var[0] )
		If       *Var[0]  !=  FFFFFFFF
			Goto     0` 
		EndIf
	% choose an action
	If  *Var[A] == 0
		% attack if noone is hurt
		ExecWait $Script_FlyingAttack
	Else
		% noone is badly hurt, attack with P = 0.4
		If *Var[B] < 4
			Call     RandInt ( 64 *Var[9] )
			If       *Var[9]  <=  28
				ExecWait $Script_FlyingAttack 
			Else
				ExecWait $Script_MediGuy_DoHeal 
			EndIf
		% need to heal someone
		Else
			ExecWait $Script_MediGuy_DoHeal
		EndIf
	EndIf
	Return
	End
}

% Assume numHurt > 0 when this script is executed
#new:Script $Script_MediGuy_DoHeal
{
	If *Var[A] == 1
		% heal the only hurt ally
		Set    *Var[0] *Var[D]
		ExecWait $Script_HealOneAlly
	Else
		% choose the option that restores the most HP
		If *Var[B] > *Var[C]
			ExecWait $Script_MediGuy_HealAll 
		Else
			Set    *Var[0] *Var[D]
			ExecWait $Script_HealOneAlly 
		EndIf
	EndIf
	Return
	End
}

#new:Script $Script_MediGuy_HealAll
{
	% begin heal all
	Call     UseIdleAnimation 	( FFFFFF81 00000000 )
	Call     EnableIdleScript 	( FFFFFF81 00000000 )
	Call     SetTargetActor 	( FFFFFF81 00000000 )
	Call     UseBattleCamPreset 	( 0000000E )
	Call     BattleCamTargetActor 	( FFFFFF81 )
	Call     MoveBattleCamOver 	( 0000000F )
	Wait     0000000F 
	% casting animation
	Call     GetOwnerID 	( *Var[0] )
	Call     GetActorPos       	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     PlaySoundAtActor   ( FFFFFF81 000002F8 )
	Call     PlaySoundAtActor   ( FFFFFF81 00000214 )
	Call     PlaySoundAtActor   ( FFFFFF81 00000000 )
	Call     SetAnimation 		( FFFFFF81 00000001 00400005 )
	Add      *Var[2] 00000032 
	Call     PlayEffect       	( 00000011 00000001 *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     PlayEffect       	( 00000040 00000002 *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Wait     30` 
	Call     SetAnimation 	( FFFFFF81 00000001 00400001 )
	Wait     10` 
	% loop over all enemies
	Call     EnemyCreateTargetList 	( 00008002 )
	Call     InitTargetIterator	( )
		Label    00000000 
		Call     GetOwnerTarget 	( *Var[0] *Var[1] )
		Thread
			Wait     00000005 
			Call     PlaySoundAtActor    ( *Var[0] 0000206D )
			Call     PlaySoundAtActor    ( *Var[0] 00000214 )
			Wait     30` 
			Call     PlaySoundAtActor    ( *Var[0] 0000025C )
		EndThread
		Thread
			Call     8026BF48 	( 00000001 )
			Call     HealActor   	( *Var[0] 00000003 00000001 )
			Call     8026BF48 	( 00000000 )
		EndThread
		Call     ChooseNextTarget    	( 00000000 *Var[0] )
		If       *Var[0]  !=  FFFFFFFF
			Goto     00000000 
		EndIf
	% reset and return
	Call     WaitForBuffDone 	( )
	Wait     1` 
	Call     UseBattleCamPreset 	( 00000002 )
	Wait     10` 
	Call     YieldTurn 	( )
	Call     EnableIdleScript 	( FFFFFF81 00000001 )
	Call     UseIdleAnimation 	( FFFFFF81 00000001 )
	Return
	End
}

% Heal individual targets for a fixed 6HP, rather than 60% (effectively 4)
@ $Script_HealOneAlly
{
[270]	Call     HealActor 	( *Var[A] 6` 00000000 )
}

% Increase swoop speed, add chance for 40% chance for sleep
@ $Script_FlyingAttack
{
[640]	Call     SetActorSpeed     	( FFFFFF81 *Fixed[12.000000] )
[694]	Call     EnemyDamageTarget       ( FFFFFF81 *Var[0] 00000000 00000000 80001328 00000003 00000020 )
}

% ====================================================
% SpikeTop
% + Lunge attack is 50% faster
% ====================================================

@ $SpikeTop
{
% stats
[MaxHP]         5`b 
[Escape]       50`b 
}

@ $DefenseTable_8021C8B0
{
.Element:Normal 00000005
.Element:Fire   00000063
.Element:Blast  00000063
.Element:End
}

@ $DefenseTable_8021C8CC
{
.Element:Normal 00000001
.Element:Fire   00000063
.Element:Blast  00000063
.Element:End
}

@ $Script_SpikeTop_TakeTurn_Floor
{
[7A0]  Call     SetActorSpeed 	( .Actor:Self *Fixed[21.0] ) % was 14.0
[7D8]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000005 00000020 )
}

@ $StatusTable_8021C8D8
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      60`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear    0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       -1`
.Status:End
}

%=====================================================
%Lava Bubble

@ $LavaBubble
{
% stats
[Index]        2Bb 
[Level]        17`b 
[MaxHP]         9`b
[Escape]       50`b 
}

@ $Script_TakeTurn_8021AEA4
{
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   50:  	ExecWait $Script_Fireballs_Player 
   7C:  	Return
   84:  EndIf
   8C:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
   A4:  Switch  *Var[0] 
   B0:  	Case  ==  00000000 
  12C:  		ExecWait $Script_Fireballs_Player
				Call     SetActorVar 	( .Actor:Self 00000006 00000001 )
  148:  	Case  ==  00000001
  154:  		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
  168:  		If  *Var[0]  &  01000000
  178:  			ExecWait $Script_Fireballs_Player
					Call     SetActorVar 	( .Actor:Self 00000006 00000002 )  
  184:  		Else
  18C:  			Call     RandInt     	( 000003E8 *Var[0] )
  1A0:  			If  *Var[0]  <=  0000012C 
  1B0:  				ExecWait $Script_Fireballs_Partner
						Call     SetActorVar 	( .Actor:Self 00000006 00000002 )
  1BC:  			Else
  1C4:  				ExecWait $Script_Fireballs_Player
						Call     SetActorVar 	( .Actor:Self 00000006 00000002 )
  1D0:  			EndIf
  1D8:  		EndIf  
			Default
  178:  			ExecWait $Script_FireTackle
					Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
  1E0:  EndSwitch
  1E8:  Return
  1F0:  End
}

@ $Script_FireTackle
{
  0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00460003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   B8:  Add  *Var[0]  0000001E 
   C8:  Set  *Var[1]  00000005 
   D8:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   F4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  108:  Thread
  110:  	Call     $Function_80218000 ( )
  11C:  EndThread
  124:  Call     FlyToGoal  	( .Actor:Self 00000000 00000000 .Easing:SinOut )
  140:  Call     SetAnimation 	( .Actor:Self 00000001 00460001 )
  158:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  17C:  Switch  *Var[0] 
  188:  	CaseOR  ==  00000006 
  194:  	CaseOR  ==  00000005 
  1A0:  		Set  *Var[A]  *Var[0] 
  1B0:  		Call     SetAnimation 	( .Actor:Self 00000001 00460004 )
  1C8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1D8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F4:  		Sub  *Var[0]  00000014 
  204:  		Set  *Var[1]  00000000 
  214:  		Add  *Var[2]  00000001 
  224:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  238:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  254:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  274:  		If  *Var[A]  ==  00000005 
  284:  			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  2A8:  		EndIf
  2B0:  		Sub  *Var[0]  0000001E 
  2C0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2DC:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  2FC:  		Sub  *Var[0]  00000014 
  30C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  328:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  348:  		Sub  *Var[0]  0000000A 
  358:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 00000003 00000000 00000001 00000000 )
  394:  		Wait     0000000E 
  3A0:  		Call     UseBattleCamPreset 	( 00000002 )
  3B0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3CC:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  3E0:  		ExecWait $Script_80219464 
  3EC:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  400:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  418:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  42C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  440:  		Return
  448:  	EndCaseGroup
  450:  EndSwitch
  458:  Call     SetAnimation 	( .Actor:Self 00000001 00460004 )
  470:  Call     SetGoalToTarget 	( .Actor:Self )
  480:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  49C:  Add  *Var[2]  00000001 
  4AC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.6005859] )
  4C0:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4DC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  4FC:  Wait     00000002 
  508:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000002 00000020 )
    % ADDED THIS TO MAKE IT HARDER
			Call	PlaySoundAtActor	( .Actor:Player 000002D8 )
			Thread % added
				Call	8026BF48	( 00000001 )
				Call	BoostDefense	( .Actor:Player FFFFFFFF )
				Call	8026BF48	( 00000000 )
			EndThread % added
  530:  Switch  *Var[0] 
  53C:  	CaseOR  ==  00000000 
  548:  	CaseOR  ==  00000002 
  554:  		Call     UseBattleCamPreset 	( 00000002 )
  564:  		Set  *Var[0]  00000001 
  574:  		Set  *Var[1]  00460004 
  584:  		ExecWait 8029BD70 
  590:  		Wait     00000005 
  59C:  		ExecWait $Script_80219464 
  5A8:  	EndCaseGroup
  5B0:  EndSwitch
    %	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  5B8:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  5CC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5E0:  Return
  5E8:  End
}

@ $Script_Fireballs_Partner
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Partner )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   90:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   A8:  If  *Var[A]  ==  00000001 
   B8:  	Add  *Var[0]  00000064 
   C8:  	Set  *Var[1]  00000005 
   D8:  Else
   E0:  	Add  *Var[0]  0000001E 
   F0:  	Set  *Var[1]  00000032 
  100:  EndIf
  108:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00460003 )
  13C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  150:  Thread
  158:  	Call     $Function_80218000  ( )
  164:  EndThread
  16C:  Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
  188:  Call     SetAnimation 	( .Actor:Self 00000001 00460001 )
  1A0:  Wait     0000000A 
  1AC:  Call     SetAnimation 	( .Actor:Self 00000001 00460005 )
  1C4:  Wait     0000001E 
  1D0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  00000006 
  20C:  	CaseOR  ==  00000005 
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetAnimation 	( .Actor:Self 00000001 00460006 )
  240:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  		Sub  *Var[0]  00000005 
  26C:  		Add  *Var[1]  00000004 
  27C:  		Add  *Var[2]  00000002 
  28C:  		Call     SetGoalToTarget 	( .Actor:Self )
  29C:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B8:  		Sub  *Var[3]  00000064 
  2C8:  		Add  *Var[5]  00000002 
  2D8:  		ExecWait $Script_8021A218  
  2E4:  		If  *Var[A]  ==  00000005 
  2F4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  318:  		EndIf
  320:  		Wait     00000014 
  32C:  		Call     UseBattleCamPreset 	( 00000002 )
  33C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  358:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  36C:  		ExecWait $Script_80219464  
  378:  		Wait     00000014 
  384:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  398:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D8:  		Return
  3E0:  	EndCaseGroup
  3E8:  EndSwitch
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 00460006 )
  408:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  424:  Sub  *Var[0]  00000005 
  434:  Add  *Var[1]  00000004 
  444:  Add  *Var[2]  00000002 
  454:  Call     SetGoalToTarget 	( .Actor:Self )
  464:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  480:  Sub  *Var[4]  00000006 
  490:  Add  *Var[5]  00000002 
  4A0:  ExecWait $Script_8021A218  
  4AC:  Wait     00000002 
  4B8:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000002 00000020 )
  4E0:  Wait     00000014 
  4EC:  Switch  *Var[0] 
  4F8:  	CaseOR  ==  00000000 
  504:  	CaseOR  ==  00000002 
  510:  		Call     UseBattleCamPreset 	( 00000002 )
  520:  		ExecWait $Script_80219464  
  52C:  	EndCaseGroup
  534:  EndSwitch
   	%	Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  53C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  550:  Call     UseIdleAnimation 	( .Actor:Self .True )
  564:  Return
  56C:  End  
}
  
@ $Script_Fireballs_Player
{
   0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   90:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   A8:  If  *Var[A]  ==  00000001 
   B8:  	Add  *Var[0]  00000064 
   C8:  	Set  *Var[1]  00000005 
   D8:  Else
   E0:  	Add  *Var[0]  0000001E 
   F0:  	Set  *Var[1]  00000032 
  100:  EndIf
  108:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00460003 )
  13C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  150:  Thread
  158:  	Call     $Function_80218000  ( )
  164:  EndThread
  16C:  Call     FlyToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
  188:  Call     SetAnimation 	( .Actor:Self 00000001 00460001 )
  1A0:  Wait     0000000A 
  1AC:  Call     SetAnimation 	( .Actor:Self 00000001 00460005 )
  1C4:  Wait     0000001E 
  1D0:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  00000006 
  20C:  	CaseOR  ==  00000005 
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetAnimation 	( .Actor:Self 00000001 00460006 )
  240:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  		Sub  *Var[0]  00000005 
  26C:  		Add  *Var[1]  00000004 
  27C:  		Add  *Var[2]  00000002 
  28C:  		Call     SetGoalToTarget 	( .Actor:Self )
  29C:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B8:  		Sub  *Var[3]  00000064 
  2C8:  		Add  *Var[5]  00000002 
  2D8:  		ExecWait $Script_8021A218  
  2E4:  		If  *Var[A]  ==  00000005 
  2F4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  318:  		EndIf
  320:  		Wait     00000014 
  32C:  		Call     UseBattleCamPreset 	( 00000002 )
  33C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  358:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  36C:  		ExecWait $Script_80219464  
  378:  		Wait     00000014 
  384:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  398:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D8:  		Return
  3E0:  	EndCaseGroup
  3E8:  EndSwitch
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 00460006 )
  408:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  424:  Sub  *Var[0]  00000005 
  434:  Add  *Var[1]  00000004 
  444:  Add  *Var[2]  00000002 
  454:  Call     SetGoalToTarget 	( .Actor:Self )
  464:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  480:  Sub  *Var[4]  00000006 
  490:  Add  *Var[5]  00000002 
  4A0:  ExecWait $Script_8021A218  
  4AC:  Wait     00000002 
  5C8:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000003 00000020 )
  Wait     00000006
  5C8:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000003 00000020 )
  Wait     00000006
  5C8:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000003 00000020 )
  4E0:  Wait     00000014 
  4EC:  Switch  *Var[0] 
  4F8:  	CaseOR  ==  00000000 
  504:  	CaseOR  ==  00000002 
  510:  		Call     UseBattleCamPreset 	( 00000002 )
  520:  		ExecWait $Script_80219464  
  52C:  	EndCaseGroup
  534:  EndSwitch
   %		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  53C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  550:  Call     UseIdleAnimation 	( .Actor:Self .True )
  564:  Return
  56C:  End  
}
  
	%NEW ENEMIES
	%more defensive enemy to encourage power quake usage
	%paired with flying enemies to reduce effectiveness
	
#import DarkBristle.bpat
	
#import SmuffPuff.bpat
	
% ====================================================
% Formation Changes
% + Added Dark Bristle.
% + Added Smuff Puff
% ====================================================

@ $Formation_00 % kzn_02, kzn_11
{
$LavaBubble 00000001 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000007 00000009 00000000 00000000 00000000 00000000 
$SpikeTop   00000003 00000008 00000000 00000000 00000000 00000000 % added
}

@ $Formation_08 % kzn_03 (upper)
{
$SpikeTop    00000001 0000000A 00000000 00000000 00000000 00000000 
%$SpikeTop    00000002 00000009 00000000 00000000 00000000 00000000 
$LavaBubble  00000002 00000008 00000000 00000000 00000000 00000000 % added
$SmuffPuff   00000006 00000007 00000000 00000000 00000000 00000000 % added
}

@ $Formation_09 % kzn_03 (upper)
{
$SpikeTop   00000003 0000000A 00000000 00000000 00000000 00000000 
%$LavaBubble 00000002 00000009 00000000 00000000 00000000 00000000 
$LavaBubble 00000007 00000008 00000000 00000000 00000000 00000000 % added
$SmuffPuff  0000000B 00000007 00000000 00000000 00000000 00000000 % added
}

@ $Formation_0A % kzn_03 (lower)
{
$SpikeTop      00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop      00000001 00000009 00000000 00000000 00000000 00000000 
$LavaBubble    00000002 00000008 00000000 00000000 00000000 00000000
$DarkBristle   00000003 00000007 00000000 00000000 00000000 00000000 
$LavaBubble    00000007 00000006 00000000 00000000 00000000 00000000 % added
}

@ $Formation_0F % kzn_03 (lower), kzn_09 (floor)
{
$PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000009 00000000 00000000 00000000 00000000 
$LavaBubble    00000007 00000008 00000000 00000000 00000000 00000000 % added
}

@ $Formation_0B % kzn_09 (floor)
{
$SpikeTop    000000001 0000000A 00000000 00000000 00000000 00000000 % added
$LavaBubble  00000005 00000009 00000000 00000000 00000000 00000000 % added
$DarkBristle 00000002 00000008 00000000 00000000 00000000 00000000 
$DarkBristle 00000003 00000007 00000000 00000000 00000000 00000000 
}

@ $Formation_13
{
$PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000 
%$SpikeTop      00000001 00000009 00000000 00000000 00000000 00000000 % changed
$LavaBubble    00000006 00000008 00000000 00000000 00000000 00000000 
$DarkBristle   00000002 00000007 00000000 00000000 00000000 00000000 % added
}

@ $Formation_05 % kzn_07
{
$LavaBubble    00000001 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000009 00000000 00000000 00000000 00000000 
%$SpikeTop      00000002 00000008 00000000 00000000 00000000 00000000 % added
$LavaBubble    00000003 00000007 00000000 00000000 00000000 00000000 
$SmuffPuff     00000007 00000006 00000000 00000000 00000000 00000000
}

@ $Formation_06 % kzn_07
{
$LavaBubble     00000005 0000000A 00000000 00000000 00000000 00000000 
$DarkBristle    00000001 00000009 00000000 00000000 00000000 00000000 
$SmuffPuff      00000009 00000007 00000000 00000000 00000000 00000000 % added 
}

@ $Formation_11 % kzn_08
{
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
$DarkBristle   00000001 00000009 00000000 00000000 00000000 00000000 
$DarkBristle   00000002 00000008 00000000 00000000 00000000 00000000 
$DarkBristle   00000003 00000007 00000000 00000000 00000000 00000000 % added
}

@ $Formation_07 % kzn_11
{
$LavaBubble 00000004 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop   00000002 00000009 00000000 00000000 00000000 00000000 
$LavaBubble 00000007 00000008 00000000 00000000 00000000 00000000 
$SmuffPuff  00000008 00000007 00000000 00000000 00000000 00000000 % added
}

@ $Formation_14
{
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000 
$DarkBristle 00000001 00000009 00000000 00000000 00000000 00000000 % changed
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 
$LavaBubble 00000007 00000007 00000000 00000000 00000000 00000000 % changed
}

@ $Formation_01
{
$SmuffPuff  00000005 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000006 00000009 00000000 00000000 00000000 00000000
$SmuffPuff  0000000A 00000008 00000000 00000000 00000000 00000000 
}

@ $Formation_02
{
$SmuffPuff   00000005 0000000A 00000000 00000000 00000000 00000000 
$SmuffPuff   00000006 00000009 00000000 00000000 00000000 00000000 
$DarkBristle 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $40sFormation6_15
{
$PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000
$LavaBubble    00000005 00000009 00000000 00000000 00000000 00000000 
$SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000 
$LavaBubble    00000006 00000007 00000000 00000000 00000000 00000000 % added
}

#new:Formation $40sFormation7_16
{
$PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000
$LavaBubble    00000005 00000009 00000000 00000000 00000000 00000000 
$DarkBristle   00000002 00000008 00000000 00000000 00000000 00000000 
$LavaBubble    00000006 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $40sFormation8_17
{
$LavaBubble  00000001 0000000A 00000000 00000000 00000000 00000000
$DarkBristle 00000002 00000009 00000000 00000000 00000000 00000000 
$SmuffPuff 00000009 00000008 00000000 00000000 00000000 00000000 
$LavaBubble 0000000A 00000007 00000000 00000000 00000000 00000000 
}

#new:Formation $40sFormation9_18 
{
$SmuffPuff   00000005 0000000A 00000000 00000000 00000000 00000000
$PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000
$LavaBubble  00000006 00000008 00000000 00000000 00000000 00000000
$DarkBristle 00000002 00000007 00000000 00000000 00000000 0000000  
}

@ $FormationTable
{
$SJIS_8022A3AC 00000003 $Formation_00 $Stage_802277F8 00000000 % **
$SJIS_8022A3A0 00000003 $Formation_01 $Stage_802277F8 00000000 % new smuffpuff battle
$SJIS_8022A394 00000003 $Formation_02 $Stage_802277F8 00000000 % advanced smuffpuff battle
$SJIS_8022A37C 00000004 $Formation_03 $Stage_802277F8 00000000 % unused
$SJIS_8022A360 00000003 $Formation_04 $Stage_802277F8 00000000 % unused
$SJIS_8022A348 00000004 $Formation_05 $Stage_802277F8 00000000 % **
$SJIS_8022A32C 00000003 $Formation_06 $Stage_802277F8 00000000 % **
$SJIS_8022A318 00000004 $Formation_07 $Stage_802277F8 00000000 
$SJIS_8022A308 00000003 $Formation_08 $Stage_802277F8 00000000 % **
$SJIS_8022A2F4 00000003 $Formation_09 $Stage_802277F8 00000000 % **
$SJIS_8022A2DC 00000005 $Formation_0A $Stage_802277F8 00000000 % **
$SJIS_8022A2C0 00000004 $Formation_0B $Stage_802277F8 00000000 % **
$SJIS_8022A2A0 00000003 $Formation_0C $Stage_802277F8 00000000 % unused
$SJIS_8022A27C 00000004 $Formation_0D $Stage_802277F8 00000000 
$SJIS_8022A264 00000004 $Formation_0E $Stage_802277F8 00000000 % unused
$SJIS_8022A250 00000003 $Formation_0F $Stage_802277F8 00000000 % **
$SJIS_8022A23C 00000003 $Formation_10 $Stage_802277F8 00000000 % unused
$SJIS_8022A210 00000004 $Formation_11 $Stage_802277F8 00000000 % **
$SJIS_8022A1F0 00000003 $Formation_12 $Stage_802277F8 00000000 % unused
$SJIS_8022A1C0 00000003 $Formation_13 $Stage_802277F8 00000000 % **
$SJIS_8022A188 00000004 $Formation_14 $Stage_802277F8 00000000 
00000000 00000004 $40sFormation6_15 $AncientStage 00000000
00000000 00000004 $40sFormation7_16 $AncientStage 00000000 
00000000 00000004 $40sFormation8_17 $AncientStage 00000000 
00000000 00000004 $40sFormation9_18 $AncientStage 00000000
00000000 00000000 00000000 00000000 00000000 % unused
}

#new:Stage $AncientStage
{
"kpa_tex"
"kmr_bt07_shape"
"kmr_bt07_hit"
$Script_BeforeBoss 
$Script_AfterBoss
00000000 
00000000
00000000 
00000000 
00000000 
}

#new:Script $Script_BeforeBoss
{
	Call	SetSpriteShading 	( FFFFFFFF )
	Call	SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End
}

#new:Script $Script_AfterBoss
{
	Return
	End 
}
