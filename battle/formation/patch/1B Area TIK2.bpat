
% ====================================================
% Blooper
% + Increased max HP (30 -> 45)
% + Increased level (44 -> 64)
% + Increased damage of attacks
% + Ink spray attack has 100% chance to poison (4 turns)
% ====================================================

@ $Blooper
{
[MaxHP] 40`b 
[Level] 54`b 
[PowerBounce]  3`b 
}

@ $Script_SprayInk
{
[6CC]	Call	EnemyDamageTarget	( .Actor:Self *Var[F] 10000000 00000000 80020464 00000004 00000020 )
}

@ $Script_Tackle
{
[550]	Call	EnemyDamageTarget	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
}

@ $StatusTable_8021A714
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      70`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   70`
.Status:Shrink     70`
.Status:Stop      100`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod      -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End
}

% ====================================================
% Baby Blooper
% - Increased damage (2 -> 3)
% ====================================================

@ $Script_TakeTurn_8022319C
{
[A9C]	Call	EnemyDamageTarget	( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
}

#define .ZaptapOn *GameByte[030]

@ $Script_HandleEvent_80222CF8
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00510002 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:Death
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00510002 
   C0:  		ExecWait DoNormalHit 
   CC:  		SetConst  *Var[1]  00510003 
   DC:  		ExecWait $Script_80223170 
   E8:  		Return
   F0:  	Case  ==  .Event:BurnHit
   FC:  		Set  *Var[0]  00000001 
  10C:  		Set  *Var[1]  00510004 
  11C:  		Set  *Var[2]  00510005 
  12C:  		ExecWait DoBurnHit 
  138:  	Case  ==  .Event:BurnDeath
  144:  		Set  *Var[0]  00000001 
  154:  		Set  *Var[1]  00510004 
  164:  		Set  *Var[2]  00510005 
  174:  		ExecWait DoBurnHit 
  180:  		SetConst  *Var[1]  00510005 
  190:  		ExecWait $Script_80223170 
  19C:  		Return
  1A4:  	Case  ==  .Event:SpinSmashHit
  1B0:  		SetConst  *Var[0]  00000001 
  1C0:  		SetConst  *Var[1]  00510002 
  1D0:  		ExecWait 8029B998 
  1DC:  	Case  ==  .Event:SpinSmashDeath
  1E8:  		SetConst  *Var[0]  00000001 
  1F8:  		SetConst  *Var[1]  00510002 
  208:  		ExecWait 8029B998 
  214:  		SetConst  *Var[0]  00000001 
  224:  		SetConst  *Var[1]  00510003 
  234:  		ExecWait $Script_80223170 
  240:  		Return
  248:  	CaseOR  ==  00000017
  254:  	CaseOR  ==  .Event:Immune
  260:  	CaseOR  ==  .Event:AirLiftFailed
  26C:  		SetConst  *Var[0]  00000001 
  27C:  		SetConst  *Var[1]  00510000 
  28C:  		ExecWait DoImmune 
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:ShockHit
  2AC:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
		Set 	.ZaptapOn 00000001
  2C8:  		SetConst  *Var[0]  00000001 
  2D8:  		SetConst  *Var[1]  00510002 
  2E8:  		ExecWait DoShockHit 
  2F4:  		SetConst  *Var[0]  00000001 
  304:  		SetConst  *Var[1]  00510002 
  314:  		ExecWait 8029BD70 
  320:  		ExecWait $Script_8022241C 
  32C:  	CaseOR  ==  .Event:ShockDeath
  338:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  		SetConst  *Var[0]  00000001 
  364:  		SetConst  *Var[1]  00510002 
  374:  		ExecWait DoShockHit 
  380:  		SetConst  *Var[0]  00000001 
  390:  		SetConst  *Var[1]  00510002 
  3A0:  		ExecWait 8029BD70 
  3AC:  		SetConst  *Var[0]  00000001 
  3BC:  		SetConst  *Var[1]  00510003 
  3CC:  		ExecWait $Script_80223170 
  3D8:  		Return
  3E0:  	Case  ==  .Event:EndFirstStrike
  3EC:  		ExecWait $Script_8022241C 
  3F8:  	Case  ==  .Event:RecoverStatus
  404:  		SetConst  *Var[0]  00000001 
  414:  		SetConst  *Var[1]  00510000 
  424:  		ExecWait DoRecover 
  430:  	Default
  438:  EndSwitch
  440:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  454:  Call     UseIdleAnimation 	( .Actor:Self .True )
  468:  Return
  470:  End
}

% ====================================================
% Electro Blooper
% + Increased HP (50 -> 80)
% + Increased level (50 -> 64)
% + Ink spray attack has 100% chance to poison (6 turns)
% + Summons Blooper Babies
% ====================================================

@ $ElectroBlooper
{
[MaxHP] 60`b 
[Level] 64`b 
[PowerBounce]  3`b 
}

@ $StatusTable_8021C664
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     70`
.Status:Stop       70`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -3`
.Status:ShrinkTurnMod    -2`
.Status:StopTurnMod      -2`
.Status:End
}

@ $Script_SprayInk_ElectroBlooper
{
[6CC]	Call	EnemyDamageTarget	( .Actor:Self *Var[F] 10000000 00000000 80020464 00000007 00000020 )
}


@ $Script_Tackle_ElectroBlooper
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   50:  If  *Var[0]  !&  00080000 
   60:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   7C:  	Add  *Var[1]  00000070 
   8C:  	Call     UseBattleCamPreset 	( 00000013 )
   9C:  	Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   B4:  	Call     SetBattleCamZoom  	( 000001F4 )
   C4:  	Call     MoveBattleCamOver 	( 00000082 )
   D4:  Else
   DC:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   F8:  	Add  *Var[1]  00000052 
  108:  	Call     UseBattleCamPreset 	( 00000013 )
  118:  	Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
  130:  	Call     SetBattleCamZoom  	( 00000181 )
  140:  	Call     MoveBattleCamOver 	( 00000082 )
  150:  EndIf
  158:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  174:  Set  *Var[1]  00000064 
  184:  Set  *Var[3]  0000000F 
  194:  ExecWait $Script_8021C070 
  1A0:  Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
  1B4:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
  1D8:  Switch  *Var[F] 
  1E4:  	CaseOR  ==  00000006 
  1F0:  	CaseOR  ==  00000005 
  1FC:  		Thread
  204:  			Set  *Var[0]  00000000 
  214:  			Loop     00000024 
  220:  				Add  *Var[0]  0000001E 
  230:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  244:  				Wait     00000001 
  250:  			EndLoop
  258:  			Call     SetActorYaw 	( .Actor:Self 00000000 )
  26C:  		EndThread
  274:  		Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  28C:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  2A8:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  2BC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D8:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  2F8:  		Call     UseBattleCamPreset 	( 00000002 )
  308:  		Call     MoveBattleCamOver 	( 00000014 )
  318:  		If  *Var[F]  ==  00000005 
  328:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Add  *Var[0]  0000001E 
  364:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  3A0:  		Add  *Var[0]  00000014 
  3B0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3CC:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  3EC:  		ExecWait $Script_8021C54C 
  3F8:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  40C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  420:  		Return
  428:  	EndCaseGroup
  430:  EndSwitch
  438:  Thread
  440:  	Set  *Var[0]  00000000 
  450:  	Loop     00000010 
  45C:  		Add  *Var[0]  0000001E 
  46C:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  480:  		Wait     00000001 
  48C:  	EndLoop
  494:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  4A8:  EndThread
  4B0:  Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  4C8:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  4DC:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4F8:  Add  *Var[1]  0000001E 
  508:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  524:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  544:  Wait     00000002 
  550:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000007 00000020 )
  578:  Call     UseBattleCamPreset 	( 00000002 )
  588:  Call     MoveBattleCamOver 	( 00000014 )
  598:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  5AC:  If  *Var[0]  &  00100000 
  5BC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
  5D4:  Else
  5DC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  5F4:  EndIf
  5FC:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  618:  Add  *Var[0]  0000001E 
  628:  Sub  *Var[1]  0000000F 
  638:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  64C:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  668:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  688:  ExecWait $Script_8021C54C 
  694:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  6A8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6BC:  Return
  6C4:  End
}

@ $Script_ElectroTackle
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   50:  If  *Var[0]  !&  00080000 
   60:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   7C:  	Add  *Var[1]  00000070 
   8C:  	Call     UseBattleCamPreset 	( 00000013 )
   9C:  	Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   B4:  	Call     SetBattleCamZoom  	( 000001F4 )
   C4:  	Call     MoveBattleCamOver 	( 00000082 )
   D4:  Else
   DC:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   F8:  	Add  *Var[1]  00000052 
  108:  	Call     UseBattleCamPreset 	( 00000013 )
  118:  	Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
  130:  	Call     SetBattleCamZoom  	( 00000181 )
  140:  	Call     MoveBattleCamOver 	( 00000082 )
  150:  EndIf
  158:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  174:  Set  *Var[1]  00000064 
  184:  Set  *Var[3]  0000000F 
  194:  ExecWait $Script_8021C070 
  1A0:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000020 00000000 00000001 00000010 )
  1C4:  Switch  *Var[F] 
  1D0:  	CaseOR  ==  00000006 
  1DC:  	CaseOR  ==  00000005 
  1E8:  		Thread
  1F0:  			Set  *Var[0]  00000000 
  200:  			Loop     00000024 
  20C:  				Add  *Var[0]  0000001E 
  21C:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  230:  				Wait     00000001 
  23C:  			EndLoop
  244:  			Call     SetActorYaw 	( .Actor:Self 00000000 )
  258:  		EndThread
  260:  		Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  278:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  294:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  2A8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C4:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  2E4:  		Call     UseBattleCamPreset 	( 00000002 )
  2F4:  		Call     MoveBattleCamOver 	( 00000014 )
  304:  		If  *Var[F]  ==  00000005 
  314:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  338:  		EndIf
  340:  		Add  *Var[0]  0000001E 
  350:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  38C:  		Add  *Var[0]  00000014 
  39C:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B8:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  3D8:  		ExecWait $Script_8021C54C 
  3E4:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  3F8:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  40C:  		Return
  414:  	EndCaseGroup
  41C:  EndSwitch
  424:  Thread
  42C:  	Set  *Var[0]  00000000 
  43C:  	Loop     00000010 
  448:  		Add  *Var[0]  0000001E 
  458:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  46C:  		Wait     00000001 
  478:  	EndLoop
  480:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  494:  EndThread
  49C:  Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  4B4:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  4C8:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4E4:  Add  *Var[1]  0000001E 
  4F4:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  510:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  530:  Wait     00000002 
  53C:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000020 00000008 00000000 0000000D 00000020 )
  564:  If  *Var[F]  !=  00000007 
  574:  	ExecWait $Script_8021EE44 
  580:  EndIf
  588:  Call     UseBattleCamPreset 	( 00000002 )
  598:  Call     MoveBattleCamOver 	( 00000014 )
  5A8:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  5BC:  If  *Var[0]  &  00100000 
  5CC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
  5E4:  Else
  5EC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  604:  EndIf
  60C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  628:  Add  *Var[0]  0000001E 
  638:  Sub  *Var[1]  0000000F 
  648:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  65C:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  678:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  698:  ExecWait $Script_8021C54C 
  6A4:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  6B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6CC:  Return
  6D4:  End
}


@ $Script_TakeTurn_8021D40C
{
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If       *Var[0] ==  00000001 
   28:     Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   40:     ExecWait $Script_ElectroTackle 
   4C:     Return
   54:  EndIf
		% are either babies dead?
		Set  *Var[4]  0
		Call	ActorExists	( .Actor:Enemy1 *Var[0] )
		If  *Var[0]  ==  .True
			Add  *Var[4]  1
		EndIf
		Call     ActorExists	( .Actor:Enemy2 *Var[0] )
		If  *Var[0]  ==  .True
			Add  *Var[4]  1
		EndIf
		% chace to summon more
		Switch  *Var[4]
			Case  ==  2
				Set  *Var[5]  0
			Case  ==  1
				Set  *Var[5]  35`
			Case  ==  0
				Set  *Var[5]  70`
		EndSwitch
		Call	RandInt	( 100` *Var[0] )
		If  *Var[0]  <  *Var[5] 
			ExecWait	$Script_SpawnBabies_Electro
			Return
		EndIf
   5C:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   74:  If       *Var[0] ==  00000001 
   84:     ExecWait $Script_Electrify 
   90:     Return
   98:  Else
   A0:     Call     GetStatusFlags ( .Actor:Self *Var[0] )
   B4:     If       *Var[0] !&  00080000 
   C4:        Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   DC:        Call     RandInt     	( 00000064 *Var[0] )
   F0:        If       *Var[0]  <  00000032 
  100:           ExecWait $Script_Tackle_ElectroBlooper 
  10C:        Else
  114:           ExecWait $Script_SprayInk_ElectroBlooper 
  120:        EndIf
  128:     Else
  130:        ExecWait $Script_Tackle_ElectroBlooper 
  13C:     EndIf
  144:  EndIf
  14C:  Return
  154:  End
}
  
@ $Script_Electrify {
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   44:  Add  *Var[1]  00000041 
   54:  Call     UseBattleCamPreset 	( 00000013 )
   64:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   7C:  Call     SetBattleCamZoom  	( 00000140 )
   8C:  Call     MoveBattleCamOver 	( 00000032 )
   9C:  Wait     00000014 
   A8:  Call     $Function_802182EC ( )
   B4:  Call     $Function_80218200 ( 00000046 00000050 )
   C8:  Thread
   D0:  	Call     ShakeCam    	( 00000001 00000000 00000028 *Fixed[0.30078125] )
   EC:  EndThread
   F4:  Call     SetAnimation 	( .Actor:Self 00000001 00500009 )
  10C:  Wait     0000000A 
  118:  Call     SetAnimation 	( .Actor:Self 00000001 0050000A )
  130:  Wait     0000000A 
  13C:  Call     SetAnimation 	( .Actor:Self 00000001 0050000B )
  154:  Wait     0000000A 
  160:  ExecWait $Script_8021EC88 
  16C:  Wait     00000014 
  178:  Call     UseBattleCamPreset 	( 00000002 )
  188:  Call     MoveBattleCamOver 	( 0000001E )
  198:  Call     $Function_80218384 ( )
  1A4:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  1B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  If .ZaptapOn == 00000001
		ExecWait $Script_ElectroTackle
		Set .ZaptapOn 00000000
  EndIf
  1CC:  Return
  1D4:  Return
  1DC:  End
}

#new:Script $Script_SpawnBabies_Electro
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   44:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   60:  Call     UseBattleCamPreset 	( 00000007 )
   70:  Call     BattleCamTargetActor ( .Actor:Self )
   80:  Call     SetBattleCamOffsetZ 	( 00000020 ) % was 32
   90:  Call     SetBattleCamZoom  	( 0000014A )
   A0:  Call     MoveBattleCamOver 	( 00000028 )
   B0:  Wait     00000014 
   BC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
   D0:  Call     $Function_8021876C ( )
   DC:  Call     $Function_80218680 ( 00000032 00000014 )
   F0:  Thread
   F8:     Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.30078125] )
  114:  EndThread
  11C:  Call     UseBattleCamPreset 	( 00000007 )
  12C:  Call     BattleCamTargetActor ( .Actor:Self )
  13C:  Call     SetBattleCamOffsetZ 	( 00000028 ) % was 41
  14C:  Call     SetBattleCamZoom  	( 000000F0 )
  15C:  Call     MoveBattleCamOver 	( 0000000F )
  16C:  Call     SetAnimation 	( .Actor:Self 00000001 00500009 )
  184:  Wait     0000000F 
  190:  Call     $Function_80218680 ( 00000064 00000014 )
  1A4:  Thread
  1AC:     Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.40039062] )
  1C8:  EndThread
  1D0:  Call     UseBattleCamPreset 	( 00000007 )
  1E0:  Call     BattleCamTargetActor ( .Actor:Self )
  1F0:  Call     SetBattleCamOffsetZ 	( 00000030 ) % was 50
  200:  Call     SetBattleCamZoom  	( 00000096 )
  210:  Call     MoveBattleCamOver 	( 0000000F )
  220:  Call     SetAnimation 	( .Actor:Self 00000001 0050000A )
  238:  Wait     0000000F 
  244:  Call     $Function_80218680 ( 00000096 00000014 )
  258:  Thread
  260:     Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.5] )
  27C:  EndThread
  284:  Call     UseBattleCamPreset 	( 00000007 )
  294:  Call     BattleCamTargetActor ( .Actor:Self )
  2A4:  Call     SetBattleCamOffsetZ 	( 00000038 ) % was 5F
  2B4:  Call     SetBattleCamZoom  	( 0000003C )
  2C4:  Call     MoveBattleCamOver 	( 0000000F )
  2D4:  Call     SetAnimation 	( .Actor:Self 00000001 0050000B )
  2EC:  Wait     0000001E 
  2F8:  Call     UseBattleCamPreset 	( 00000002 )
  308:  Call     MoveBattleCamOver 	( 00000014 )
  318:  Call     SetAnimation 	( .Actor:Self 00000001 00500003 )
  330:  Wait     0000000A 
  33C:  Call     ActorExists 	( .Actor:Enemy1 *Var[1] )
  350:  If       *Var[1] ==  00000000 
  360:     Call     PlaySoundAtActor 	( .Actor:Self 000003D9 )
  374:     Call     SummonEnemy 	( $SpecialFormation_Baby1 00000000 )
  388:  EndIf
  390:  Call     ActorExists 	( .Actor:Enemy2 *Var[1] )
  3A4:  If       *Var[1] ==  00000000 
  3B4:     Call     PlaySoundAtActor 	( .Actor:Self 000003D9 )
  3C8:     Call     SummonEnemy 	( $SpecialFormation_Baby2 00000000 )
  3DC:  EndIf
  3E4:  Wait     00000002 
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
  408:  Call     $Function_80218804 ( )
  414:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  428:  Call     UseIdleAnimation 	( .Actor:Self .True )
  43C:  Return
  444:  Return
  44C:  End
}

#new:SpecialFormation $SpecialFormation_Baby1
{
$BlooperBaby $Vector3D_80221EF0 0000005F 0000001E 00000044 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_Baby2
{
$BlooperBaby $Vector3D_80221EF0 0000005E 00000086 0000002D 00000000 00000000 
}
  
% ====================================================
% Super Blooper
% + Increased max HP (70 -> 100)
% + Ink spray attack has 100% chance to poison (6 turns)
% + Can attack on same turn as spawning minions
% + Spawns regular bloopers instead of Blooper Babies
% ====================================================

@ $SuperBlooper
{
[MaxHP]	80`b
[Level]        74`b
[PowerBounce]  3`b 
}

@ $StatusTable_8021F554
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      20`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     50`
.Status:Stop       50`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -2`
.Status:ShrinkTurnMod    -2`
.Status:StopTurnMod      -2`
.Status:End
}

@ $StatusTable_8021F554
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      40`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     70`
.Status:Stop       60`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End 
}

@ $Script_SprayInk_SuperBlooper
{
[634]	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 80020464 00000009 00000020 )
}

@ $Script_TakeTurn_SuperBlooper
{
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch   *Var[0] 
		Case     ==  00000003 
			Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
			If       *Var[0] ==  00000000 
				Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
			EndIf
		Case     ==  00000001 
			Call     GetStatusFlags ( .Actor:Self *Var[0] )
			If       *Var[0]  &  00080000 
				Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
			Else
				Call     ActorExists 	( .Actor:Enemy1 *Var[0] )
				If       *Var[0] !=  00000000 
					Call     ActorExists 	( .Actor:Enemy2 *Var[0] )
					If       *Var[0] !=  00000000 
					   Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
					EndIf
				EndIf
			EndIf
		Default
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch   *Var[0] 
		Case     ==  00000001 
			Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
			ExecWait $Script_SpawnBabies 
			ExecWait $Script_SuperBlooper_BasicAttack
			Return
		Case     ==  00000002 
			Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
			ExecWait $Script_Enrage 
			Return
		Case     ==  00000003 
			Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
			ExecWait $Script_EnragedTackle 
			Return
		Default
			ExecWait $Script_SuperBlooper_BasicAttack
			Return
	EndSwitch
	Return
	End
}
	
#new:Script $Script_SuperBlooper_BasicAttack
{
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  00080000 
		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
		Call     RandInt     	( 00000002 *Var[0] )
		Switch *Var[0]
		Case ==  00000000 
			ExecWait $Script_Tackle_SuperBlooper 
		Case ==  00000001 
			ExecWait $Script_SprayInk_SuperBlooper 
		Case ==  00000002
			ExecWait $Script_Smash_SuperBlooper
		EndSwitch			
	Else
		ExecWait $Script_Tackle_SuperBlooper 
	EndIf
	Return
	End
}
	
@ $Script_EnragedTackle {
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   58:  Set  *Var[1]  00000064 
   68:  Set  *Var[3]  0000000F 
   78:  ExecWait $Script_8021EF60 
   84:  Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
   98:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
   BC:  Switch  *Var[F] 
   C8:  	CaseOR  ==  00000006 
   D4:  	CaseOR  ==  00000005 
   E0:  		Thread
   E8:  			Set  *Var[0]  00000000 
   F8:  			Loop     00000024 
  104:  				Add  *Var[0]  0000001E 
  114:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  128:  				Wait     00000001 
  134:  			EndLoop
  13C:  			Call     SetActorYaw 	( .Actor:Self 00000000 )
  150:  		EndThread
  158:  		Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  170:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  18C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  1A0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  1DC:  		ExecWait $Script_80221E80 
  1E8:  		If  *Var[F]  ==  00000005 
  1F8:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  21C:  		EndIf
  224:  		Add  *Var[0]  0000001E 
  234:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  270:  		Add  *Var[0]  00000014 
  280:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  29C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2BC:  		ExecWait $Script_8021F43C 
  2C8:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  2DC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2F0:  		Return
  2F8:  	EndCaseGroup
  300:  EndSwitch
  308:  Thread
  310:  	Set  *Var[0]  00000000 
  320:  	Loop     00000010 
  32C:  		Add  *Var[0]  0000001E 
  33C:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  350:  		Wait     00000001 
  35C:  	EndLoop
  364:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  378:  EndThread
  Loop 2
  380:  Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  398:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  3AC:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  3C8:  Add  *Var[1]  0000001E 
  3D8:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F4:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  414:  Call     GetStatusFlags ( .Actor:Player *Var[E] )
  428:  If  *Var[E]  &  00100000 
  438:  	Goto     00000000 
  444:  EndIf
  44C:  Wait     00000002 
  458:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 00000006 00000040 )
    EndLoop
  480:  Call     GetPlayerHP 	( *Var[E] )
  490:  If  *Var[E]  ==  00000000 
  4A0:  	Goto     00000001 
  4AC:  EndIf
  4B4:  Thread
  4BC:  	Set  *Var[0]  00000000 
  4CC:  	Loop     00000014 
  4D8:  		Add  *Var[0]  00000024 
  4E8:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  4FC:  		Wait     00000001 
  508:  	EndLoop
  510:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  524:  EndThread
  Loop 2
  52C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.40039062] )
  540:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  55C:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  57C:  Label    00000000 
  588:  Wait     00000002 
  594:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 00000006 00000020 )
  EndLoop
  5BC:  Label    00000001 
  5C8:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  5DC:  If  *Var[0]  &  00100000 
  5EC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
  604:  Else
  60C:  	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  624:  EndIf
  62C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  648:  Add  *Var[0]  0000001E 
  658:  Sub  *Var[1]  0000000F 
  668:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  67C:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  698:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  6B8:  ExecWait $Script_80221E80 
  6C4:  ExecWait $Script_8021F43C 
  6D0:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  6E4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6F8:  Return
  700:  End
}

@ $Script_Tackle_SuperBlooper {
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   58:  Set  *Var[1]  00000064 
   68:  Set  *Var[3]  0000000F 
   78:  ExecWait $Script_8021EF60 
   84:  Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
   98:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
   BC:  Switch  *Var[F] 
   C8:  	CaseOR  ==  00000006 
   D4:  	CaseOR  ==  00000005 
   E0:  		Thread
   E8:  			Set  *Var[0]  00000000 
   F8:  			Loop     00000024 
  104:  				Add  *Var[0]  0000001E 
  114:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  128:  				Wait     00000001 
  134:  			EndLoop
  13C:  			Call     SetActorYaw 	( .Actor:Self 00000000 )
  150:  		EndThread
  158:  		Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  170:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  18C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  1A0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  1DC:  		If  *Var[F]  ==  00000005 
  1EC:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  210:  		EndIf
  218:  		Add  *Var[0]  0000001E 
  228:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  244:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  264:  		Add  *Var[0]  00000014 
  274:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  290:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2B0:  		ExecWait $Script_8021F43C 
  2BC:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  2D0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2E4:  		Return
  2EC:  	EndCaseGroup
  2F4:  EndSwitch
  2FC:  Thread
  304:  	Set  *Var[0]  00000000 
  314:  	Loop     00000010 
  320:  		Add  *Var[0]  0000001E 
  330:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  344:  		Wait     00000001 
  350:  	EndLoop
  358:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  36C:  EndThread
  Loop 3
  374:  Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  38C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  3A0:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  3BC:  Add  *Var[1]  0000001E 
  3CC:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3E8:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  408:  Wait     00000002 
  414:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000005 00000020 )
  EndLoop
  43C:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  450:  If  *Var[0]  &  00100000 
  460:  	Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
  478:  Else
  480:  	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  498:  EndIf
  4A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4BC:  Add  *Var[0]  0000001E 
  4CC:  Sub  *Var[1]  0000000F 
  4DC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  4F0:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  50C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  52C:  ExecWait $Script_8021F43C 
  538:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  54C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  560:  Return
  568:  End
}

  % ================================================================================
  % "NEW" Blooper Attack, same as old just with added flare, old one multi hits now
  % ================================================================================
  
#new:Script $Script_Smash_SuperBlooper
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   58:  Set  *Var[1]  00000064 
   68:  Set  *Var[3]  0000000F 
   78:  ExecWait $Script_8021EF60 
   84:  Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
   98:  Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
   BC:  Switch  *Var[F] 
   C8:  	CaseOR  ==  00000006 
   D4:  	CaseOR  ==  00000005 
   E0:  		Thread
   E8:  			Set  *Var[0]  00000000 
   F8:  			Loop     00000024 
  104:  				Add  *Var[0]  0000001E 
  114:  				Call     SetActorYaw 	( .Actor:Self *Var[0] )
  128:  				Wait     00000001 
  134:  			EndLoop
  13C:  			Call     SetActorYaw 	( .Actor:Self 00000000 )
  150:  		EndThread
  158:  		Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  170:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  18C:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  1A0:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  1DC:  		If  *Var[F]  ==  00000005 
  1EC:  			Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  210:  		EndIf
  218:  		Add  *Var[0]  0000001E 
  228:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  244:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  264:  		Add  *Var[0]  00000014 
  274:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  290:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2B0:  		ExecWait $Script_8021F43C 
  2BC:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  2D0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2E4:  		Return
  2EC:  	EndCaseGroup
  2F4:  EndSwitch
  2FC:  Thread
  304:  	Set  *Var[0]  00000000 
  314:  	Loop     00000010 
  320:  		Add  *Var[0]  0000001E 
  330:  		Call     SetActorYaw 	( .Actor:Self *Var[0] )
  344:  		Wait     00000001 
  350:  	EndLoop
  358:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  36C:  EndThread
  374:  Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  38C:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
  3A0:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  3BC:  Add  *Var[1]  0000001E 
  3CC:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3E8:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  408:  Wait     00000002 
  414:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 0000000A 00000020 )
  43C:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  450:  If  *Var[0]  &  00100000 
  460:  	Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
  478:  Else
  480:  	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  498:  EndIf
  4A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4BC:  Add  *Var[0]  0000001E 
  4CC:  Sub  *Var[1]  0000000F 
  4DC:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  4F0:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  50C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  52C:  ExecWait $Script_8021F43C 
  538:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  54C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  560:  Return
  568:  End
}
	
@ $SpecialFormation_80221EFC
{
$SpawnedBlooper $Vector3D_80221EF0 95` 30` 24` 00000000 00000000 
}

@ $SpecialFormation_80221F18
{
$SpawnedBlooper $Vector3D_80221EF0 94` 134` 16` 00000000 00000000 
}

@ $StatusTable_8021F554
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      20`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   25`
.Status:Shrink     70`
.Status:Stop       30`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

% ====================================================
% Special Blooper
% Spawned by the Super Blooper, uses a modified BlooperBaby
% initialization script. Has less HP than original (30 -> 20)
% and gives no XP. Attacks do more damage.
% ====================================================

#new:Actor $SpawnedBlooper
{
% stats
[Index]        C7b 
[Level]         0`b 
[MaxHP]        15`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021A714 
% ai
[PartsCount]   2`s 
[PartsTable] $PartsTable_8021A7C0 
[Script]      $Script_Init_Spawned 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         57`b  61`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]    0`b  22`b % dx dy
[StatusIcon]   15`b  55`b % dx dy
}

#new:Script $Script_Init_Spawned
{
	Call     SetActorScale 	( .Actor:Self *Fixed[0.75] *Fixed[0.75] *Fixed[1.0] )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_Spawned )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021ACFC )
	Call     PlaySoundAtActor 	( .Actor:Self 0000035F )
	Call     $Function_80218A20 ( 00000050 00000014 )
	Call     SetAnimation 	( .Actor:Self 00000001 00510000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00510001 )
	Call     GetActorPos 	( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
	Add      *Var[1] 0000000A 
	Sub      *Var[2] 0000000A 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set      *Var[1] 00000014 
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[0.30078125] )
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     FlyToGoal ( FFFFFF81 00000008 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 0000035F )
	Call     $Function_80218A20 ( 00000050 00000014 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[2] )
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     FlyToGoal ( FFFFFF81 0000000C FFFFFFFE 00000005 )
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021A8C4 )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End
}

#new:Script $Script_TakeTurn_Spawned
{
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  00080000 
		Call     RandInt     	( 00000064 *Var[0] )
		If       *Var[0]  <  00000032 
			ExecWait $Script_Tackle_Spawned 
		Else
			ExecWait $Script_SprayInk_Spawned
		EndIf
	Else
		ExecWait $Script_Tackle_Spawned 
	EndIf
	Return
	End
}

#new:Script $Script_Tackle_Spawned
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( FFFFFF81 00000000 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  00080000 
		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add      *Var[1] 0000005F 
		Call     UseBattleCamPreset 	( 00000013 )
		Call     SetBattleCamTarget ( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom ( 00000190 )
		Call     MoveBattleCamOver 	( 00000082 )
	Else
		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
		Add      *Var[1] 00000048 
		Call     UseBattleCamPreset 	( 00000013 )
		Call     SetBattleCamTarget ( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom ( 00000154 )
		Call     MoveBattleCamOver 	( 00000082 )
	EndIf
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Set      *Var[1] 00000064 
	Set      *Var[3] 0000000F 
	ExecWait $Script_8021A120 
	Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch   *Var[F] 
		CaseOR   ==  00000006 
		CaseOR   ==  00000005 
			Thread
				Set      *Var[0] 00000000 
				Loop     00000024 
					Add      *Var[0] 0000001E 
					Call     SetActorYaw 	( .Actor:Self *Var[0] )
					Wait     00000001 
				EndLoop
				Call     SetActorYaw 	( .Actor:Self 00000000 )
			EndThread
			Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
			Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
			Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     JumpToGoal 	( .Actor:Self 00000010 00000000 00000001 00000000 )
			Call     UseBattleCamPreset 	( 00000002 )
			Call     MoveBattleCamOver 	( 00000014 )
			If       *Var[F] ==  00000005 
				Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
			EndIf
			Add      *Var[0] 0000001E 
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     JumpToGoal 	( .Actor:Self 0000000C 00000000 00000001 00000000 )
			Add      *Var[0] 00000014 
			Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Call     JumpToGoal 	( .Actor:Self 00000008 00000000 00000001 00000000 )
			ExecWait $Script_8021A5FC 
			Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
			Call     UseIdleAnimation 	( .Actor:Self .True )
			Return
		EndCaseGroup
	EndSwitch
	Thread
		Set      *Var[0] 00000000 
		Loop     00000010 
			Add      *Var[0] 0000001E 
			Call     SetActorYaw 	( .Actor:Self *Var[0] )
			Wait     00000001 
		EndLoop
		Call     SetActorYaw 	( .Actor:Self 00000000 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.5] )
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add      *Var[1] 0000001E 
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal 	( .Actor:Self 00000010 00000000 00000001 00000000 )
	Wait     00000002 
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
	Call     UseBattleCamPreset 	( 00000002 )
	Call     MoveBattleCamOver 	( 00000014 )
	Call     GetStatusFlags ( .Actor:Player *Var[0] )
	If       *Var[0]  &  00100000 
		Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
	Else
		Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	EndIf
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add      *Var[0] 0000001E 
	Sub      *Var[1] 0000000F 
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal 	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	ExecWait $Script_8021A5FC 
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_SprayInk_Spawned
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( FFFFFF81 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add      *Var[0] 00000055 
	Add      *Var[1] 0000002D 
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	If       *Var[B]  >  0000001E 
		Sub      *Var[B] 0000001E 
	Else
		Set      *Var[B] 00000000 
	EndIf
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
	Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     FallToGoal ( FFFFFF81 00000008 )
	Thread
		Call     UseBattleCamPreset 	( 00000013 )
		Sub      *Var[0] 0000001E 
		Call     SetBattleCamTarget ( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom ( 0000015E )
		Call     MoveBattleCamOver 	( 00000032 )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
	Set      *Var[7] *Var[4] 
	Add      *Var[7] *Var[0] 
	MulF     *Var[7] *Fixed[0.5] 
	Set      *Var[8] *Var[5] 
	Add      *Var[8] *Var[1] 
	MulF     *Var[8] *Fixed[0.5] 
	Set      *Var[9] *Var[6] 
	Add      *Var[9] *Var[2] 
	MulF     *Var[9] *Fixed[0.5] 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
	Call     FlyToGoal ( FFFFFF81 0000000F FFFFFFFE 00000005 )
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Sub      *Var[B] 00000014 
	Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
	Call     FallToGoal ( FFFFFF81 00000008 )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     FlyToGoal ( FFFFFF81 0000000F FFFFFFFE 00000005 )
	Call     SetAnimation 	( .Actor:Self 00000001 00500003 )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Sub      *Var[B] 0000001E 
	Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.20019531] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
	Call     SetGoalPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     FlyToGoal ( FFFFFF81 00000010 00000000 00000000 )
	Call     UseBattleCamPreset 	( 00000002 )
	Call     MoveBattleCamOver 	( 0000000A )
	Call     SetActorRotationOffset ( FFFFFF81 00000000 00000028 00000000 )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFD8 )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DE )
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Add      *Var[3] 00000001 
	Sub      *Var[4] 0000001B 
	Sub      *Var[5] 00000003 
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Call     $Function_80218058 ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] )
	Call     EnemyTestTarget ( .Actor:Self *Var[F] 10000000 00000000 00000001 00000010 )
	Switch   *Var[F] 
		CaseOR   ==  00000006 
		CaseOR   ==  00000005 
			Wait     0000000A 
			If       *Var[F] ==  00000005 
				Call     EnemyTestTarget ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
			EndIf
			Wait     0000001E 
			Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
			Call     SetActorRotationOffset ( FFFFFF81 00000000 00000000 00000000 )
			ExecWait $Script_8021A5FC 
			Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
			Call     UseIdleAnimation 	( .Actor:Self .True )
			Return
		EndCaseGroup
	EndSwitch
	Wait     0000000A 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     80269EAC ( 0000001A )
	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 80020464 00000004 00000020 )
	Wait     0000001E 
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	Call     SetActorRotationOffset ( FFFFFF81 00000000 00000000 00000000 )
	ExecWait $Script_8021A5FC 
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}
