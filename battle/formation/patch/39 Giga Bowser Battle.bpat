
% ====================================================
% Rematch bosses only give SP the first time they are
% defeated. Set their level to 0 for repeat fights.
% ====================================================

#new:Function $Function_SetLevel
{
	PUSH	RA, S0, S1, S2
	DADDU	S1, A0, R0
	LW		S0, C (S1)
	LW		A1, 0 (S0)
	JAL		~Func:get_variable
	ADDIU	S0, S0, 4
	DADDU	A0, S1, R0
	LW		A1, 0 (S0)
	JAL		~Func:get_variable
	DADDU	S2, V0, R0
	SB		V0, 6 (S2)
	POP		RA, S0, S1, S2
	JR		RA
	ADDIU	V0, R0, 2
}

% ====================================================
% Boss Formation
% ====================================================
	
#new:FormationTable $FormationTable
{
00000000 00000001 $Boss_Formation $Boss_Stage 00000000 
00000000 00000000 00000000 00000000 00000000 % unused
}

#new:Formation $Boss_Formation
{
$GigaBowser $Boss_Pos 0000000A 00000000 00000000 00000000 00000000 
}

#new:Vector3D $Boss_Pos
{
80` 0` -10`
}

% ====================================================
% Boss Stage
% ====================================================

#new:StageTable $StageTable 
{
00000000 00000000 
}

#new:Stage $Boss_Stage
{
"kkj_tex"
"kkj_bt02_shape"
"kkj_bt02_hit"
$Script_BeforeBattle 
$Script_AfterBattle 
"kpa_bg"
00000000 
00000000 
00000000 
00000000 
}

#new:Script $Script_BeforeBattle
{
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Exec     $Script_80234380 
   1C:  Exec     $Script_802344C8 
   28:  Return
   30:  End
}

#new:Script $Script_AfterBattle
{
    0:  Return
    8:  End
}
	
#new:IntTable $IntTable_80234310
{
FFFFFFEA 000000BE FFFFFFA5 FFFFFFA8 00000015 FFFFFFA5 0000003C 
FFFFFFFF 000000BE FFFFFFA5 00000058 00000018 FFFFFFA5 0000000A 
FFFFFFBD 000000BE FFFFFFA5 FFFFFF86 0000000A FFFFFFA5 0000005A 
00000039 000000BE FFFFFFA5 FFFFFFFC 00000011 FFFFFFA5 0000003C 
}

#new:Script $Script_80234380
{
    0:  Label    00000000 
    C:  UseIntBuffer $IntTable_80234310 
   18:  Loop     00000004 
   24:     Get3Int  *Var[0] *Var[1] *Var[2] 
   38:     Get3Int  *Var[3] *Var[4] *Var[5] 
   4C:     Call     PlayEffect  	( 0000005E 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000008 00000000 00000000 00000000 00000000 )
   90:     Call     $Function_8021D290 ( )
   9C:     Get1Int  *Var[0] 
   A8:     Wait     *Var[0] 
   B4:  EndLoop
   BC:  Goto     00000000 
   C8:  Return
   D0:  End
}

#new:IntTable $IntTable_80234458
{
FFFFFF87 00000021 FFFFFF98 FFFFFFE8 00000029 FFFFFF98 00000005 
00000024 00000029 FFFFFF98 00000080 00000022 FFFFFF98 0000001E 
00000092 00000001 00000071 00000026 FFFFFFF1 00000079 00000005 
FFFFFFBE FFFFFFF6 00000073 FFFFFF65 00000001 00000061 0000005A 
}

#new:Script $Script_802344C8
{
    0:  Label    00000000 
    C:  UseIntBuffer $IntTable_80234458 
   18:  Loop     00000004 
   24:     Get3Int  *Var[0] *Var[1] *Var[2] 
   38:     Get3Int  *Var[3] *Var[4] *Var[5] 
   4C:     Call     PlayEffect  	( 0000005E 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000001 00000005 00000000 00000000 00000000 00000000 )
   90:     Call     $Function_8021D290 ( )
   9C:     Get1Int  *Var[0] 
   A8:     Wait     *Var[0] 
   B4:  EndLoop
   BC:  Goto     00000000 
   C8:  Return
   D0:  End
}

#new:Function $Function_8021D290
{
    0:  LW        A0, C0 (A0)
    4:  LW        V1, C (A0)
    8:  ADDIU     V0, R0, 55
    C:  SW        V0, 30 (V1)
   10:  LW        V1, C (A0)
   14:  ADDIU     V0, R0, 2A
   18:  SW        V0, 34 (V1)
   1C:  LW        V0, C (A0)
   20:  ADDIU     V1, R0, FF
   24:  SW        V1, 38 (V0)
   28:  LW        V0, C (A0)
   2C:  SW        V1, 40 (V0)
   30:  LW        V1, C (A0)
   34:  ADDIU     V0, R0, AF
   38:  SW        V0, 44 (V1)
   3C:  LW        V1, C (A0)
   40:  ADDIU     V0, R0, EF
   44:  SW        V0, 48 (V1)
   48:  JR        RA
   4C:  ADDIU     V0, R0, 2
}

% ====================================================
% Bowser
% ====================================================

#new:Actor $GigaBowser
{
% stats
[Index]        D6b 
[Level]       120`b 
[MaxHP]       180`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_Normal 
% ai
[PartsCount]   1`s 
[PartsTable] $PartsTable_Bowser 
[Script]      $Script_Init_Bowser 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  3`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        123`b 119`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -53`b 103`b % dx dy
[StatusIcon]   33`b  92`b % dx dy
}

#new:PartsTable $PartsTable_Bowser
{
00800000 01000000 E56C00FF $IdleAnimations_Bowser $DefenseTable_Normal 00000000 00000000 00F80000 00000000 
}

#new:IdleAnimations $IdleAnimations_Bowser
{
.Status:Normal    00810002
.Status:Stone     00810000
.Status:Sleep     00810002
.Status:Poison    00810002
.Status:Stop      00810000
.Status:Static    00810000
.Status:Paralyze  00810000
.Status:Paralyze  00810000
.Status:Dizzy     00810002
.Status:Dizzy     00810002
.Status:End
}

#new:DefenseTable $DefenseTable_Normal
{
.Element:Normal 00000004
.Element:End
}

#new:DefenseTable $DefenseTable_Enchanted
{
.Element:Normal 00000063
.Element:End
}

#new:StatusTable $StatusTable_Normal
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:StatusTable $StatusTable_Enchanted
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#define .TurnCounter 00000000
#define .ShockWaveCounter 00000002
#define .StarRodCounter 00000003
#define .ClawCounter 00000004
#define .JumpCounter 00000005
#define .HealCounter 00000006

#new:Script $Script_Init_Bowser
{
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 ) % overall turn counter
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 ) % shock wave counter
	Call     SetActorVar 	( .Actor:Self 00000004 00000003 ) % claw turn counter
	Call     SetActorVar 	( .Actor:Self 00000005 00000003 ) % jump turn counter
	Call     SetActorVar 	( .Actor:Self 00000009 00000000 ) % disable state
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 ) % disable *itemHandle
	Call     SetActorVar 	( .Actor:Self 00000003 00000000 ) % star rod turn counter
	Call     SetActorVar 	( .Actor:Self 00000006 00000000 ) % heal turn counter
	Call     SetActorVar 	( .Actor:Self 00000007 00000003 ) % heal opportunities
	Call     SetActorVar 	( .Actor:Self 0000000C 00000003 ) % claw swipe
	Call     SetActorScale 	( .Actor:Self *Fixed[1.5] *Fixed[1.5] *Fixed[1.0] )
	Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
	Exec     $Script_8022F488 
	Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000096 00000096 00000000 00000000 )
	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 0000000A )
	Call     SetPartEventBits 	( .Actor:Self 00000001 00080000 .True )
	Call     AddActorDecoration 	( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
	Call     SetDefenseTable 		( .Actor:Self 00000001 $DefenseTable_Enchanted )
	Call     SetStatusTable 		( .Actor:Self $StatusTable_Enchanted )
	Call     BindTakeTurn 			( .Actor:Self $Script_TakeTurn )
	Call     BindIdle    			( .Actor:Self $Script_Idle )
	Call     BindHandleEvent 		( .Actor:Self $Script_HandleEvent )
%	Call     SetBattleFlagBits2 	( 02000000 .True )
	If	*Flag_BeatRematch8  ==  .True
		Call	$Function_SetLevel	( $GigaBowser 0 )
	EndIf
	Return
	End
}
	
#new:Script $Script_8022F488
{
    0:  Call     $Function_8021BC60 ( )
    C:  Return
   14:  End
}

#new:Script $Script_Idle
{
    0:  Call     GetActorPos	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   1C:  Call     GetAnimation	( .Actor:Self  00000001 *Var[3] )
   34:  Label    00000000 
   40:  Call     ActorExists	( .Actor:Self *Var[B] )
   54:  If       *Var[B] ==  00000000 
   64:     Return
   6C:  EndIf
   74:  Call     GetStatusFlags ( .Actor:Self *Var[B] )
   88:  If       *Var[B] !&  00080000 
   98:     Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000096 00000096 000000FF 00000000 )
   C0:     Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
   E8:  Else
   F0:     Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 0000003C 0000003C 000000FF 00000000 )
  118:     Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 0000003C 00000000 00000000 00000000 )
  140:  EndIf
  148:  ExecWait $Script_PlayFootstepSounds 
  154:  Wait     00000001 
  160:  Goto     00000000 
  16C:  Return
  174:  End
}

#new:Script $Script_PlayFootstepSounds
{
    0:  Call     GetAnimation ( FFFFFF81 00000001 *Var[7] )
   18:  If       *Var[7] !=  00810003 
   28:     If       *Var[3] ==  00810003 
   38:        Call     PlaySoundAtActor 	( .Actor:Self 000020B4 )
   4C:        Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
   60:     EndIf
   68:     Set      *Var[3] *Var[7] 
   78:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   94:     Return
   9C:  EndIf
   A4:  Call     GetActorPos 	( .Actor:Self *Var[5] *Var[6] *Var[7] )
   C0:  Sub      *Var[5] *Var[0] 
   D0:  If       *Var[5]  >  FFFFFFE2 
   E0:     If       *Var[5]  <  0000001E 
   F0:        Set      *Var[3] *Var[7] 
  100:        Return
  108:     EndIf
  110:  EndIf
  118:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  134:  Call     PlaySoundAtActor 	( .Actor:Self 000020B4 )
  148:  Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  15C:  Set      *Var[3] *Var[7] 
  16C:  Return
  174:  End
}
  
#new:Script $Script_HandleEvent
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetLastElement ( *Var[E] )
   24:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   38:  Switch   *Var[0] 
   44:     Case     ==  .Event:BeginFirstStrike
   50:     CaseOR   ==  .Event:HitCombo
   5C:     CaseOR   ==  .Event:Hit
			SetConst *Var[0] 00000001 
			Set      *Var[1] 0081000D 
			ExecWait DoNormalHit 
			Call     UseIdleAnimation 	( .Actor:Self .True )
			Return
   8C:     EndCaseGroup
   94:     Case     ==  .Event:Death
   A0:        SetConst *Var[0] 00000001 
   B0:        SetConst *Var[1] 0081000D 
   C0:        ExecWait DoNormalHit 
   CC:        SetConst *Var[1] 0081000D 
   DC:        ExecWait $Script_Death 
   E8:        Return
   F0:     Case     ==  .Event:BurnHit
   FC:        Set      *Var[0] 00000001 
  10C:        Set      *Var[1] 00810020 
  11C:        Set      *Var[2] 00810021 
  12C:        ExecWait $Script_80233408 
  138:     Case     ==  .Event:BurnDeath
  144:        Set      *Var[0] 00000001 
  154:        Set      *Var[1] 00810020 
  164:        Set      *Var[2] 00810021 
  174:        ExecWait $Script_80233408 
  180:        SetConst *Var[1] 00810021 
  190:        ExecWait $Script_Death 
  19C:        Return
  1A4:     Case     ==  .Event:SpinSmashHit
			SetConst *Var[0] 00000001 
			Set      *Var[1] 0081000D 
			ExecWait DoNormalHit 
			Call     UseIdleAnimation 	( .Actor:Self .True )
			Return
  1D4:     Case     ==  .Event:SpinSmashDeath
  1E0:        SetConst *Var[0] 00000001 
  1F0:        SetConst *Var[1] 0081000D 
  200:        ExecWait DoNormalHit 
  20C:        SetConst *Var[1] 0081000D 
  21C:        ExecWait $Script_Death 
  228:        Return
  230:     Case     ==  .Event:ShockHit
  23C:        SetConst *Var[0] 00000001 
  24C:        SetConst *Var[1] 0081000D 
  25C:        ExecWait DoShockHit 
  268:        SetConst *Var[0] 00000001 
  278:        SetConst *Var[1] 0081000D 
  288:        ExecWait $Script_ShockJump 
  294:        Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2A8:        Set      *Var[1] 00810003 
  2B8:        ExecWait $Script_ReturnHome 
  2C4:     Case     ==  .Event:ShockDeath
  2D0:        SetConst *Var[0] 00000001 
  2E0:        SetConst *Var[1] 0081000D 
  2F0:        ExecWait DoShockHit 
  2FC:        SetConst *Var[0] 00000001 
  30C:        SetConst *Var[1] 0081000D 
  31C:        ExecWait $Script_ShockJump 
  328:        SetConst *Var[0] 00000001 
  338:        SetConst *Var[1] 0081000D 
  348:        ExecWait $Script_Death 
  354:        Return
  35C:     CaseOR   ==  00000017
  368:     CaseOR   ==  .Event:Immune
  374:        Call     80269E80 ( *Var[2] )
  384:        Switch   *Var[2] 
  390:           CaseOR   ==  00000012 
  39C:           CaseOR   ==  00000015 
  3A8:              Call     SetAnimation 	( .Actor:Self 00000001 00810007 )
  3C0:              Wait     0000001E 
  3CC:           EndCaseGroup
  3D4:           Default
					SetConst *Var[0] 00000001 
					Set      *Var[1] 00810007 
					ExecWait DoImmune 
  3F8:        EndSwitch
  400:     EndCaseGroup
  408:     Case     ==  .Event:AirLiftFailed
  414:        SetConst *Var[0] 00000001 
  424:        Set      *Var[1] 00810002 
  434:        ExecWait DoImmune 
  440:     Case     ==  .Event:SpikeTaunt
  44C:     Case     ==  .Event:EndFirstStrike
  458:     Case     ==  .Event:RecoverStatus
  464:        SetConst *Var[0] 00000001 
  474:        SetConst *Var[1] 00810012 
  484:        ExecWait DoRecover 
  490:        Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  4A8:        Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  4C4:     Case     ==  .Event:SwapPartner
  4D0:        Call     $Function_8021C09C ( )
  4DC:     Case     ==  00000030
  4E8:        SetConst *Var[0] 00000001 
  4F8:        SetConst *Var[1] 0081000D 
  508:        ExecWait DoNormalHit 
  514:        Wait     000003E8 
  520:     Case     ==  0000001D	% replaced with event handler for 00000014
			Call     FreezeBattleCam   	( .True )
			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000001 )
			Call     GetStatusFlags ( .Actor:Self *Var[3] )
			If       *Var[3] !&  00080000 
				Set      *Var[3] 0000004B 
				Set      *Var[4] 0000003C 
			Else
				Set      *Var[3] 0000001E 
				Set      *Var[4] 00000018 
			EndIf
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add      *Var[1] *Var[3] 
			Call     PlayEffect  	( 00000011 00000000 *Var[0] *Var[1] *Var[2] 0000004B 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Add      *Var[1] *Var[4] 
			Call     PlayEffect  		( 00000038 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0507812] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
			Call     SetPartEventBits ( .Actor:Self 00000001 00080000 .False )
			Call     SetActorVar 		( .Actor:Self 00000003 00000000 )
			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_Normal )
			Call     SetStatusTable 	( .Actor:Self $StatusTable_Normal )
			SetConst *Var[0] 00000001 
			Set      *Var[1] 0081000D 
			ExecWait DoNormalHit 
			Call     FreezeBattleCam   	( .False )
		Default
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}
	
#new:Script $Script_ReturnHome
{
    0:  Set      *Var[0] 00000001 
   10:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   2C:  Call     SetGoalToHome 	( .Actor:Self )
   3C:  Call     GetGoalPos  	( .Actor:Self *Var[D] *Var[E] *Var[F] )
   58:  Call     SetActorYaw 	( .Actor:Self 00000000 )
   6C:  Call     GetDist2D   	( *Var[9] *Var[A] *Var[C] *Var[D] *Var[F] )
   8C:  If       *Var[9] >=  *Fixed[5.0] 
   9C:     Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   B4:     Call     RunToGoal   	( .Actor:Self 00000000 .False )
   CC:  EndIf
   D4:  If       *Var[B] ==  000000B4 
   E4:     Loop     0000000F 
   F0:        Sub      *Var[B] 0000000C 
  100:        Call     SetActorYaw 	( .Actor:Self *Var[B] )
  114:        Wait     00000001 
  120:     EndLoop
  128:  EndIf
  130:  Call     SetActorYaw 	( .Actor:Self 00000000 )
  144:  Return
  14C:  End
}

#new:Script $Script_Death
{
	Call     SetPartEventBits 	( .Actor:Self 00000001 00080000 .False )
	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000001 )
	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	Wait     0000000E 
	Call     SetAnimation 	( .Actor:Self 00000001 0081000E )
	Call     GetStatusFlags ( .Actor:Self *Var[3] )
	If       *Var[3] !&  00080000 
		Call     UseBattleCamPreset 	( 00000013 )
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub      *Var[0] 0000000F 
		Add      *Var[1] 00000043 
		Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom  	( 000001A4 )
		Call     SetBattleCamOffsetZ 	( 00000000 )
		Call     MoveBattleCamOver 	( 0000000F )
	Else
		Call     UseBattleCamPreset 	( 00000013 )
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub      *Var[0] 00000006 
		Add      *Var[1] 0000001B 
		Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom  	( 000001A4 )
		Call     SetBattleCamOffsetZ 	( 00000000 )
		Call     MoveBattleCamOver 	( 0000000F )
	EndIf
	Wait     0000001E 
	Call     PlaySoundAtActor 	( .Actor:Self 00002128 )
	Call     SetAnimation 	( .Actor:Self 00000001 0081000D )
	Thread
		Call     MakeLerp    	( 00000000 00000050 00000008 00000004 )
		Set      *Var[2] 00000000 
		Label    00000000 
		Call     UpdateLerp  	( )
		Label    00000001 
		If       *Var[2] >=  *Var[0] 
			Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
			Call     GetActorScale 	( .Actor:Self *Var[6] *Var[6] *Var[7] )
			Call     $Function_8021B9A8 ( *Var[3] *Var[4] *Var[5] *Var[6] )
			If       *Var[1] ==  00000001 
				Goto     00000000 
			EndIf
		Else
			Wait     00000001 
			Add      *Var[2] 00000001 
			Goto     00000001 
		EndIf
	EndThread
	Wait     00000014 
	Thread
		Wait     0000001E 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Call     GetStatusFlags ( .Actor:Self *Var[A] )
		If       *Var[A] !&  00080000 
			Add      *Var[1] 0000003C 
		Else
			Add      *Var[1] 00000018 
		EndIf
		Call     PlayEffect  	( 00000038 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0507812] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Set  *Var[1] 50` 
		SetF     *Var[0] *Fixed[1.5] 
		Loop     *Var[1] 
			SubF     *Var[0] *Fixed[0.01] 
			Call     SetActorScale 	( .Actor:Self *Var[0] *Var[0] *Fixed[1.0] )
			Wait     00000001 
		EndLoop
		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndThread
	Call     EnableActorBlur 	( .Actor:Self 00000001 )
	Call     MakeLerp    	( 00000000 00001950 00000064 0000000A )
	Label    00000002 
	Call     UpdateLerp  	( )
	Mod      *Var[0] 00000168 
	Call     SetActorYaw 	( .Actor:Self *Var[0] )
	Wait     00000001 
	If       *Var[1] ==  00000001 
		Goto     00000002 
	EndIf
	Call     EnableActorBlur 	( .Actor:Self 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0081000E )
	Wait     0000000F 
	Call     PlaySoundAtActor 	( .Actor:Self 00002129 )
	Call     SetAnimation 	( .Actor:Self 00000001 0081001C )
	Thread
		Call     $Function_8021B950 ( 000000B4 00000010 )
		Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     PlayEffect  	( 00000006 00000004 *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[0.93066406] *Fixed[1.0] )
	Wait     00000001 
	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[0.85058594] *Fixed[1.0] )
	Wait     00000001 
	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[0.80078125] *Fixed[1.0] )
	Wait     00000001 
	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[0.75] *Fixed[1.0] )
	Wait     00000001 
	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.2001953] *Fixed[0.8701172] *Fixed[1.0] )
	Wait     00000001 
	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[0.92089844] *Fixed[1.0] )
	Wait     00000001 
	Call     SetPartScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Wait     0000001E 
	Call     SetActorSize ( FFFFFF81 00000034 00000073 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  00080000 
		Call     UseBattleCamPreset 	( 00000013 )
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub      *Var[0] 0000000F 
		Add      *Var[1] 0000002D 
		Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom  	( 0000012C )
		Call     SetBattleCamOffsetZ 	( 00000000 )
		Call     MoveBattleCamOver 	( 00000028 )
	Else
		Call     UseBattleCamPreset 	( 00000013 )
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub      *Var[0] 00000006 
		Add      *Var[1] 00000012 
		Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom  	( 0000012C )
		Call     SetBattleCamOffsetZ 	( 00000000 )
		Call     MoveBattleCamOver 	( 00000028 )
	EndIf
	Call     SetActorFlagBits 	( .Actor:Self 00400000 .True )
%	Call     SetBattleFlagBits 	( 00060000 .True )
	Call     8026F60C ( 00000014 )
	Return
	End
}

#new:Script $Script_TakeTurn
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     AddActorVar 	( .Actor:Self 00000000 00000001 ) % overall turn counter
	Call     AddActorVar 	( .Actor:Self 00000002 00000001 ) % shock wave counter
	Call     AddActorVar 	( .Actor:Self 00000003 00000001 ) % star rod turn counter
	Call     AddActorVar 	( .Actor:Self 00000004 00000001 ) % claw turn counter
	Call     AddActorVar 	( .Actor:Self 00000005 00000001 ) % jump turn counter
	Call     AddActorVar 	( .Actor:Self 00000006 00000001 ) % heal turn counter
	% We are going to set his healing to function similar to the story fight
	Call     GetActorHP  	( .Actor:Self *Var[0] )
    Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
    Mul  *Var[0]  00000064 
    Div  *Var[0]  *Var[1] 
    Call     $Function_GetPlayerPercentHP ( *Var[2] )
    Sub  *Var[2]  *Var[0] 
	If  *Var[2]  >  00000014 % was 19 (25`) but we want it to be more difficult, so its 14 (20`) now
		Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
		If  *Var[0]  !=  00000000 
    		Call     RandInt     	( 00000064 *Var[0] )
    		If  *Var[0]  <  0000004B 
    			Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
    			If  *Var[0]  >  00000001 
    				Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
    				ExecWait $Script_HealSelf
    				Return
				EndIf
			EndIf
		EndIf
	EndIf
	% I left his old healing here from pro mode for reference
	/%Call     GetActorHP  	( .Actor:Self *Var[0] )
	If  *Var[0]  <  50`
		Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
		If  *Var[0]  >  0  
				Call	GetActorVar	( .Actor:Self .HealCounter *Var[0] )
				If  *Var[0]  >  00000001 
					Call	SetActorVar	( .Actor:Self .HealCounter 00000000 )
					ExecWait $Script_HealSelf 
					Call	UseIdleAnimation	( .Actor:Self .True )
					Return
			EndIf
		EndIf
	EndIf
	%/
	Call	GetActorVar	( .Actor:Self .TurnCounter *Var[0] )
	If  *Var[0]  >  00000001 
		Call	GetPartEventFlags	( .Actor:Self 00000001 *Var[0] )
		If  *Var[0] !&  00080000 
			Call	GetActorVar	( .Actor:Self .StarRodCounter *Var[0] )
			Switch  *Var[0] 
				Case  ==  1 
					Set  *Var[0] 0 
				Case  ==  2 
					Set  *Var[0] 0 
				Case  ==  3 
					Set  *Var[0] 0` 
				Default
					Set  *Var[0] 100` 
			EndSwitch
			Call	RandInt	( 100` *Var[1] )
			If  *Var[1]  <  *Var[0] 
				Call	SetAnimation 	( .Actor:Self 00000001 0081000F )
				ExecWait $Script_UseStarRod 
				Call	UseIdleAnimation 	( .Actor:Self .True )
				Return
			EndIf
		EndIf
	EndIf
	ExecWait $Script_TryMagicAttacks
	Call	UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_TryMagicAttacks
{
	% skip if nturns < 3
	Call	GetActorVar	( .Actor:Self .TurnCounter *Var[0] )
	If  *Var[0]  <=  00000003 
		ExecWait $Script_TryMeleeAttacks 
		Return
	EndIf
	% skip if used shockwave in last 3 turns
	Call     GetActorVar 	( .Actor:Self .ShockWaveCounter *Var[0] )
	If  *Var[0]  <  00000003 
		ExecWait $Script_TryMeleeAttacks 
		Return
	EndIf
	% cast a spell if its been over 5 turns
	Call	GetActorVar	( .Actor:Self .ShockWaveCounter *Var[0] )
	If  *Var[0]  >=  00000006 
		Call		RandInt	( 30` *Var[0] )
		If  *Var[0]  <  20` 
			ExecWait $Script_Shockwave 
		Else
			ExecWait $Script_Thunderbolt 
		EndIf
		Return
	EndIf
   	% high chance to use shockwave if the player has charged up
	Call	RandInt	( 100` *Var[0] )
	If  *Var[0]  <  75` 
		Call		$Function_GetPlayerChargeAmount ( *Var[0] *Var[1] )
		If  *Var[0]  >  00000000 
			ExecWait $Script_Shockwave 
			Return
		EndIf
		If  *Var[1]  >  00000000 
			ExecWait $Script_Shockwave 
			Return
		EndIf
	EndIf
	% low chance to randomly cast spell
	Call	RandInt	( 110` *Var[0] )
	If  *Var[0]  <  30` 
		If  *Var[0]  <  20` 
			ExecWait $Script_Shockwave 
		Else
			ExecWait $Script_Thunderbolt 
		EndIf
		Return
	EndIf
	ExecWait $Script_TryMeleeAttacks 
	Return
	End
}

#new:Script $Script_TryMeleeAttacks
{
	Call	RandInt	( 80` *Var[0] )
	If  *Var[0]  <  20` 
		Call	GetActorVar	( .Actor:Self .JumpCounter *Var[0] )
		If  *Var[0]  >=  00000002 
			ExecWait $Script_DisableJump 
			Return
		EndIf
	EndIf
	Call	RandInt	( 60` *Var[0] )
	If  *Var[0]  <  20` 
		Call	GetActorVar	( .Actor:Self .ClawCounter *Var[0] )
		If  *Var[0]  >=  00000002 
			ExecWait $Script_ClawSwipe 
			Return
		EndIf
	EndIf
	Call	RandInt	( 60` *Var[0] )
	If *Var[0]  <  31`
	ExecWait $Script_DisableJump 
	Else
	ExecWait $Script_ClawSwipe
	EndIf
	Return
	End
}

#new:Script $Script_UseStarRod
{
    0:  Call     $Function_8021C004 ( )
    C:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   20:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   3C:  If       *Var[3] !&  00080000 
   4C:     Add      *Var[0] 00000016 
   5C:     Add      *Var[1] 00000087 
   6C:     Thread
   74:        Call     PlaySoundAtActor 	( .Actor:Self 00002123 )
   88:        Add      *Var[2] 0000000A 
   98:        Call     $Function_8021C14C ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.07519531] )
   B8:     EndThread
   C0:  Else
   C8:     Add      *Var[0] 00000009 
   D8:     Add      *Var[1] 00000036 
   E8:     Thread
   F0:        Call     PlaySoundAtActor 	( .Actor:Self 00002123 )
  104:        Add      *Var[2] 0000000A 
  114:        Call     $Function_8021C14C ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.030273438] )
  134:     EndThread
  13C:  EndIf
  144:  Wait     00000041 
  150:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  16C:  If       *Var[3] !&  00080000 
  17C:     Add      *Var[0] 00000016 
  18C:     Sub      *Var[2] 00000003 
  19C:     Call     PlayEffect  	( 00000035 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.5] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:     Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.0] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:     Sub      *Var[2] 00000003 
  234:     Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.5] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:     Add      *Var[0] 00000009 
  290:     Sub      *Var[2] 00000003 
  2A0:     Call     PlayEffect  	( 00000035 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.60058594] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:     Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.40039062] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:     Sub      *Var[2] 00000003 
  338:     Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.60058594] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call     PlaySoundAtActor 	( .Actor:Self 00002121 )
  398:  Wait     0000001E 
  3A4:  Call     RemoveEffect ( *Var[F] )
  3B4:  Call     RemoveEffect ( *Var[E] )
  3C4:  Call     RemoveEffect ( *Var[D] )
  3D4:  Call     SetPartEventBits	( .Actor:Self 00000001 00080000 .True )
  3F0:  Call     AddActorDecoration	( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call     SetDefenseTable	( .Actor:Self 00000001 $DefenseTable_Enchanted )
  424:  Call     SetStatusTable 	( .Actor:Self $StatusTable_Enchanted )
  438:  Call     $Function_8021C11C ( )
  444:  Wait     00000003 
  450:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  464:  If       *Var[3] !&  00080000 
  474:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  490:     Add      *Var[1] 0000003C 
  4A0:     Add      *Var[2] 0000000C 
  4B0:     Call     PlayEffect  	( 00000022 00000003 *Var[0] *Var[1] *Var[2] 00000069 00000078 00000025 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:     Add      *Var[1] 00000018 
  528:     Add      *Var[2] 0000000C 
  538:     Call     PlayEffect  	( 00000022 00000003 *Var[0] *Var[1] *Var[2] 0000002A 00000030 0000000F 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call     PlaySoundAtActor 	( .Actor:Self 00002125 )
  598:  Thread
  5A0:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5BC:     Call     $Function_8021C520 ( *Var[0] *Var[1] *Var[2] *Fixed[1.2001953] )
  5D8:  EndThread
  5E0:  Wait     0000004B 
  5EC:  Thread
  5F4:     Call     $Function_8021C09C ( )
  600:  EndThread
  608:  Call     SetAnimation 	( .Actor:Self 00000001 00810008 )
  620:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  634:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  650:  If       *Var[3] !&  00080000 
  660:     Add      *Var[1] 0000003C 
  670:  Else
  678:     Add      *Var[1] 00000018 
  688:  EndIf
  690:  Call     PlayEffect  	( 00000052 00000004 *Var[0] *Var[1] *Var[2] *Fixed[1.5] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call     PlaySoundAtActor 	( .Actor:Self 00002124 )
  6E8:  Call     UseBattleCamPreset 	( 00000002 )
  6F8:  Call     MoveBattleCamOver 	( 00000027 )
  708:  Wait     0000001E
  % =========================================================
  % If HP is 90 or lower, attack immediately after buff
  % =========================================================
    Call     GetActorHP  	( .Actor:Self *Var[9] )
	 If *Var[9] <= 150`
			Call     RandInt     	( 00000001 *Var[8] )
			If  *Var[8]  == 00000000
			ExecWait $Script_DisableJump
			Else
			ExecWait $Script_ClawSwipe
			EndIf
	 EndIf   
  714:  Return
  71C:  End
}

#new:Script $Script_ShockJump
{
    0:  If       *Var[1] !=  FFFFFFFF 
   10:     Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   28:  EndIf
   30:  Call     UseBattleCamPreset 	( 00000002 )
   40:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.4003906] )
   54:  Call     SetGoalToHome 	( .Actor:Self )
   64:  Call     GetGoalPos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
   80:  Call     GetActorPos 	( .Actor:Self *Var[5] *Var[6] *Var[7] )
   9C:  Set      *Var[8] *Var[2] 
   AC:  Add      *Var[8] *Var[5] 
   BC:  Div      *Var[8] 00000002 
   CC:  Set      *Var[9] *Var[4] 
   DC:  Add      *Var[9] *Var[7] 
   EC:  Div      *Var[9] 00000002 
   FC:  Call     SetGoalPos 	( .Actor:Self *Var[8] 00000000 *Var[9] )
  118:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  138:  Add      *Var[8] *Var[2] 
  148:  Div      *Var[8] 00000002 
  158:  Add      *Var[9] *Var[4] 
  168:  Div      *Var[9] 00000002 
  178:  Call     SetGoalPos 	( .Actor:Self *Var[8] 00000000 *Var[9] )
  194:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  1B4:  Call     SetGoalPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
  1D0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  1F0:  Return
  1F8:  End
}

#new:Script $Script_HealSelf
{
    0:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
   18:  Sub      *Var[0] 00000001 
   28:  Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
   40:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   54:  If       *Var[3] !&  00080000 
   64:     Call     UseBattleCamPreset 	( 00000013 )
   74:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   90:     Sub      *Var[0] 0000000F 
   A0:     Add      *Var[1] 00000061 
   B0:     Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   C8:     Call     SetBattleCamZoom  	( 000001A4 )
   D8:     Call     SetBattleCamOffsetZ 	( 00000000 )
   E8:     Call     MoveBattleCamOver 	( 00000028 )
   F8:  Else
  100:     Call     UseBattleCamPreset 	( 00000013 )
  110:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:     Sub      *Var[0] 00000006 
  13C:     Add      *Var[1] 00000027 
  14C:     Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
  164:     Call     SetBattleCamZoom  	( 00000126 )
  174:     Call     SetBattleCamOffsetZ 	( 00000000 )
  184:     Call     MoveBattleCamOver 	( 00000028 )
  194:  EndIf
  19C:  Call     SetAnimation 	( .Actor:Self 00000001 0081000F )
  1B4:  Call     $Function_8021C004 ( )
  1C0:  Call     PlaySoundAtActor 	( .Actor:Self 00002126 )
  1D4:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  1E8:  If       *Var[3] !&  00080000 
  1F8:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  214:     Add      *Var[0] 00000016 
  224:     Add      *Var[1] 00000087 
  234:     Sub      *Var[2] 00000003 
  244:     Call     PlayEffect  	( 0000006B 00000002 *Var[0] *Var[1] *Var[2] *Fixed[1.5] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  288:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2A4:     Add      *Var[0] 00000016 
  2B4:     Sub      *Var[2] 00000003 
  2C4:     Call     PlayEffect  	( 00000033 00000005 *Var[0] 00000087 *Var[2] *Fixed[0.4501953] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  308:  Else
  310:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  32C:     Add      *Var[0] 00000009 
  33C:     Add      *Var[1] 00000036 
  34C:     Sub      *Var[2] 00000003 
  35C:     Call     PlayEffect  	( 0000006B 00000002 *Var[0] *Var[1] *Var[2] *Fixed[0.60058594] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3A0:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3BC:     Add      *Var[0] 00000009 
  3CC:     Sub      *Var[2] 00000003 
  3DC:     Call     PlayEffect  	( 00000033 00000005 *Var[0] 00000036 *Var[2] *Fixed[0.18066406] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  EndIf
  428:  Wait     0000001E 
  468:  Thread
  470:     Wait     00000005 
  47C:     Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  490:     Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  4A4:     Wait     0000001E 
  4B0:     Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
  4C4:  EndThread
  4CC:  Thread
  4D4:     Call     8026BF48 ( 00000001 )
  4E4:     Call     HealActor   	( .Actor:Self 50` 00000000 )
  4FC:     Call     8026BF48 ( 00000000 )
  50C:  EndThread
  514:  Call     UseIdleAnimation 	( .Actor:Self .True )
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================  
  ExecWait $Script_FireBreath
  528:  Return
  530:  End
}

#new:IntTable $IntTable_80230B28
{
00000166 00000167 00000168 
}

#new:IntTable $IntTable_80230B34
{
00000049 0000004A 0000004B 
}

#new:IntTable $IntTable_80230B40
{
00000169 0000016A 0000016B 
}

#new:IntTable $IntTable_80230B4C
{
0000004C 0000004D 0000004E 
}

#new:Script $Script_80230B58
{
    0:  Label    00000000 
    C:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[A] )
   24:  Switch   *Var[A] 
   30:     Case     ==  00000000 
   3C:     Case     ==  00000001 
   48:        Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
   64:        Set      *Var[2] 00000000 
   74:        Sub      *Var[3] 00000001 
   84:        Call     $Function_8021CCFC ( *Var[4] *Var[5] )
   98:        Call     MakeItemEntity ( *Var[4] *Var[1] *Var[2] *Var[3] 00000001 00000000 )
   BC:        Call     SetActorVar 	( .Actor:Self 0000000A *Var[0] )
   D4:        Add      *Var[1] 00000007 
   E4:        Call     $Function_8021CA44 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000008 *Fixed[1.0] )
  108:        Add      *Var[1] 0000000C 
  118:        Call     $Function_8021CA44 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000008 *Fixed[1.0] )
  13C:        Add      *Var[1] 00000007 
  14C:        Call     $Function_8021CA44 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000005 *Fixed[1.0] )
  170:        Call     SetActorVar 	( .Actor:Self 00000009 00000000 )
  188:     Case     ==  00000002 
  194:        Call     ShowMessageBox ( *Var[5] 0000003C )
  1A8:        Call     RemoveItemEntity 	( *Var[0] )
  1B8:        Call     SetActorVar 	( .Actor:Self 00000009 00000003 )
  1D0:        Return
  1D8:  EndSwitch
  1E0:  Wait     00000001 
  1EC:  Goto     00000000 
  1F8:  Return
  200:  End
}

#new:Script $Script_DisableJump
{
    0:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
   18:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   2C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   40:  If       *Var[0] !&  00080000 
   50:     Call     UseBattleCamPreset 	( 0000003F )
   60:     Call     SetBattleCamZoom  	( 0000012C )
   70:     Call     SetBattleCamOffsetZ 	( 00000036 )
   80:     Call     BattleCamTargetActor ( .Actor:Self )
   90:     Call     MoveBattleCamOver 	( 00000028 )
   A0:     Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:     Call     UseBattleCamPreset 	( 0000003F )
   D0:     Call     SetBattleCamZoom  	( 000000F0 )
   E0:     Call     SetBattleCamOffsetZ 	( 00000015 )
   F0:     Call     BattleCamTargetActor ( .Actor:Self )
  100:     Call     MoveBattleCamOver 	( 00000028 )
  110:     Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  148:  Call     SetGoalToTarget 	( .Actor:Self )
  158:  Call     AddGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
  174:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  188:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  1B8:  Wait     0000000F 
  1C4:  Call     SetAnimation 	( .Actor:Self 00000001 00810011 )
  1DC:  Wait     00000002 
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 00810012 )
  200:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  214:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  238:  Switch   *Var[A] 
  244:     CaseOR   ==  00000006 
  250:     CaseOR   ==  00000005 
  25C:        Call     SetGoalToTarget 	( .Actor:Self )
  26C:        Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  288:        Sub      *Var[0] 0000001E 
  298:        Set      *Var[1] 00000000 
  2A8:        Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  2C4:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E0:        Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  300:        Thread
  308:           Call     $Function_8021B950 ( 00000050 0000000E )
  31C:           Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  338:        EndThread
  340:        Sub      *Var[0] 00000023 
  350:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:        Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
  38C:        Thread
  394:           Call     $Function_8021B950 ( 00000050 0000000E )
  3A8:           Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[2.0] )
  3C4:        EndThread
  3CC:        Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  3E4:        Wait     00000003 
  3F0:        Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  408:        Wait     00000019 
  414:        Call     UseBattleCamPreset 	( 00000002 )
  424:        If       *Var[A] ==  00000005 
  434:           Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  458:        EndIf
  460:        Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  474:        Set      *Var[1] 00810003 
  484:        ExecWait $Script_ReturnHome 
  490:        Return
  498:     EndCaseGroup
  4A0:     Default
  4A8:  EndSwitch
  4B0:  Call     SetGoalToTarget 	( .Actor:Self )
  4C0:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  Thread
  4E8:     Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  504:  EndThread
  50C:  Wait     00000001 
  518:  Call     SetGoalToTarget 	( .Actor:Self )
  528:  Call     SetAnimation 	( .Actor:Self 00000001 00810013 )
  540:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[1] )
  558:  If       *Var[1]  &  00080000 
  568:     Set      *Var[0] 0000001E 
  578:  Else
  580:     Set      *Var[0] 0000000F 
  590:  EndIf
  598:  Call     GetStatusFlags ( .Actor:Self *Var[F] )
  5AC:  If       *Var[F] !&  00080000 
  5BC:     Call     80269EAC ( 00000018 )
  5CC:  EndIf
  5D4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 *Var[0] 00000020 )
  5FC:  Set      *Var[0] FFFFFFFF 
  60C:  Call     GetBattleFlags ( *Var[1] )
  61C:  If       *Var[1] !&  80000000 
  62C:     Call     GetStatusFlags ( .Actor:Player *Var[1] )
  640:     If       *Var[1] !&  40100000 
  650:        Call     GetStatusFlags ( .Actor:Self *Var[1] )
  664:        If       *Var[1] !&  00080000 
  674:           Call     $Function_8021CEB8 ( *Var[0] )
  684:        EndIf
  68C:     EndIf
  694:  EndIf
  69C:  If       *Var[0] !=  FFFFFFFF 
  6AC:     Call     LandJump ( FFFFFF81 )
  6BC:     Call     $Function_8021B950 ( 00000050 0000000E )
  6D0:     Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  6E4:     Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  6FC:     Exec     $Script_80230B58 
  708:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  724:     Add      *Var[0] 00000034 
  734:     Set      *Var[1] 00000000 
  744:     Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  760:     Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  780:     Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  794:     Thread
  79C:        Call     $Function_8021B950 ( 00000050 0000000E )
  7B0:        Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  7CC:     EndThread
  7D4:     Add      *Var[0] 0000001E 
  7E4:     Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  800:     Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  820:     Thread
  828:        Call     $Function_8021B950 ( 00000050 0000000E )
  83C:        Call     ShakeCam    	( 00000001 00000000 00000003 *Fixed[2.0] )
  858:     EndThread
  860:     Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  878:     Wait     00000003 
  884:     Label    00000000 
  890:     Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
  8A8:     If       *Var[0] !=  00000000 
  8B8:        Wait     00000001 
  8C4:        Goto     00000000 
  8D0:     EndIf
  8D8:     Wait     00000008 
  8E4:     Call     SetActorYaw 	( .Actor:Self 00000000 )
  8F8:     Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  910:     Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  928:     Call     $Function_8021CC5C ( *Var[0] *Var[1] *Var[2] *Var[3] )
  944:     Add      *Var[1] 00000026 
  954:     Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  968:     Call     SetGoalPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  984:     Call     RunToGoal   	( .Actor:Self 00000000 .False )
  99C:     Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  9B4:     Wait     00000008 
  9C0:     Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:     Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  9F0:     Wait     00000002 
  9FC:     Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  A14:     Call     $Function_8021CC5C ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A30:     Call     SetActorVar 	( .Actor:Self 00000009 00000002 )
  A48:     Call     PlayEffect  	( 00000043 00000000 *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:     Call     PlayEffect  	( 00000006 00000001 *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:     Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  AE4:     Wait     00000004 
  AF0:     Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  B08:     Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  B20:     Wait     00000002 
  B2C:     Call     PlayEffect  	( 00000043 00000000 *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:     Call     PlayEffect  	( 00000006 00000001 *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:     Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  BC8:     Wait     00000004 
  BD4:     Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  BEC:     Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  C04:     Wait     00000002 
  C10:     Call     PlayEffect  	( 00000043 00000000 *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:     Call     PlayEffect  	( 00000006 00000001 *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:     Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  CAC:     Wait     00000014 
  CB8:     Call     SetAnimation 	( .Actor:Self 00000001 00810007 )
  CD0:     Wait     00000014 
  CDC:     Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:     Call     GetBattleFlags ( *Var[1] )
  D0C:     If       *Var[1] !&  80000000 
  D1C:        Call     GetStatusFlags ( .Actor:Player *Var[1] )
  D30:        If       *Var[1] !&  00100000 
  D40:           Call     GetStatusFlags ( .Actor:Self *Var[1] )
  D54:           If       *Var[1] !&  00080000 
  D64:              Call     LandJump ( FFFFFF81 )
  D74:           EndIf
  D7C:        EndIf
  D84:     EndIf
  D8C:     Call     $Function_8021B950 ( 00000050 0000000E )
  DA0:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DBC:     Add      *Var[0] 00000028 
  DCC:     Set      *Var[1] 00000000 
  DDC:     Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  DF8:     Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E14:     Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  E34:     Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  E48:     Thread
  E50:        Call     $Function_8021B950 ( 00000050 0000000E )
  E64:        Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  E80:     EndThread
  E88:     Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  EA0:     Wait     00000003 
  EAC:     Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  EC4:     Wait     00000014 
  ED0:  EndIf
  ED8:  If       *Var[F] ==  0000000A 
  EE8:     Return
  EF0:  EndIf
  EF8:  Call     UseBattleCamPreset 	( 00000002 )
  F08:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  F1C:  Set      *Var[1] 00810003 
  F2C:  ExecWait $Script_ReturnHome
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================  
  ExecWait $Script_FireBreath
  F38:  Return
  F40:  End
}

#new:Script $Script_80231CA8
{
    0:  Call     SetAnimation 	( .Actor:Self 00000001 0081000C )
   18:  Thread
   20:     Wait     00000005 
   2C:     Loop     00000004 
   38:        Call     $Function_8021B950 ( 00000050 0000000E )
   4C:        Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
   68:        Wait     00000004 
   74:     EndLoop
   7C:     Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
   94:  EndThread
   9C:  Return
   A4:  End
}

#new:Script $Script_ClawSwipe
{
    0:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
   18:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   2C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   40:  If       *Var[0] !&  00080000 
   50:     Call     UseBattleCamPreset 	( 0000003F )
   60:     Call     SetBattleCamZoom  	( 000000C8 )
   70:     Call     BattleCamTargetActor ( .Actor:Self )
   80:     Call     MoveBattleCamOver 	( 00000028 )
   90:     Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:     Call     UseBattleCamPreset 	( 0000003F )
   C0:     Call     SetBattleCamZoom  	( 000000A0 )
   D0:     Call     SetBattleCamOffsetZ 	( 00000005 )
   E0:     Call     BattleCamTargetActor ( .Actor:Self )
   F0:     Call     MoveBattleCamOver 	( 00000028 )
  100:     Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  138:  Call     SetGoalToTarget 	( .Actor:Self )
  148:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  15C:  If       *Var[0] !&  00080000 
  16C:     Call     AddGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
  188:  Else
  190:     Call     AddGoalPos 	( .Actor:Self 00000018 00000000 00000000 )
  1AC:  EndIf
  1B4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  1C8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  Call     GetActorVar 	( .Actor:Self 0000000C *Var[9] )
  		Loop 3
		Add *Var[9] 1`
  		Wait 00000010
  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  		Wait 00000015
  1E0:  Call     SetAnimation 	( .Actor:Self 00000001 00810009 )
  1F8:  Wait     00000019 
  204:  Call     SetAnimation 	( .Actor:Self 00000001 00810015 )
  21C:  Call     PlaySoundAtActor 	( .Actor:Self 0000035E )
  230:  Wait     00000003 
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  23C:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  260:  Switch   *Var[A] 
  26C:     CaseOR   ==  00000006 
  278:     CaseOR   ==  00000005 
  284:        Wait     00000014 
  290:        Call     UseBattleCamPreset 	( 00000002 )
  2A0:        Call     MoveBattleCamOver 	( 00000014 )
  2B0:        ExecWait $Script_80231CA8 
  2BC:        If       *Var[A] ==  00000005 
  2CC:           Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2F0:           Wait     0000001E 
  2FC:        Else
  304:           Wait     0000001E 
  310:        EndIf
			  If *Var[9] == 3`
  318:        	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  32C:        	Set      *Var[1] 00810003 
  33C:        	ExecWait $Script_ReturnHome 
			  Else
  348:        	Goto 00000004
			  EndIf
  350:     EndCaseGroup
  358:     Default
  360:  EndSwitch
  368:  Wait     00000002 
  374:  Call     SetGoalToTarget 	( .Actor:Self )
  384:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[0] )
  39C:  If       *Var[0]  &  00080000 
  3AC:     Set      *Var[0] 00000010 
  3BC:     Call     80269EAC ( 0000000C )
  3CC:     Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 80020364 *Var[0] 00000020 )
  3F4:  Else
  3FC:     Set      *Var[0] 00000008 
  40C:     Call     80269EAC ( 0000000C )
  41C:     Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 80020364 *Var[0] 00000020 )
  444:  EndIf
      Label 00000004
  EndLoop
  44C:  Switch   *Var[F] 
  458:     CaseOR   ==  00000000 
  464:     CaseOR   ==  00000002 
  470:     CaseOR   ==  0000000A 
  47C:        Wait     0000001E 
  488:        If       *Var[F] ==  0000000A 
  498:           Return
  4A0:        EndIf
  4A8:        Call     UseBattleCamPreset 	( 00000002 )
  4B8:        Call     MoveBattleCamOver 	( 00000014 )
  4C8:        Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  4DC:        Set      *Var[1] 00810003 
  4EC:        ExecWait $Script_ReturnHome 
  4F8:     EndCaseGroup
  500:  EndSwitch
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================  
  ExecWait $Script_FireBreath
  508:  Return
  510:  End
}

#new:Script $Script_Shockwave
{
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetStatusFlags ( .Actor:Self *Var[3] )
	If       *Var[3] !&  00080000 
		Call     UseBattleCamPreset 	( 00000013 )
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub      *Var[0] 00000018 
		Add      *Var[1] 00000061 
		Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom  	( 000001A4 )
		Call     SetBattleCamOffsetZ 	( 00000000 )
		Call     MoveBattleCamOver 	( 00000028 )
	Else
		Call     UseBattleCamPreset 	( 00000013 )
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Sub      *Var[0] 00000009 
		Add      *Var[1] 00000027 
		Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
		Call     SetBattleCamZoom  	( 00000177 )
		Call     SetBattleCamOffsetZ 	( 00000000 )
		Call     MoveBattleCamOver 	( 00000028 )
	EndIf
	Call     SetAnimation 	( .Actor:Self 00000001 0081000F )
	Wait     0000000A 
	Call     $Function_8021C004 ( )
	Call     PlaySoundAtActor 	( .Actor:Self 00002121 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  00080000 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[0] 00000016 
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 00000035 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.0] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.0] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Else
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[0] 00000009 
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 00000035 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.40039062] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.40039062] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
	Wait     00000019 
	Call     UseBattleCamPreset 	( 00000013 )
	Call     SetBattleCamTarget 	( FFFFFFD3 0000003C 00000000 )
	Call     SetBattleCamZoom  	( 00000212 )
	Call     SetBattleCamOffsetZ 	( 00000000 )
	Call     MoveBattleCamOver 	( 00000050 )
	Wait     0000000A 
	Call     RemoveEffect ( *Var[F] )
	Call     RemoveEffect ( *Var[E] )
	Call     PlaySoundAtActor 	( .Actor:Self 00002122 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  00080000 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[0] 00000013 
		Set      *Var[1] 00000037 
		Call     PlayEffect  	( 00000039 00000000 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Else
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[0] 00000007 
		Set      *Var[1] 00000016 
		Call     PlayEffect  	( 00000039 00000000 *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
	Thread
		Call     $Function_8021C09C ( )
	EndThread
	Wait     00000008 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
	Switch   *Var[A] 
		CaseOR   ==  00000006 
		CaseOR   ==  00000005 
			Call     SetTargetActor ( .Actor:Self .Actor:Partner )
			Call     EnemyTestTarget ( .Actor:Self *Var[B] 00000000 00000000 00000001 00000010 )
			Switch   *Var[B] 
				Case     ==  00000006 
					Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
					Wait     0000001E 
					Return
				Default
					Wait     00000002 
					If       *Var[A] ==  00000005 
					   ExecWait $Script_80231CA8 
					   Call     SetTargetActor ( .Actor:Self .Actor:Player )
					   Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
					EndIf
					Wait     00000002 
					Call     SetTargetActor ( .Actor:Self .Actor:Partner )
					Call     SetGoalToTarget 	( .Actor:Self )
					Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 20000110 0000FFFF 00000000 00000002 00000020 )
					Call     RemovePlayerBuffs ( 00010000 )
					If       *Var[A] !=  00000005 
					   Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
					EndIf
					Wait     0000001E 
					Return
			EndSwitch
		EndCaseGroup
		Default
	EndSwitch
	Call     8026BF48 ( 00000001 )
	Thread
		Wait     00000004 
		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
		Call     SetGoalToTarget 	( .Actor:Self )
		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 20000110 0000FFFF 00000000 00000002 00000020 )
		Call     8026BF48 ( 00000000 )
	EndThread
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 20000110 0000FFFF 00000000 0000000A 00000020 )
	Call     RemovePlayerBuffs ( 0FFFFFFF )
	Switch   *Var[F] 
		CaseOR   ==  00000000 
		CaseOR   ==  00000002 
		CaseOR   ==  0000000A 
			Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
			Wait     0000000F 
			If       *Var[F] ==  0000000A 
				Return
			EndIf
		EndCaseGroup
	EndSwitch
	Return
	End
}

#new:Script $Script_FireBreath
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     SetGoalToTarget 	( .Actor:Self )
   24:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   38:  If       *Var[0] !&  00080000 
   48:     Call     UseBattleCamPreset 	( 00000013 )
   58:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   74:     Sub      *Var[0] 0000001E 
   84:     Add      *Var[1] 00000051 
   94:     Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   AC:     Call     SetBattleCamZoom  	( 00000190 )
   BC:     Call     MoveBattleCamOver 	( 00000028 )
   CC:  Else
   D4:     Call     UseBattleCamPreset 	( 00000013 )
   E4:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  100:     Sub      *Var[0] 0000001E 
  110:     Add      *Var[1] 00000038 
  120:     Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
  138:     Call     SetBattleCamZoom  	( 0000015E )
  148:     Call     MoveBattleCamOver 	( 00000028 )
  158:  EndIf
  160:  Call     SetAnimation 	( .Actor:Self 00000001 00810016 )
  178:  Wait     00000023 
  184:  Call     SetAnimation 	( .Actor:Self 00000001 00810017 )
  19C:  Call     UseBattleCamPreset 	( 00000002 )
  1AC:  Call     MoveBattleCamOver 	( 00000037 )
  1BC:  Wait     0000000A 
  1C8:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[3] )
  1E0:  Call     GetStatusFlags ( .Actor:Self *Var[4] )
  1F4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  210:  If       *Var[3]  &  00080000 
  220:     If       *Var[4] !&  00080000 
  230:        Sub      *Var[0] 00000046 
  240:        Add      *Var[1] 00000023 
  250:     Else
  258:        Sub      *Var[0] 0000001C 
  268:        Add      *Var[1] 0000000E 
  278:     EndIf
  280:  Else
  288:     If       *Var[4] !&  00080000 
  298:        Sub      *Var[0] 0000004B 
  2A8:        Add      *Var[1] 00000031 
  2B8:     Else
  2C0:        Sub      *Var[0] 0000001E 
  2D0:        Add      *Var[1] 00000013 
  2E0:     EndIf
  2E8:  EndIf
  2F0:  Add      *Var[2] 0000000A 
  300:  Call     SetGoalToTarget 	( .Actor:Self )
  310:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  Sub      *Var[3] 00000028 
  33C:  Set      *Var[4] 00000014 
  34C:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[6] )
  364:  If       *Var[6]  &  00080000 
  374:     Call     PlayEffect  	( 00000037 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000032 00000001 00000018 00000000 00000000 00000000 )
  3B8:  Else
  3C0:     Call     GetStatusFlags ( .Actor:Self *Var[7] )
  3D4:     If       *Var[7] !&  00080000 
  3E4:        Add      *Var[0] 0000000F 
  3F4:     Else
  3FC:        Add      *Var[0] 00000006 
  40C:     EndIf
  414:     Sub      *Var[3] 0000000A 
  424:     Call     PlayEffect  	( 00000037 00000002 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000032 00000001 00000018 00000000 00000000 00000000 )
  468:     Call     $Function_8021CF54 ( *Var[F] )
  478:  EndIf
  480:  Thread
  488:     Call     $Function_8021B950 ( 00000032 00000094 )
  49C:     Call     PlaySound   	( 000003BD )
  4AC:     Wait     00000046 
  4B8:     Call     PlaySound   	( 000007BD )
  4C8:  EndThread
  4D0:  Wait     0000000A 
  4DC:  Call     SetGoalToTarget 	( .Actor:Self )
  4EC:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  510:  Switch   *Var[A] 
  51C:     CaseOR   ==  00000006 
  528:     CaseOR   ==  00000005 
  534:        Wait     0000000A 
  540:        Call     SetAnimation 	( .Actor:Self 00000001 00810018 )
  558:        Wait     0000001E 
  564:        Call     SetAnimation 	( .Actor:Self 00000001 00810019 )
  57C:        Wait     0000000F 
  588:        Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  5A0:        Wait     0000001E 
  5AC:        ExecWait $Script_80231CA8 
  5B8:        If       *Var[A] ==  00000005 
  5C8:           Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5EC:        EndIf
  5F4:        Wait     0000001E 
  600:        Return
  608:     EndCaseGroup
  610:     Default
  618:  EndSwitch
  620:  Wait     00000002 
  62C:  Call     SetGoalToTarget 	( .Actor:Self )
  63C:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[0] )
  654:  If       *Var[0]  &  00080000 
  664:     Set  *Var[0] 32` 
  674:  Else
  67C:     Set  *Var[0] 16` 
  68C:  EndIf
  694:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000002 0000FFFF 00000000 *Var[0] 00000020 )
  6BC:  Switch   *Var[F] 
  6C8:     CaseOR   ==  00000000 
  6D4:     CaseOR   ==  00000002 
  6E0:     CaseOR   ==  0000000A 
  6EC:        Wait     0000000A 
  6F8:        Call     SetAnimation 	( .Actor:Self 00000001 00810018 )
  710:        Wait     0000001E 
  71C:        Call     SetAnimation 	( .Actor:Self 00000001 00810019 )
  734:        Wait     0000000F 
  740:        Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  758:        Wait     0000001E 
  764:        If       *Var[F] ==  0000000A 
  774:           Return
  77C:        EndIf
  784:     EndCaseGroup
  78C:  EndSwitch
  794:  Return
  79C:  End
}

#new:Script $Script_80233408
{
    0:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   18:  Call     80269E80 ( *Var[3] )
   28:  Switch   *Var[3] 
   34:     Case     ==  00000009 
   40:        Call     GetOriginalActorType 	( .Actor:Self *Var[7] )
   54:        Switch   *Var[7] 
   60:           CaseOR   ==  00000012 
   6C:           CaseOR   ==  00000030 
   78:           EndCaseGroup
   80:           Default
   88:              Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
   A4:              Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.0107421875] )
   B8:              Add      *Var[5] 00000037 
   C8:              Call     SetGoalPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
   E4:              Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000000 00000000 )
  104:        EndSwitch
  10C:        Set      *Var[7] 00000000 
  11C:        Loop     0000001E 
  128:           Add      *Var[7] 00000030 
  138:           Call     SetActorYaw 	( .Actor:Self *Var[7] )
  14C:           Wait     00000001 
  158:        EndLoop
  160:        Call     GetOriginalActorType 	( .Actor:Self *Var[7] )
  174:        Switch   *Var[7] 
  180:           CaseOR   ==  00000012 
  18C:           CaseOR   ==  00000030 
  198:              Wait     0000001E 
  1A4:           EndCaseGroup
  1AC:           Default
  1B4:              Sub      *Var[5] 00000037 
  1C4:              Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.80078125] )
  1D8:              If       *Var[5] ==  00000000 
  1E8:                 Call     SetGoalPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  204:                 Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  224:                 Call     SetGoalPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  240:                 Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  260:                 Call     SetGoalPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  27C:                 Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:              Else
  2A4:                 Call     SetGoalPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2C0:                 Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  2E0:                 Call     SetGoalPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2FC:                 Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  31C:                 Call     SetGoalPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  338:                 Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000000 00000000 )
  358:              EndIf
  360:        EndSwitch
  368:     Default
  370:        Wait     00000014 
  37C:  EndSwitch
  384:  If       *Var[2] !=  FFFFFFFF 
  394:     Call     SetAnimation 	( .Actor:Self *Var[0] *Var[2] )
  3AC:  EndIf
  3B4:  Wait     0000000A 
  3C0:  Call     GetLastEvent 	( .Actor:Self *Var[1] )
  3D4:  Switch   *Var[1] 
  3E0:     Case     ==  .Event:BurnHit
  3EC:        Call     GetPartEventFlags 	( .Actor:Self *Var[0] *Var[1] )
  404:        If       *Var[1] !&  00000202 
  414:           Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  430:           Call     GetActorSize ( FFFFFF81 *Var[3] *Var[4] )
  448:           Call     GetStatusFlags ( .Actor:Self *Var[5] )
  45C:           If       *Var[5]  &  00080000 
  46C:              MulF     *Var[3] *Fixed[0.40039062] 
  47C:              MulF     *Var[4] *Fixed[0.40039062] 
  48C:           EndIf
  494:           DivF     *Var[3] *Fixed[2.0] 
  4A4:           Call     GetActorFlags 	( .Actor:Self *Var[5] )
  4B8:           If       *Var[5]  &  00000800 
  4C8:              SubF     *Var[1] *Var[3] 
  4D8:           Else
  4E0:              AddF     *Var[1] *Var[3] 
  4F0:           EndIf
  4F8:           AddF     *Var[2] *Fixed[5.0] 
  508:           DivF     *Var[3] *Fixed[10.0] 
  518:           Call     GetStatusFlags ( .Actor:Self *Var[5] )
  52C:           If       *Var[5]  &  00080000 
  53C:              MulF     *Var[3] *Fixed[0.40039062] 
  54C:              If       *Var[3]  <  00000001 
  55C:                 SetF     *Var[3] *Fixed[1.0] 
  56C:              EndIf
  574:           EndIf
  57C:           Call     PlayEffect  	( 00000027 00000000 *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5C0:        EndIf
  5C8:     Case     ==  .Event:BurnDeath
  5D4:  EndSwitch
  5DC:  Return
  5E4:  End
}

#new:Script $Script_Thunderbolt
{
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseBattleCamPreset 	( 0000000D )
	Call     BattleCamTargetActor ( .Actor:Self )
	Call     MoveBattleCamOver 	( 0000001E )
	Call     UseBattleCamPreset 	( 00000002 )
	Call     MoveBattleCamOver 	( 0000001E )
	Call     PlaySoundAtActor 	( .Actor:Self 000003EF )
	Call     SetAnimation 	( .Actor:Self 00000001 0081000F )
	Call     $Function_8021C004 ( )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0] !&  00080000 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[1] 00000036 
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 0000006B 00000002 *Var[0] *Var[1] *Var[2] *Fixed[1.5] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Wait     00000032 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[0] 00000016 
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 00000035 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.5] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Call     PlaySoundAtActor 	( .Actor:Self 00002121 )
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.5] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Wait     0000001E 
		Call     RemoveEffect ( *Var[F] )
		Call     RemoveEffect ( *Var[E] )
	Else
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[1] 00000015 
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 0000006B 00000002 *Var[0] *Var[1] *Var[2] *Fixed[0.60058594] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Wait     00000032 
		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
		Add      *Var[0] 00000009 
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 00000035 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.60058594] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Call     PlaySoundAtActor 	( .Actor:Self 00002121 )
		Sub      *Var[2] 00000003 
		Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.60058594] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
		Wait     0000001E 
		Call     RemoveEffect ( *Var[F] )
		Call     RemoveEffect ( *Var[E] )
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self 00002127 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Thread
		Call     GetGoalPos  	( .Actor:Self *Var[0] 00000000 *Var[1] )
		Call     $Function_8021CFC0 ( *Var[0] *Var[1] )
	EndThread
	Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
	Switch   *Var[A] 
		CaseOR   ==  00000006 
		CaseOR   ==  00000005 
			Wait     0000000A 
			If       *Var[A] ==  00000005 
				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
				Wait     00000014 
				Call     $Function_8021C09C ( )
			Else
				Wait     00000014 
				Call     $Function_8021C09C ( )
			EndIf
			Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
			Set      *Var[1] 00810003 
			ExecWait $Script_ReturnHome 
			Return
		EndCaseGroup
		Default
	EndSwitch
	Wait     00000005 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[0] )
	If       *Var[0]  &  00080000 
		Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000020 00000000 80010264 00000014 00000020 )
	Else
		Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000020 00000000 80010232 0000000A 00000020 )
	EndIf
	Switch   *Var[F] 
		CaseOR   ==  00000000 
		CaseOR   ==  00000002 
		CaseOR   ==  0000000A 
			Wait     0000001E 
			Call     $Function_8021C09C ( )
			If       *Var[F] ==  0000000A 
				Return
			EndIf
			Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
			Set      *Var[1] 00810003 
			ExecWait $Script_ReturnHome 
		EndCaseGroup
	EndSwitch
	Return
	End
}

% ====================================================
% Functions copied from "23 Area KPA2.bscr"
% ====================================================

#new:Function $Function_8021B950
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021B9A8
{
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 44 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 64 (SP)
   10:  SW        S8, 60 (SP)
   14:  SW        S7, 5C (SP)
   18:  SW        S6, 58 (SP)
   1C:  SW        S5, 54 (SP)
   20:  SW        S4, 50 (SP)
   24:  SW        S3, 4C (SP)
   28:  SW        S2, 48 (SP)
   2C:  SW        S0, 40 (SP)
   30:  SDC1      F26, 80 (SP)
   34:  SDC1      F24, 78 (SP)
   38:  SDC1      F22, 70 (SP)
   3C:  SDC1      F20, 68 (SP)
   40:  LW        S0, C (S1)
   44:  LIA       T3, $???_80234810
   4C:  LW        T0, 0 (T3)
   50:  LW        T1, 4 (T3)
   54:  LW        T2, 8 (T3)
   58:  SW        T0, 28 (SP)
   5C:  SW        T1, 2C (SP)
   60:  SW        T2, 30 (SP)
   64:  LW        T0, C (T3)
   68:  LW        T1, 10 (T3)
   6C:  LW        T2, 14 (T3)
   70:  SW        T0, 34 (SP)
   74:  SW        T1, 38 (SP)
   78:  SW        T2, 3C (SP)
   7C:  JAL       ~Func:get_actor
   80:  LW        A0, 148 (S1)
   84:  DADDU     S2, V0, R0
   88:  BEQ       S2, R0, .o278
   8C:  ADDIU     V0, R0, 2
   90:  LW        A1, 0 (S0)
   94:  ADDIU     S0, S0, 4
   98:  JAL       ~Func:get_variable
   9C:  DADDU     A0, S1, R0
   A0:  LW        A1, 0 (S0)
   A4:  ADDIU     S0, S0, 4
   A8:  DADDU     A0, S1, R0
   AC:  JAL       ~Func:get_variable
   B0:  DADDU     S8, V0, R0
   B4:  DADDU     S5, V0, R0
   B8:  LW        A1, 0 (S0)
   BC:  ADDIU     S0, S0, 4
   C0:  JAL       ~Func:get_variable
   C4:  DADDU     A0, S1, R0
   C8:  DADDU     A0, S1, R0
   CC:  LW        A1, 0 (S0)
   D0:  JAL       ~Func:get_float_variable
   D4:  DADDU     S6, V0, R0
   D8:  LB        V1, 210 (S2)
   DC:  ADDIU     V0, R0, A
   E0:  BEQ       V1, V0, .o11C
   E4:  MOV.S     F24, F0
   E8:  LIF       F2, 36.0
   F0:  NOP
   F4:  MUL.S     F2, F24, F2
   F8:  NOP
   FC:  MTC1      S5, F0
  100:  NOP
  104:  CVT.S.W   F0, F0
  108:  ADD.S     F0, F0, F2
  10C:  TRUNC.W.S F4, F0
  110:  MFC1      S5, F4
  114:  BEQ       R0, R0, .o14C
  118:  DADDU     S4, R0, R0
        .o11C
  11C:  LAD       F0, $ConstDouble_80234828
  124:  CVT.D.S   F2, F24
  128:  MUL.D     F2, F2, F0
  12C:  NOP
  130:  MTC1      S5, F0
  134:  NOP
  138:  CVT.D.W   F0, F0
  13C:  ADD.D     F0, F0, F2
  140:  TRUNC.W.D F4, F0
  144:  MFC1      S5, F4
  148:  DADDU     S4, R0, R0
        .o14C
  14C:  LIF       F26, 200.0
  154:  ADDIU     S7, S6, 14
  158:  ADDIU     S3, SP, 28
        .o15C
  15C:  JAL       800299FC
  160:  ADDIU     A0, R0, 1E
  164:  LW        V1, 0 (S3)
  168:  ADDU      V1, V1, V0
  16C:  ADDIU     V1, V1, FFF1
  170:  MTC1      V1, F20
  174:  NOP
  178:  CVT.S.W   F20, F20
  17C:  JAL       8002A2EC
  180:  MOV.S     F12, F20
  184:  MUL.S     F0, F0, F26
  188:  NOP
  18C:  MTC1      S8, F22
  190:  NOP
  194:  CVT.S.W   F22, F22
  198:  ADD.S     F0, F0, F22
  19C:  TRUNC.W.S F4, F0
  1A0:  MFC1      S0, F4
  1A4:  JAL       8002A350
  1A8:  MOV.S     F12, F20
  1AC:  ADDIU     A0, R0, 1
  1B0:  MTC1      S0, F2
  1B4:  NOP
  1B8:  CVT.S.W   F2, F2
  1BC:  SWC1      F2, 10 (SP)
  1C0:  MTC1      S7, F2
  1C4:  NOP
  1C8:  CVT.S.W   F2, F2
  1CC:  MUL.S     F0, F0, F26
  1D0:  NOP
  1D4:  SWC1      F2, 18 (SP)
  1D8:  MTC1      S5, F2
  1DC:  NOP
  1E0:  CVT.S.W   F2, F2
  1E4:  ADDIU     V0, R0, B
  1E8:  MFC1      A1, F22
  1EC:  MFC1      A2, F2
  1F0:  ADD.S     F0, F0, F2
  1F4:  SWC1      F24, 1C (SP)
  1F8:  SW        V0, 20 (SP)
  1FC:  TRUNC.W.S F4, F0
  200:  MFC1      V0, F4
  204:  MTC1      S6, F4
  208:  NOP
  20C:  CVT.S.W   F4, F4
  210:  MFC1      A3, F4
  214:  MTC1      V0, F0
  218:  NOP
  21C:  CVT.S.W   F0, F0
  220:  JAL       80071BD0
  224:  SWC1      F0, 14 (SP)
  228:  ADDIU     A0, R0, 100
  22C:  JAL       800299FC
  230:  DADDU     S0, V0, R0
  234:  ADDIU     A0, R0, 100
  238:  JAL       800299FC
  23C:  DADDU     S1, V0, R0
  240:  ADDIU     A0, R0, 100
  244:  JAL       800299FC
  248:  DADDU     S2, V0, R0
  24C:  LW        V1, C (S0)
  250:  SW        S1, 30 (V1)
  254:  LW        V1, C (S0)
  258:  SW        S2, 34 (V1)
  25C:  LW        V1, C (S0)
  260:  ADDIU     S4, S4, 1
  264:  SW        V0, 38 (V1)
  268:  SLTI      V0, S4, 6
  26C:  BNE       V0, R0, .o15C
  270:  ADDIU     S3, S3, 4
  274:  ADDIU     V0, R0, 2
        .o278
  278:  LW        RA, 64 (SP)
  27C:  LW        S8, 60 (SP)
  280:  LW        S7, 5C (SP)
  284:  LW        S6, 58 (SP)
  288:  LW        S5, 54 (SP)
  28C:  LW        S4, 50 (SP)
  290:  LW        S3, 4C (SP)
  294:  LW        S2, 48 (SP)
  298:  LW        S1, 44 (SP)
  29C:  LW        S0, 40 (SP)
  2A0:  LDC1      F26, 80 (SP)
  2A4:  LDC1      F24, 78 (SP)
  2A8:  LDC1      F22, 70 (SP)
  2AC:  LDC1      F20, 68 (SP)
  2B0:  JR        RA
  2B4:  ADDIU     SP, SP, 88
}

#new:Function $Function_8021BC60
{
    0:  ADDIU     SP, SP, FF58
    4:  SW        S3, 74 (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        RA, 88 (SP)
   10:  SW        S7, 84 (SP)
   14:  SW        S6, 80 (SP)
   18:  SW        S5, 7C (SP)
   1C:  SW        S4, 78 (SP)
   20:  SW        S2, 70 (SP)
   24:  SW        S1, 6C (SP)
   28:  SW        S0, 68 (SP)
   2C:  SDC1      F24, A0 (SP)
   30:  SDC1      F22, 98 (SP)
   34:  SDC1      F20, 90 (SP)
   38:  LW        A0, 148 (S3)
   3C:  JAL       ~Func:get_actor
   40:  DADDU     S0, A1, R0
   44:  BNE       V0, R0, .o54
   48:  DADDU     A0, V0, R0
   4C:  BEQ       R0, R0, .o36C
   50:  ADDIU     V0, R0, 2
        .o54
   54:  JAL       ~Func:get_actor_part
   58:  ADDIU     A1, R0, 1
   5C:  BEQ       S0, R0, .oAC
   60:  DADDU     S5, V0, R0
   64:  DADDU     S0, R0, R0
   68:  ADDIU     S1, R0, FF
   6C:  SW        R0, 74 (S3)
   70:  SW        R0, 78 (S3)
   74:  SW        R0, 70 (S3)
   78:  DADDU     A1, S0, R0
        .o7C
   7C:  ADDIU     A2, R0, 11
   80:  ADDIU     A3, R0, 14
   84:  SW        R0, 10 (SP)
   88:  SW        R0, 14 (SP)
   8C:  SW        S1, 18 (SP)
   90:  SW        R0, 1C (SP)
   94:  LW        A0, 84 (S5)
   98:  JAL       802DE780
   9C:  ADDIU     S0, S0, 1
   A0:  SLTI      V0, S0, A
   A4:  BNE       V0, R0, .o7C
   A8:  DADDU     A1, S0, R0
        .oAC
   AC:  LW        V0, 74 (S3)
   B0:  ADDIU     A0, V0, A
   B4:  SLTI      V0, A0, 168
   B8:  BNE       V0, R0, .oFC
   BC:  SW        A0, 74 (S3)
   C0:  LIO       V0, B60B60B7
   C8:  MULT      A0, V0
   CC:  SRA       V1, A0, 1F
   D0:  MFHI      T0
   D4:  ADDU      V0, T0, A0
   D8:  SRA       V0, V0, 8
   DC:  SUBU      V0, V0, V1
   E0:  SLL       V1, V0, 1
   E4:  ADDU      V1, V1, V0
   E8:  SLL       V0, V1, 4
   EC:  SUBU      V0, V0, V1
   F0:  SLL       V0, V0, 3
   F4:  SUBU      V0, A0, V0
   F8:  SW        V0, 74 (S3)
        .oFC
   FC:  DADDU     S1, R0, R0
  100:  LUI       S2, 8000
  104:  DADDU     S0, S1, R0
  108:  LIF       F25, 1.875
  110:  MTC1      R0, F24
  114:  LIF       F23, 3.1875
  11C:  MTC1      R0, F22
  120:  LIF       F21, 28.0
  128:  MTC1      R0, F20
        .o12C
  12C:  LHU       A0, 76 (S3)
  130:  ADDU      A0, A0, S0
  134:  ADDIU     A0, A0, 78
  138:  SLL       A0, A0, 10
  13C:  JAL       800293D4
  140:  SRA       A0, A0, 10
  144:  CVT.D.S   F0, F0
  148:  ADD.D     F0, F0, F24
  14C:  MUL.D     F0, F0, F22
  150:  NOP
  154:  ADDIU     V0, SP, 20
  158:  C.LE.D    F20, F0
  15C:  NOP
  160:  BC1T      .o178
  164:  ADDU      V0, V0, S1
  168:  TRUNC.W.D F2, F0
  16C:  MFC1      V1, F2
  170:  BEQ       R0, R0, .o190
  174:  SB        V1, 0 (V0)
        .o178
  178:  SUB.D     F0, F0, F20
  17C:  TRUNC.W.D F2, F0
  180:  MFC1      V1, F2
  184:  NOP
  188:  OR        V1, V1, S2
  18C:  SB        V1, 0 (V0)
        .o190
  190:  LHU       A0, 76 (S3)
  194:  ADDU      A0, A0, S0
  198:  ADDIU     A0, A0, 3C
  19C:  SLL       A0, A0, 10
  1A0:  JAL       800293D4
  1A4:  SRA       A0, A0, 10
  1A8:  CVT.D.S   F0, F0
  1AC:  ADD.D     F0, F0, F24
  1B0:  MUL.D     F0, F0, F22
  1B4:  NOP
  1B8:  ADDIU     V0, SP, 38
  1BC:  C.LE.D    F20, F0
  1C0:  NOP
  1C4:  BC1T      .o1DC
  1C8:  ADDU      V0, V0, S1
  1CC:  TRUNC.W.D F2, F0
  1D0:  MFC1      V1, F2
  1D4:  BEQ       R0, R0, .o1F4
  1D8:  SB        V1, 0 (V0)
        .o1DC
  1DC:  SUB.D     F0, F0, F20
  1E0:  TRUNC.W.D F2, F0
  1E4:  MFC1      V1, F2
  1E8:  NOP
  1EC:  OR        V1, V1, S2
  1F0:  SB        V1, 0 (V0)
        .o1F4
  1F4:  LHU       A0, 76 (S3)
  1F8:  ADDU      A0, A0, S0
  1FC:  ADDIU     A0, A0, B4
  200:  SLL       A0, A0, 10
  204:  JAL       800293D4
  208:  SRA       A0, A0, 10
  20C:  CVT.D.S   F0, F0
  210:  ADD.D     F0, F0, F24
  214:  MUL.D     F0, F0, F22
  218:  NOP
  21C:  ADDIU     V0, SP, 50
  220:  C.LE.D    F20, F0
  224:  NOP
  228:  BC1T      .o240
  22C:  ADDU      V0, V0, S1
  230:  TRUNC.W.D F2, F0
  234:  MFC1      V1, F2
  238:  BEQ       R0, R0, .o258
  23C:  SB        V1, 0 (V0)
        .o240
  240:  SUB.D     F0, F0, F20
  244:  TRUNC.W.D F2, F0
  248:  MFC1      V1, F2
  24C:  NOP
  250:  OR        V1, V1, S2
  254:  SB        V1, 0 (V0)
        .o258
  258:  ADDIU     S1, S1, 1
  25C:  SLTI      V0, S1, 14
  260:  BNE       V0, R0, .o12C
  264:  ADDIU     S0, S0, 19
  268:  LW        V0, 7C (S5)
  26C:  LUI       V1, 8
  270:  AND       V0, V0, V1
  274:  BEQ       V0, R0, .o30C
  278:  DADDU     S1, R0, R0
  27C:  ADDIU     S7, SP, 20
  280:  ADDIU     S6, SP, 38
  284:  ADDIU     S4, SP, 50
  288:  ADDIU     S3, R0, FF
  28C:  DADDU     S0, R0, R0
        .o290
  290:  ADDU      V0, S7, S1
  294:  ADDU      A0, S6, S1
  298:  LBU       V1, 0 (V0)
  29C:  ADDU      V0, S4, S1
  2A0:  LBU       A0, 0 (A0)
  2A4:  LBU       V0, 0 (V0)
  2A8:  SLL       V1, V1, 18
  2AC:  SLL       A0, A0, 10
  2B0:  OR        V1, V1, A0
  2B4:  SLL       V0, V0, 8
  2B8:  OR        V1, V1, V0
  2BC:  ORI       S2, V1, FF
  2C0:  DADDU     A1, S0, R0
        .o2C4
  2C4:  ADDIU     A2, R0, C
  2C8:  DADDU     A3, S1, R0
  2CC:  SW        S2, 10 (SP)
  2D0:  SW        R0, 14 (SP)
  2D4:  SW        S3, 18 (SP)
  2D8:  SW        R0, 1C (SP)
  2DC:  LW        A0, 84 (S5)
  2E0:  JAL       802DE780
  2E4:  ADDIU     S0, S0, 1
  2E8:  SLTI      V0, S0, A
  2EC:  BNE       V0, R0, .o2C4
  2F0:  DADDU     A1, S0, R0
  2F4:  ADDIU     S1, S1, 1
  2F8:  SLTI      V0, S1, 14
  2FC:  BNE       V0, R0, .o290
  300:  DADDU     S0, R0, R0
  304:  BEQ       R0, R0, .o36C
  308:  DADDU     V0, R0, R0
        .o30C
  30C:  ADDIU     S2, R0, FF
  310:  DADDU     S4, S2, R0
  314:  DADDU     S0, R0, R0
        .o318
  318:  DADDU     A1, S0, R0
        .o31C
  31C:  ADDIU     A2, R0, C
  320:  DADDU     A3, S1, R0
  324:  SW        S2, 10 (SP)
  328:  SW        R0, 14 (SP)
  32C:  SW        S4, 18 (SP)
  330:  SW        R0, 1C (SP)
  334:  LW        A0, 84 (S5)
  338:  JAL       802DE780
  33C:  ADDIU     S0, S0, 1
  340:  SLTI      V0, S0, A
  344:  BNE       V0, R0, .o31C
  348:  DADDU     A1, S0, R0
  34C:  ADDIU     S1, S1, 1
  350:  SLTI      V0, S1, 14
  354:  BNE       V0, R0, .o318
  358:  DADDU     S0, R0, R0
  35C:  DADDU     V0, R0, R0
  360:  SW        R0, 74 (S3)
  364:  SW        R0, 78 (S3)
  368:  SW        R0, 70 (S3)
        .o36C
  36C:  LW        RA, 88 (SP)
  370:  LW        S7, 84 (SP)
  374:  LW        S6, 80 (SP)
  378:  LW        S5, 7C (SP)
  37C:  LW        S4, 78 (SP)
  380:  LW        S3, 74 (SP)
  384:  LW        S2, 70 (SP)
  388:  LW        S1, 6C (SP)
  38C:  LW        S0, 68 (SP)
  390:  LDC1      F24, A0 (SP)
  394:  LDC1      F22, 98 (SP)
  398:  LDC1      F20, 90 (SP)
  39C:  JR        RA
  3A0:  ADDIU     SP, SP, A8
}

#new:Function $Function_8021C004
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       8011D82C
   18:  ADDIU     A0, R0, 1
   1C:  DADDU     A0, R0, R0
   20:  DADDU     A1, A0, R0
   24:  DADDU     A2, A0, R0
   28:  DADDU     A3, A0, R0
   2C:  LAW       V0, 801512F0
   34:  ADDIU     V1, R0, 1
   38:  JAL       8011BE5C
   3C:  SB        V1, 0 (V0)
   40:  ADDIU     V0, R0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  DADDU     A0, R0, R0
   4C:  DADDU     A1, A0, R0
   50:  DADDU     A2, A0, R0
   54:  LW        V1, 70 (S0)
   58:  ADDIU     V0, R0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       8011BE5C
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021C09C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  ADDIU     V0, R0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  DADDU     A0, R0, R0
   20:  DADDU     A1, A0, R0
   24:  LW        V0, 70 (S0)
   28:  DADDU     A2, A0, R0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       8011BE5C
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  DADDU     V0, R0, R0
        .o58
   58:  DADDU     A0, R0, R0
   5C:  DADDU     A1, A0, R0
   60:  DADDU     A2, A0, R0
   64:  JAL       8011BE5C
   68:  DADDU     A3, A0, R0
   6C:  ADDIU     V0, R0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021C11C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LH        A0, 436 (V0)
   14:  SB        R0, 224 (V0)
   18:  JAL       80047B84
   1C:  SB        R0, 223 (V0)
   20:  LW        RA, 10 (SP)
   24:  ADDIU     V0, R0, 2
   28:  JR        RA
   2C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021C14C
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F28, 50 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        A0, 148 (S1)
   38:  LW        S0, C (S1)
   3C:  JAL       ~Func:get_actor
   40:  DADDU     S2, A1, R0
   44:  DADDU     S3, V0, R0
   48:  BEQ       S3, R0, .o3A0
   4C:  ADDIU     V0, R0, 2
   50:  BEQ       S2, R0, .o144
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  JAL       ~Func:get_variable
   64:  DADDU     S2, R0, R0
   68:  LW        A1, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  MTC1      V0, F28
   74:  NOP
   78:  CVT.S.W   F28, F28
   7C:  JAL       ~Func:get_variable
   80:  DADDU     A0, S1, R0
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  MTC1      V0, F26
   90:  NOP
   94:  CVT.S.W   F26, F26
   98:  JAL       ~Func:get_variable
   9C:  DADDU     A0, S1, R0
   A0:  LW        A1, 0 (S0)
   A4:  ADDIU     S0, S0, 4
   A8:  MTC1      V0, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  JAL       ~Func:get_float_variable
   B8:  DADDU     A0, S1, R0
   BC:  DADDU     A0, S1, R0
   C0:  LW        A1, 0 (S0)
   C4:  JAL       ~Func:get_float_variable
   C8:  MOV.S     F20, F0
   CC:  ADDIU     A0, R0, B4
   D0:  JAL       8002ACE4
   D4:  MOV.S     F22, F0
   D8:  DADDU     S1, V0, R0
   DC:  ADDIU     A2, R0, 28
   E0:  ADDIU     A1, R0, FF
   E4:  ADDIU     A0, R0, 1
   E8:  ADDIU     V1, S1, 38
   EC:  SW        S1, 78 (S3)
        .oF0
   F0:  SWC1      F28, FFCC (V1)
   F4:  SWC1      F26, FFD0 (V1)
   F8:  SWC1      F24, FFD4 (V1)
   FC:  SWC1      F20, FFE0 (V1)
  100:  SWC1      F20, FFD8 (V1)
  104:  SWC1      F22, FFDC (V1)
  108:  SW        A0, FFE4 (V1)
  10C:  SW        A2, FFE8 (V1)
  110:  SW        A1, FFEC (V1)
  114:  SW        A1, FFF0 (V1)
  118:  SW        R0, FFF4 (V1)
  11C:  SW        R0, FFF8 (V1)
  120:  SW        R0, FFFC (V1)
  124:  SW        R0, 0 (V1)
  128:  ADDIU     V1, V1, 3C
  12C:  ADDIU     S2, S2, 1
  130:  SLTI      V0, S2, 3
  134:  BNE       V0, R0, .oF0
  138:  ADDIU     A0, A0, A
  13C:  BEQ       R0, R0, .o3A0
  140:  DADDU     V0, R0, R0
        .o144
  144:  DADDU     S4, R0, R0
  148:  DADDU     S2, S4, R0
  14C:  LW        S1, 78 (S3)
  150:  LIO       AT, 3DCCCCCD
  158:  MTC1      AT, F24
  15C:  LIF       F22, 0.5
  164:  LIF       F20, 255.0
  16C:  ADDIU     S0, S1, 28
        .o170
  170:  LW        V0, FFF4 (S0)
  174:  BLEZ      V0, .o1E8
  178:  ADDIU     V0, V0, FFFF
  17C:  BGTZ      V0, .o374
  180:  SW        V0, FFF4 (S0)
  184:  LWC1      F0, FFF0 (S0)
  188:  ADDIU     V0, R0, FFFF
  18C:  SW        V0, 14 (SP)
  190:  SWC1      F0, 10 (SP)
  194:  LW        A1, FFDC (S0)
  198:  LW        A2, FFE0 (S0)
  19C:  LW        A3, FFE4 (S0)
  1A0:  JAL       80072A70
  1A4:  DADDU     A0, R0, R0
  1A8:  SW        V0, 0 (S1)
  1AC:  LW        V0, C (V0)
  1B0:  LWC1      F0, 4 (S0)
  1B4:  SWC1      F0, 3C (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, 8 (S0)
  1C0:  LW        V0, C (V0)
  1C4:  SWC1      F0, 40 (V0)
  1C8:  LW        V0, 0 (S1)
  1CC:  LWC1      F0, C (S0)
  1D0:  LW        V0, C (V0)
  1D4:  SWC1      F0, 44 (V0)
  1D8:  LW        V0, 0 (S1)
  1DC:  LW        V0, C (V0)
  1E0:  BEQ       R0, R0, .o374
  1E4:  SH        R0, 0 (V0)
        .o1E8
  1E8:  LW        V0, 10 (S0)
  1EC:  BEQ       V0, R0, .o1FC
  1F0:  NOP
  1F4:  BEQ       R0, R0, .o374
  1F8:  ADDIU     S4, S4, 1
        .o1FC
  1FC:  LWC1      F0, FFE8 (S0)
  200:  LWC1      F8, FFEC (S0)
  204:  SUB.S     F0, F0, F8
  208:  LWC1      F2, FFF8 (S0)
  20C:  CVT.S.W   F2, F2
  210:  ABS.S     F0, F0
  214:  MUL.S     F0, F0, F2
  218:  NOP
  21C:  LWC1      F6, C (S0)
  220:  LIF       F2, 9.0
  228:  LIF       F4, 40.0
  230:  ADD.S     F6, F6, F2
  234:  LW        V1, FFF8 (S0)
  238:  DIV.S     F0, F0, F4
  23C:  ADD.S     F0, F0, F8
  240:  SLTI      V0, V1, B
  244:  SWC1      F6, C (S0)
  248:  BEQ       V0, R0, .o2BC
  24C:  SWC1      F0, FFF0 (S0)
  250:  SRL       V0, V1, 1F
  254:  ADDU      V0, V1, V0
  258:  SRA       V0, V0, 1
  25C:  MTC1      V0, F2
  260:  NOP
  264:  CVT.S.W   F2, F2
  268:  DADDU     V0, V1, R0
  26C:  MUL.S     F2, F2, F24
  270:  NOP
  274:  SRL       V1, V0, 1F
  278:  ADDU      V0, V0, V1
  27C:  SRA       V0, V0, 1
  280:  MTC1      V0, F0
  284:  NOP
  288:  CVT.S.W   F0, F0
  28C:  MUL.S     F0, F0, F24
  290:  NOP
  294:  ADD.S     F2, F2, F22
  298:  MUL.S     F2, F2, F20
  29C:  NOP
  2A0:  ADD.S     F0, F0, F22
  2A4:  MUL.S     F0, F0, F20
  2A8:  NOP
  2AC:  TRUNC.W.S F10, F2
  2B0:  SWC1      F10, FFFC (S0)
  2B4:  TRUNC.W.S F10, F0
  2B8:  SWC1      F10, 0 (S0)
        .o2BC
  2BC:  LW        V0, FFF8 (S0)
  2C0:  ADDIU     V0, V0, FFFF
  2C4:  BGTZ      V0, .o2E4
  2C8:  SW        V0, FFF8 (S0)
  2CC:  LW        A0, 0 (S1)
  2D0:  JAL       8005A450
  2D4:  NOP
  2D8:  ADDIU     V0, R0, 1
  2DC:  BEQ       R0, R0, .o374
  2E0:  SW        V0, 10 (S0)
        .o2E4
  2E4:  LW        V0, 0 (S1)
  2E8:  LWC1      F0, FFDC (S0)
  2EC:  LW        V0, C (V0)
  2F0:  SWC1      F0, 4 (V0)
  2F4:  LW        V0, 0 (S1)
  2F8:  LWC1      F0, FFE0 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F0, 8 (V0)
  304:  LW        V0, 0 (S1)
  308:  LWC1      F0, FFE4 (S0)
  30C:  LW        V0, C (V0)
  310:  SWC1      F0, C (V0)
  314:  LW        V0, 0 (S1)
  318:  LWC1      F0, 4 (S0)
  31C:  LW        V0, C (V0)
  320:  SWC1      F0, 3C (V0)
  324:  LW        V0, 0 (S1)
  328:  LWC1      F0, 8 (S0)
  32C:  LW        V0, C (V0)
  330:  SWC1      F0, 40 (V0)
  334:  LW        V0, 0 (S1)
  338:  LWC1      F0, C (S0)
  33C:  LW        V0, C (V0)
  340:  SWC1      F0, 44 (V0)
  344:  LW        V0, 0 (S1)
  348:  LWC1      F0, FFF0 (S0)
  34C:  LW        V0, C (V0)
  350:  SWC1      F0, 38 (V0)
  354:  LW        V0, 0 (S1)
  358:  LW        V1, C (V0)
  35C:  LW        V0, FFFC (S0)
  360:  SW        V0, 24 (V1)
  364:  LW        V0, 0 (S1)
  368:  LW        V1, C (V0)
  36C:  LW        V0, 0 (S0)
  370:  SW        V0, 34 (V1)
        .o374
  374:  ADDIU     S0, S0, 3C
  378:  ADDIU     S2, S2, 1
  37C:  SLTI      V0, S2, 3
  380:  BNE       V0, R0, .o170
  384:  ADDIU     S1, S1, 3C
  388:  SLTI      V0, S4, 3
  38C:  BNE       V0, R0, .o3A0
  390:  DADDU     V0, R0, R0
  394:  JAL       8002AD2C
  398:  DADDU     A0, S1, R0
  39C:  ADDIU     V0, R0, 2
        .o3A0
  3A0:  LW        RA, 2C (SP)
  3A4:  LW        S4, 28 (SP)
  3A8:  LW        S3, 24 (SP)
  3AC:  LW        S2, 20 (SP)
  3B0:  LW        S1, 1C (SP)
  3B4:  LW        S0, 18 (SP)
  3B8:  LDC1      F28, 50 (SP)
  3BC:  LDC1      F26, 48 (SP)
  3C0:  LDC1      F24, 40 (SP)
  3C4:  LDC1      F22, 38 (SP)
  3C8:  LDC1      F20, 30 (SP)
  3CC:  JR        RA
  3D0:  ADDIU     SP, SP, 58
}

#new:Function $Function_8021C520
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        A0, 148 (S1)
   34:  LW        S0, C (S1)
   38:  JAL       ~Func:get_actor
   3C:  DADDU     S2, A1, R0
   40:  DADDU     S4, V0, R0
   44:  BEQ       S4, R0, .o424
   48:  ADDIU     V0, R0, 2
   4C:  BEQ       S2, R0, .o154
   50:  DADDU     S3, R0, R0
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  JAL       ~Func:get_variable
   60:  DADDU     A0, S1, R0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  MTC1      V0, F26
   70:  NOP
   74:  CVT.S.W   F26, F26
   78:  JAL       ~Func:get_variable
   7C:  DADDU     A0, S1, R0
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F24
   8C:  NOP
   90:  CVT.S.W   F24, F24
   94:  JAL       ~Func:get_variable
   98:  DADDU     A0, S1, R0
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_float_variable
   B0:  DADDU     A0, S1, R0
   B4:  LB        V1, 210 (S4)
   B8:  ADDIU     V0, R0, A
   BC:  BNE       V1, V0, .oDC
   C0:  MOV.S     F20, F0
   C4:  LAD       F2, $ConstDouble_80234830
   CC:  CVT.D.S   F0, F20
   D0:  MUL.D     F0, F0, F2
   D4:  NOP
   D8:  CVT.S.D   F20, F0
        .oDC
   DC:  JAL       8002ACE4
   E0:  ADDIU     A0, R0, 9C
   E4:  DADDU     S1, V0, R0
   E8:  DADDU     S2, R0, R0
   EC:  ADDIU     A2, R0, 32
   F0:  ADDIU     A1, R0, FF
   F4:  ADDIU     A0, R0, 1
   F8:  LIF       F0, 90.0
  100:  ADDIU     V1, S1, 30
  104:  SW        S1, 78 (S4)
        .o108
  108:  SWC1      F26, FFD4 (V1)
  10C:  SWC1      F24, FFD8 (V1)
  110:  SWC1      F22, FFDC (V1)
  114:  SWC1      F20, FFE0 (V1)
  118:  SW        A0, FFE4 (V1)
  11C:  SW        A2, FFE8 (V1)
  120:  SW        A1, FFEC (V1)
  124:  SW        A1, FFF0 (V1)
  128:  SWC1      F0, FFF4 (V1)
  12C:  SW        R0, FFF8 (V1)
  130:  SW        R0, FFFC (V1)
  134:  SW        R0, 0 (V1)
  138:  ADDIU     V1, V1, 34
  13C:  ADDIU     S2, S2, 1
  140:  SLTI      V0, S2, 3
  144:  BNE       V0, R0, .o108
  148:  ADDIU     A0, A0, 10
  14C:  BEQ       R0, R0, .o424
  150:  DADDU     V0, R0, R0
        .o154
  154:  LW        S1, 78 (S4)
  158:  DADDU     S2, S3, R0
  15C:  ADDIU     S0, S1, 30
        .o160
  160:  LW        V0, FFE4 (S0)
  164:  BLEZ      V0, .o1CC
  168:  ADDIU     V0, V0, FFFF
  16C:  BGTZ      V0, .o3F8
  170:  SW        V0, FFE4 (S0)
  174:  LWC1      F0, FFE0 (S0)
  178:  ADDIU     V0, R0, FFFF
  17C:  SW        V0, 14 (SP)
  180:  SWC1      F0, 10 (SP)
  184:  LW        A1, FFD4 (S0)
  188:  LW        A2, FFD8 (S0)
  18C:  LW        A3, FFDC (S0)
  190:  JAL       80072A70
  194:  DADDU     A0, R0, R0
  198:  SW        V0, 0 (S1)
  19C:  LW        V0, C (V0)
  1A0:  LWC1      F0, FFF4 (S0)
  1A4:  SWC1      F0, 3C (V0)
  1A8:  LW        V0, 0 (S1)
  1AC:  LWC1      F0, FFF8 (S0)
  1B0:  LW        V0, C (V0)
  1B4:  SWC1      F0, 40 (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, FFFC (S0)
  1C0:  LW        V0, C (V0)
  1C4:  BEQ       R0, R0, .o3F8
  1C8:  SWC1      F0, 44 (V0)
        .o1CC
  1CC:  LW        V0, 0 (S0)
  1D0:  BEQ       V0, R0, .o1E0
  1D4:  ADDIU     V0, R0, A
  1D8:  BEQ       R0, R0, .o3F8
  1DC:  ADDIU     S3, S3, 1
        .o1E0
  1E0:  LB        V1, 210 (S4)
  1E4:  BEQ       V1, V0, .o26C
  1E8:  NOP
  1EC:  LWC1      F2, FFD8 (S0)
  1F0:  LIF       F1, 3.21875
  1F8:  MTC1      R0, F0
  1FC:  CVT.D.S   F2, F2
  200:  C.LT.D    F2, F0
  204:  LIF       F1, 2.28125
  20C:  MTC1      R0, F0
  210:  BC1TL     .o2E8
  214:  ADD.D     F0, F2, F0
  218:  LAD       F0, $ConstDouble_80234838
  220:  C.LT.D    F2, F0
  224:  LAD       F0, $ConstDouble_80234840
  22C:  BC1TL     .o2E8
  230:  ADD.D     F0, F2, F0
  234:  LIF       F1, 3.46875
  23C:  MTC1      R0, F0
  240:  NOP
  244:  C.LT.D    F2, F0
  248:  LAD       F0, $ConstDouble_80234848
  250:  BC1TL     .o2E8
  254:  ADD.D     F0, F2, F0
  258:  LIF       F1, 1.9375
  260:  MTC1      R0, F0
  264:  BEQ       R0, R0, .o2E8
  268:  ADD.D     F0, F2, F0
        .o26C
  26C:  LWC1      F2, FFD8 (S0)
  270:  LIF       F1, 2.875
  278:  MTC1      R0, F0
  27C:  CVT.D.S   F2, F2
  280:  C.LT.D    F2, F0
  284:  LAD       F0, $ConstDouble_80234850
  28C:  BC1TL     .o2E8
  290:  ADD.D     F0, F2, F0
  294:  LIF       F1, 3.03125
  29C:  MTC1      R0, F0
  2A0:  NOP
  2A4:  C.LT.D    F2, F0
  2A8:  LAD       F0, $ConstDouble_80234858
  2B0:  BC1TL     .o2E8
  2B4:  ADD.D     F0, F2, F0
  2B8:  LIF       F1, 3.125
  2C0:  MTC1      R0, F0
  2C4:  NOP
  2C8:  C.LT.D    F2, F0
  2CC:  LAD       F0, $ConstDouble_80234860
  2D4:  BC1FL     .o2E8
  2D8:  ADD.D     F0, F2, F0
  2DC:  LAD       F0, $ConstDouble_80234868
  2E4:  ADD.D     F0, F2, F0
        .o2E8
  2E8:  CVT.S.D   F0, F0
  2EC:  SWC1      F0, FFD8 (S0)
  2F0:  LWC1      F0, FFF8 (S0)
  2F4:  LIF       F2, 18.0
  2FC:  LW        V1, FFE8 (S0)
  300:  ADD.S     F0, F0, F2
  304:  SLTI      V0, V1, 11
  308:  BEQ       V0, R0, .o344
  30C:  SWC1      F0, FFF8 (S0)
  310:  SLL       V0, V1, 8
  314:  SUBU      V1, V0, V1
  318:  BLTZL     V1, .o320
  31C:  ADDIU     V1, V1, F
        .o320
  320:  LW        V0, FFE8 (S0)
  324:  SRA       V1, V1, 4
  328:  SW        V1, FFEC (S0)
  32C:  SLL       V1, V0, 8
  330:  SUBU      V0, V1, V0
  334:  BLTZL     V0, .o33C
  338:  ADDIU     V0, V0, F
        .o33C
  33C:  SRA       V0, V0, 4
  340:  SW        V0, FFF0 (S0)
        .o344
  344:  LW        V0, 0 (S1)
  348:  LWC1      F0, FFD4 (S0)
  34C:  LW        V0, C (V0)
  350:  SWC1      F0, 4 (V0)
  354:  LW        V0, 0 (S1)
  358:  LWC1      F0, FFD8 (S0)
  35C:  LW        V0, C (V0)
  360:  SWC1      F0, 8 (V0)
  364:  LW        V0, 0 (S1)
  368:  LWC1      F0, FFDC (S0)
  36C:  LW        V0, C (V0)
  370:  SWC1      F0, C (V0)
  374:  LW        V0, 0 (S1)
  378:  LWC1      F0, FFF4 (S0)
  37C:  LW        V0, C (V0)
  380:  SWC1      F0, 3C (V0)
  384:  LW        V0, 0 (S1)
  388:  LWC1      F0, FFF8 (S0)
  38C:  LW        V0, C (V0)
  390:  SWC1      F0, 40 (V0)
  394:  LW        V0, 0 (S1)
  398:  LWC1      F0, FFFC (S0)
  39C:  LW        V0, C (V0)
  3A0:  SWC1      F0, 44 (V0)
  3A4:  LW        V0, 0 (S1)
  3A8:  LWC1      F0, FFE0 (S0)
  3AC:  LW        V0, C (V0)
  3B0:  SWC1      F0, 38 (V0)
  3B4:  LW        V0, 0 (S1)
  3B8:  LW        V1, C (V0)
  3BC:  LW        V0, FFEC (S0)
  3C0:  SW        V0, 24 (V1)
  3C4:  LW        V0, 0 (S1)
  3C8:  LW        V1, C (V0)
  3CC:  LW        V0, FFF0 (S0)
  3D0:  SW        V0, 34 (V1)
  3D4:  LW        V0, FFE8 (S0)
  3D8:  ADDIU     V0, V0, FFFF
  3DC:  BGTZ      V0, .o3F8
  3E0:  SW        V0, FFE8 (S0)
  3E4:  LW        A0, 0 (S1)
  3E8:  JAL       8005A450
  3EC:  NOP
  3F0:  ADDIU     V0, R0, 1
  3F4:  SW        V0, 0 (S0)
        .o3F8
  3F8:  ADDIU     S0, S0, 34
  3FC:  ADDIU     S2, S2, 1
  400:  SLTI      V0, S2, 3
  404:  BNE       V0, R0, .o160
  408:  ADDIU     S1, S1, 34
  40C:  SLTI      V0, S3, 3
  410:  BNE       V0, R0, .o424
  414:  DADDU     V0, R0, R0
  418:  JAL       8002AD2C
  41C:  DADDU     A0, S1, R0
  420:  ADDIU     V0, R0, 2
        .o424
  424:  LW        RA, 2C (SP)
  428:  LW        S4, 28 (SP)
  42C:  LW        S3, 24 (SP)
  430:  LW        S2, 20 (SP)
  434:  LW        S1, 1C (SP)
  438:  LW        S0, 18 (SP)
  43C:  LDC1      F26, 48 (SP)
  440:  LDC1      F24, 40 (SP)
  444:  LDC1      F22, 38 (SP)
  448:  LDC1      F20, 30 (SP)
  44C:  JR        RA
  450:  ADDIU     SP, SP, 50
}

#new:Function $Function_GetPlayerChargeAmount
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        S2, 18 (SP)
   10:  LIA       S2, 800DC070
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 97 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 96 (S2)
   3C:  JAL       ~Func:set_variable
   40:  DADDU     A0, S1, R0
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  ADDIU     V0, R0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20
}

#new:Function $Function_GetPlayerPercentHP
{
    0:  ADDIU     SP, SP, FFE8
    4:  LIA       V1, 8010F290
    C:  SW        RA, 10 (SP)
   10:  LB        V0, 2 (V1)
   14:  SLL       A2, V0, 1
   18:  ADDU      A2, A2, V0
   1C:  SLL       A2, A2, 3
   20:  ADDU      A2, A2, V0
   24:  LB        V0, 3 (V1)
   28:  SLL       A2, A2, 2
   2C:  BNE       V0, R0, .o38
   30:  DIV       A2, V0
   34:  BREAK     1C00
        .o38
   38:  ADDIU     AT, R0, FFFF
   3C:  BNE       V0, AT, .o50
   40:  LUI       AT, 8000
   44:  BNE       A2, AT, .o50
   48:  NOP
   4C:  BREAK     1800
        .o50
   50:  MFLO      A2
   54:  LW        V0, C (A0)
   58:  JAL       ~Func:set_variable
   5C:  LW        A1, 0 (V0)
   60:  LW        RA, 10 (SP)
   64:  ADDIU     V0, R0, 2
   68:  JR        RA
   6C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021CA44
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F20, 20 (SP)
   1C:  BEQ       A1, R0, .o130
   20:  LW        S0, C (S2)
   24:  JAL       8002ACE4
   28:  ADDIU     A0, R0, 24
   2C:  DADDU     S1, V0, R0
   30:  SW        S1, 70 (S2)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  DADDU     A0, S2, R0
   44:  SW        V0, 20 (S1)
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  JAL       ~Func:get_float_variable
   54:  DADDU     A0, S2, R0
   58:  SWC1      F0, 0 (S1)
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  JAL       ~Func:get_float_variable
   68:  DADDU     A0, S2, R0
   6C:  SWC1      F0, 4 (S1)
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_float_variable
   7C:  DADDU     A0, S2, R0
   80:  SWC1      F0, 8 (S1)
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  JAL       ~Func:get_variable
   90:  DADDU     A0, S2, R0
   94:  SW        V0, 1C (S1)
   98:  LW        A1, 0 (S0)
   9C:  JAL       ~Func:get_float_variable
   A0:  DADDU     A0, S2, R0
   A4:  LW        A0, 20 (S1)
   A8:  JAL       80130F58
   AC:  SWC1      F0, 10 (S1)
   B0:  DADDU     S0, V0, R0
   B4:  LWC1      F12, 8 (S0)
   B8:  LWC1      F14, 10 (S0)
   BC:  LW        A2, 0 (S1)
   C0:  JAL       80029ED4
   C4:  LW        A3, 8 (S1)
   C8:  LWC1      F12, 8 (S0)
   CC:  LWC1      F14, 10 (S0)
   D0:  LW        A2, 0 (S1)
   D4:  LW        A3, 8 (S1)
   D8:  JAL       80029C80
   DC:  MOV.S     F20, F0
   E0:  LWC1      F4, 10 (S1)
   E4:  LWC1      F6, 1C (S1)
   E8:  CVT.S.W   F6, F6
   EC:  MUL.S     F4, F4, F6
   F0:  NOP
   F4:  LIF       F2, 0.5
   FC:  NOP
  100:  MUL.S     F4, F4, F2
  104:  NOP
  108:  SWC1      F0, C (S1)
  10C:  LWC1      F0, 4 (S1)
  110:  LWC1      F2, C (S0)
  114:  SUB.S     F0, F0, F2
  118:  MOV.S     F2, F6
  11C:  DIV.S     F0, F0, F6
  120:  ADD.S     F4, F4, F0
  124:  DIV.S     F20, F20, F2
  128:  SWC1      F20, 14 (S1)
  12C:  SWC1      F4, 18 (S1)
        .o130
  130:  LW        S1, 70 (S2)
  134:  JAL       80130F58
  138:  LW        A0, 20 (S1)
  13C:  DADDU     S0, V0, R0
  140:  BNE       S0, R0, .o158
  144:  NOP
  148:  JAL       8002AD2C
  14C:  LW        A0, 70 (S2)
  150:  BEQ       R0, R0, .o1FC
  154:  ADDIU     V0, R0, 2
        .o158
  158:  LWC1      F12, C (S1)
  15C:  JAL       8002A2EC
  160:  NOP
  164:  LWC1      F2, 14 (S1)
  168:  MUL.S     F2, F2, F0
  16C:  NOP
  170:  LWC1      F0, 8 (S0)
  174:  ADD.S     F0, F0, F2
  178:  SWC1      F0, 8 (S0)
  17C:  JAL       8002A350
  180:  LWC1      F12, C (S1)
  184:  LWC1      F2, 14 (S1)
  188:  MUL.S     F2, F2, F0
  18C:  NOP
  190:  LWC1      F0, 10 (S0)
  194:  SUB.S     F0, F0, F2
  198:  SWC1      F0, 10 (S0)
  19C:  LWC1      F0, C (S0)
  1A0:  LWC1      F2, 18 (S1)
  1A4:  ADD.S     F0, F0, F2
  1A8:  SWC1      F0, C (S0)
  1AC:  LWC1      F0, 18 (S1)
  1B0:  LWC1      F2, 10 (S1)
  1B4:  LW        V0, 1C (S1)
  1B8:  SUB.S     F0, F0, F2
  1BC:  ADDIU     V0, V0, FFFF
  1C0:  SW        V0, 1C (S1)
  1C4:  BLTZ      V0, .o1D4
  1C8:  SWC1      F0, 18 (S1)
  1CC:  BEQ       R0, R0, .o1FC
  1D0:  DADDU     V0, R0, R0
        .o1D4
  1D4:  LWC1      F0, 0 (S1)
  1D8:  SWC1      F0, 8 (S0)
  1DC:  LWC1      F0, 4 (S1)
  1E0:  SWC1      F0, C (S0)
  1E4:  LWC1      F0, 8 (S1)
  1E8:  SWC1      F0, 10 (S0)
  1EC:  SW        R0, 18 (S1)
  1F0:  JAL       8002AD2C
  1F4:  LW        A0, 70 (S2)
  1F8:  ADDIU     V0, R0, 1
        .o1FC
  1FC:  LW        RA, 1C (SP)
  200:  LW        S2, 18 (SP)
  204:  LW        S1, 14 (SP)
  208:  LW        S0, 10 (SP)
  20C:  LDC1      F20, 20 (SP)
  210:  JR        RA
  214:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021CC5C
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  JAL       80130F58
   2C:  DADDU     A0, V0, R0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  DADDU     S1, V0, R0
   3C:  LWC1      F0, 8 (S1)
   40:  TRUNC.W.S F2, F0
   44:  MFC1      A2, F2
   48:  JAL       ~Func:set_variable
   4C:  DADDU     A0, S2, R0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  LWC1      F0, C (S1)
   5C:  TRUNC.W.S F2, F0
   60:  MFC1      A2, F2
   64:  JAL       ~Func:set_variable
   68:  DADDU     A0, S2, R0
   6C:  LWC1      F0, 10 (S1)
   70:  LW        A1, 0 (S0)
   74:  TRUNC.W.S F2, F0
   78:  MFC1      A2, F2
   7C:  JAL       ~Func:set_variable
   80:  DADDU     A0, S2, R0
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  ADDIU     V0, R0, 2
   98:  JR        RA
   9C:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021CCFC
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S3, 2C (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        S0, 20 (SP)
   10:  DADDU     S0, R0, R0
   14:  SW        S2, 28 (SP)
   18:  LIA       S2, 800DC070
   20:  SW        S4, 30 (SP)
   24:  LIA       S4, 8010F290
   2C:  SW        S5, 34 (SP)
   30:  ADDIU     A0, R0, FFFF
   34:  SW        RA, 38 (SP)
   38:  SW        S1, 24 (SP)
   3C:  LB        V0, AE (S2)
   40:  LW        S1, C (S3)
   44:  BNE       V0, A0, .o54
   48:  DADDU     S5, S4, R0
   4C:  SW        R0, 10 (SP)
   50:  ADDIU     S0, R0, 1
        .o54
   54:  LB        V0, AF (S2)
   58:  BNE       V0, A0, .o70
   5C:  SLL       V0, S0, 2
   60:  ADDU      V1, SP, V0
   64:  ADDIU     V0, R0, 1
   68:  SW        V0, 10 (V1)
   6C:  ADDU      S0, S0, V0
        .o70
   70:  LB        V0, B0 (S2)
   74:  BNE       V0, A0, .o8C
   78:  SLL       V0, S0, 2
   7C:  ADDU      V1, SP, V0
   80:  ADDIU     V0, R0, 2
   84:  SW        V0, 10 (V1)
   88:  ADDIU     S0, S0, 1
        .o8C
   8C:  JAL       800299FC
   90:  ADDIU     A0, R0, 2
   94:  ADDIU     A0, S0, FFFF
   98:  JAL       800299FC
   9C:  ADDIU     S0, V0, 2
   A0:  SLL       V0, V0, 2
   A4:  ADDU      V0, SP, V0
   A8:  LW        V1, 10 (V0)
   AC:  ADDIU     V0, R0, 1
   B0:  BEQ       V1, V0, .o124
   B4:  SLTI      V0, V1, 2
   B8:  BEQ       V0, R0, .oD0
   BC:  ADDIU     V0, R0, 2
   C0:  BEQL      V1, R0, .oE0
   C4:  SB        S0, AE (S2)
   C8:  BEQ       R0, R0, .o194
   CC:  NOP
        .oD0
   D0:  BEQL      V1, V0, .o16C
   D4:  SB        S0, B0 (S2)
   D8:  BEQ       R0, R0, .o194
   DC:  NOP
        .oE0
   E0:  LW        A1, 0 (S1)
   E4:  LB        V0, 1 (S4)
   E8:  ADDIU     S1, S1, 4
   EC:  SLL       V0, V0, 2
   F0:  LTW       A2, V0 ($IntTable_80230B28)
   FC:  JAL       ~Func:set_variable
  100:  DADDU     A0, S3, R0
  104:  LB        V0, 1 (S4)
  108:  LW        A1, 0 (S1)
  10C:  SLL       V0, V0, 2
  110:  LTW       A2, V0 ($IntTable_80230B34)
  11C:  BEQ       R0, R0, .o18C
  120:  DADDU     A0, S3, R0
        .o124
  124:  SB        S0, AF (S2)
  128:  LW        A1, 0 (S1)
  12C:  LB        V0, 0 (S5)
  130:  ADDIU     S1, S1, 4
  134:  SLL       V0, V0, 2
  138:  LTW       A2, V0 ($IntTable_80230B40)
  144:  JAL       ~Func:set_variable
  148:  DADDU     A0, S3, R0
  14C:  LB        V0, 0 (S5)
  150:  LW        A1, 0 (S1)
  154:  SLL       V0, V0, 2
  158:  LTW       A2, V0 ($IntTable_80230B4C)
  164:  BEQ       R0, R0, .o18C
  168:  DADDU     A0, S3, R0
        .o16C
  16C:  LW        A1, 0 (S1)
  170:  ADDIU     S1, S1, 4
  174:  DADDU     A0, S3, R0
  178:  JAL       ~Func:set_variable
  17C:  ADDIU     A2, R0, 16C
  180:  DADDU     A0, S3, R0
  184:  LW        A1, 0 (S1)
  188:  ADDIU     A2, R0, 4F
        .o18C
  18C:  JAL       ~Func:set_variable
  190:  NOP
        .o194
  194:  LW        RA, 38 (SP)
  198:  LW        S5, 34 (SP)
  19C:  LW        S4, 30 (SP)
  1A0:  LW        S3, 2C (SP)
  1A4:  LW        S2, 28 (SP)
  1A8:  LW        S1, 24 (SP)
  1AC:  LW        S0, 20 (SP)
  1B0:  ADDIU     V0, R0, 2
  1B4:  JR        RA
  1B8:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021CEB8
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        A0, 148 (S2)
   1C:  JAL       ~Func:get_actor
   20:  LW        S0, C (S2)
   24:  LIA       S1, 800DC070
   2C:  LB        V1, 210 (V0)
   30:  ADDIU     V0, R0, A
   34:  BEQ       V1, V0, .o6C
   38:  ADDIU     V1, R0, FFFF
   3C:  LB        V0, AE (S1)
   40:  BEQ       V0, V1, .o60
   44:  DADDU     A0, S2, R0
   48:  LB        V0, AF (S1)
   4C:  BEQ       V0, V1, .o60
   50:  NOP
   54:  LB        V0, B0 (S1)
   58:  BNE       V0, V1, .o70
   5C:  NOP
        .o60
   60:  LW        A1, 0 (S0)
   64:  BEQ       R0, R0, .o78
   68:  DADDU     A2, R0, R0
        .o6C
   6C:  DADDU     A0, S2, R0
        .o70
   70:  LW        A1, 0 (S0)
   74:  ADDIU     A2, R0, FFFF
        .o78
   78:  JAL       ~Func:set_variable
   7C:  NOP
   80:  ADDIU     V0, R0, 2
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  JR        RA
   98:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021CF54
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LIO       AT, 3D23D70A
   20:  MTC1      AT, F0
   24:  NOP
   28:  SWC1      F0, 38 (V1)
   2C:  SWC1      F0, 30 (V1)
   30:  LW        V1, C (V0)
   34:  LIF       F0, 1.875
   3C:  NOP
   40:  SWC1      F0, 34 (V1)
   44:  LW        V1, C (V0)
   48:  LIO       AT, 3D4CCCCD
   50:  MTC1      AT, F0
   54:  NOP
   58:  SWC1      F0, 3C (V1)
   5C:  LW        RA, 10 (SP)
   60:  ADDIU     V0, R0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021CFC0
{
    0:  ADDIU     SP, SP, FF88
    4:  SW        S5, 3C (SP)
    8:  DADDU     S5, A0, R0
    C:  SW        S1, 2C (SP)
   10:  SW        RA, 4C (SP)
   14:  SW        S8, 48 (SP)
   18:  SW        S7, 44 (SP)
   1C:  SW        S6, 40 (SP)
   20:  SW        S4, 38 (SP)
   24:  SW        S3, 34 (SP)
   28:  SW        S2, 30 (SP)
   2C:  SW        S0, 28 (SP)
   30:  SDC1      F28, 70 (SP)
   34:  SDC1      F26, 68 (SP)
   38:  SDC1      F24, 60 (SP)
   3C:  SDC1      F22, 58 (SP)
   40:  SDC1      F20, 50 (SP)
   44:  LW        A0, 148 (S5)
   48:  LW        S3, C (S5)
   4C:  JAL       ~Func:get_actor
   50:  DADDU     S1, A1, R0
   54:  DADDU     S0, V0, R0
   58:  BEQ       S0, R0, .o28C
   5C:  ADDIU     V0, R0, 2
   60:  BEQ       S1, R0, .o15C
   64:  ADDIU     S4, S0, C
   68:  JAL       8002ACE4
   6C:  ADDIU     A0, R0, 60
   70:  DADDU     S1, V0, R0
   74:  SW        S1, 78 (S0)
   78:  LW        A1, 0 (S3)
   7C:  ADDIU     S3, S3, 4
   80:  DADDU     A0, S5, R0
   84:  DADDU     S8, R0, R0
   88:  DADDU     S2, S8, R0
   8C:  ADDIU     S7, R0, 3C
   90:  ADDIU     S6, R0, 2D
   94:  DADDU     S4, S8, R0
   98:  LIF       F28, 1.0
   A0:  LIF       F26, 10.0
   A8:  LIF       F24, 15.0
   B0:  JAL       ~Func:get_variable
   B4:  ADDIU     S0, S1, 18
   B8:  LW        A1, 0 (S3)
   BC:  MTC1      V0, F22
   C0:  NOP
   C4:  CVT.S.W   F22, F22
   C8:  JAL       ~Func:get_variable
   CC:  DADDU     A0, S5, R0
   D0:  MTC1      V0, F20
   D4:  NOP
   D8:  CVT.S.W   F20, F20
        .oDC
   DC:  ADDIU     A0, R0, 2
   E0:  MFC1      A1, F22
   E4:  LUI       A2, 4348
   E8:  MFC1      A3, F20
   EC:  ADDIU     S2, S2, 1
   F0:  SWC1      F22, 10 (SP)
   F4:  SW        R0, 14 (SP)
   F8:  SWC1      F20, 18 (SP)
   FC:  SWC1      F28, 1C (SP)
  100:  JAL       80071BD0
  104:  SW        S7, 20 (SP)
  108:  MTC1      S8, F0
  10C:  NOP
  110:  CVT.S.W   F0, F0
  114:  SW        V0, 0 (S1)
  118:  SWC1      F0, FFF0 (S0)
  11C:  MTC1      S4, F0
  120:  NOP
  124:  CVT.S.W   F0, F0
  128:  SW        S6, 4 (S0)
  12C:  SWC1      F22, FFEC (S0)
  130:  SWC1      F20, FFF4 (S0)
  134:  SWC1      F26, FFF8 (S0)
  138:  SWC1      F0, FFFC (S0)
  13C:  SWC1      F24, 0 (S0)
  140:  ADDIU     S0, S0, 20
  144:  ADDIU     S1, S1, 20
  148:  SLTI      V0, S2, 3
  14C:  BNE       V0, R0, .oDC
  150:  ADDIU     S4, S4, 78
  154:  BEQ       R0, R0, .o28C
  158:  DADDU     V0, R0, R0
        .o15C
  15C:  DADDU     S2, R0, R0
  160:  LW        S1, 78 (S0)
  164:  LIF       F23, 1.9375
  16C:  MTC1      R0, F22
  170:  ADDIU     S0, S1, 1C
        .o174
  174:  JAL       8002A350
  178:  LWC1      F12, FFF8 (S0)
  17C:  LWC1      F2, FFF4 (S0)
  180:  MUL.S     F0, F0, F2
  184:  NOP
  188:  LWC1      F20, FFE8 (S0)
  18C:  LWC1      F12, FFF8 (S0)
  190:  JAL       8002A2EC
  194:  ADD.S     F20, F20, F0
  198:  LW        V0, 0 (S1)
  19C:  LWC1      F4, FFF4 (S0)
  1A0:  LWC1      F2, FFF0 (S0)
  1A4:  LW        V0, C (V0)
  1A8:  SWC1      F20, 4 (V0)
  1AC:  LW        V0, 0 (S1)
  1B0:  LW        V0, C (V0)
  1B4:  SWC1      F20, 10 (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  MUL.S     F0, F0, F4
  1C0:  NOP
  1C4:  LW        V0, C (V0)
  1C8:  SWC1      F20, 1C (V0)
  1CC:  LW        V0, 0 (S1)
  1D0:  ADD.S     F2, F2, F0
  1D4:  LW        V0, C (V0)
  1D8:  SWC1      F2, C (V0)
  1DC:  LW        V0, 0 (S1)
  1E0:  LW        V0, C (V0)
  1E4:  SWC1      F2, 18 (V0)
  1E8:  LW        V0, 0 (S1)
  1EC:  LW        V0, C (V0)
  1F0:  SWC1      F2, 24 (V0)
  1F4:  LW        V0, 0 (S0)
  1F8:  SLTI      V0, V0, B
  1FC:  BNE       V0, R0, .o218
  200:  NOP
  204:  LWC1      F0, FFF4 (S0)
  208:  CVT.D.S   F0, F0
  20C:  ADD.D     F0, F0, F22
  210:  CVT.S.D   F0, F0
  214:  SWC1      F0, FFF4 (S0)
        .o218
  218:  LWC1      F0, FFF8 (S0)
  21C:  LWC1      F2, FFFC (S0)
  220:  LW        V0, 0 (S0)
  224:  ADD.S     F0, F0, F2
  228:  SLTI      V0, V0, 1F
  22C:  BNE       V0, R0, .o250
  230:  SWC1      F0, FFF8 (S0)
  234:  MOV.S     F0, F2
  238:  LAD       F2, $ConstDouble_80234870
  240:  CVT.D.S   F0, F0
  244:  SUB.D     F0, F0, F2
  248:  CVT.S.D   F0, F0
  24C:  SWC1      F0, FFFC (S0)
        .o250
  250:  ADDIU     S1, S1, 20
  254:  LW        V0, 0 (S0)
  258:  ADDIU     S2, S2, 1
  25C:  ADDIU     V0, V0, FFFF
  260:  SW        V0, 0 (S0)
  264:  SLTI      V0, S2, 3
  268:  BNE       V0, R0, .o174
  26C:  ADDIU     S0, S0, 20
  270:  LW        S1, 6C (S4)
  274:  LW        V0, 1C (S1)
  278:  BGTZ      V0, .o28C
  27C:  DADDU     V0, R0, R0
  280:  JAL       8002AD2C
  284:  DADDU     A0, S1, R0
  288:  ADDIU     V0, R0, 2
        .o28C
  28C:  LW        RA, 4C (SP)
  290:  LW        S8, 48 (SP)
  294:  LW        S7, 44 (SP)
  298:  LW        S6, 40 (SP)
  29C:  LW        S5, 3C (SP)
  2A0:  LW        S4, 38 (SP)
  2A4:  LW        S3, 34 (SP)
  2A8:  LW        S2, 30 (SP)
  2AC:  LW        S1, 2C (SP)
  2B0:  LW        S0, 28 (SP)
  2B4:  LDC1      F28, 70 (SP)
  2B8:  LDC1      F26, 68 (SP)
  2BC:  LDC1      F24, 60 (SP)
  2C0:  LDC1      F22, 58 (SP)
  2C4:  LDC1      F20, 50 (SP)
  2C8:  JR        RA
  2CC:  ADDIU     SP, SP, 78
}

#new:Unknown $???_80234810
{
0000005A 00000087 000000E1 0000010E 0000013B 00000195 
}

#new:ConstDouble $ConstDouble_80234828
{
14.400000d
}

#new:ConstDouble $ConstDouble_80234830
{
0.400000d
}

#new:ConstDouble $ConstDouble_80234838
{
90.000000d
}

#new:ConstDouble $ConstDouble_80234840
{
3.600000d
}

#new:ConstDouble $ConstDouble_80234848
{
2.400000d
}

#new:ConstDouble $ConstDouble_80234850
{
1.800000d
}

#new:ConstDouble $ConstDouble_80234858
{
1.440000d
}

#new:ConstDouble $ConstDouble_80234860
{
0.600000d
}

#new:ConstDouble $ConstDouble_80234868
{
0.960000d
}

#new:ConstDouble $ConstDouble_80234870
{
0.300000d
}
