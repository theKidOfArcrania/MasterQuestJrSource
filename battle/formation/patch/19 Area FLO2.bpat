
#import Lakilulu.bpat

@ $FormationTable
{
$SJIS_80235D9C 00000001 $Formation_00 $Stage_802353B0 00000000 
$SJIS_80235D88 00000001 $Formation_01 $Stage_80232E6C 00000000 
$SJIS_80235D70 00000002 $Formation_02 $Stage_80232E6C 00000000 
$SJIS_80235D58 00000003 $Formation_03 $Stage_80232E6C 00000000 
$SJIS_80235D40 00000004 $Formation_04 $Stage_80232E6C 00000000 
$SJIS_80235D30 00000001 $Formation_05 $Stage_80232E6C 00000000 
$SJIS_80235D30 00000001 $Formation_06 $Stage_80232E6C 00000000 %Lakilulu fight
00000000 00000000 00000000 00000000 00000000 % unused
}

#new:Formation $Formation_06
{
$Lakilulu 00000006 0000000A 00000000 00000000 00000000 00000000 
}

% ====================================================
% This is one of two battle sections that makes numerous
% references to the MapConfigTable (default = 800934F0).
% Since custom maps will cause this to be moved, these battles
% may not load unless all the pointers are updated!
% ====================================================

@ $Function_80218DD0
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_80218E90
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_80218F50
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_80219010
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_802190D0
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_80219190
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_80219250
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_80219630
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_802196F0
{
[18]  LIA	S3, $Global_MapConfigTable
}

@ $Function_802197B0
{
[18]  LIA	S3, $Global_MapConfigTable
}

% ====================================================
% Monty Mole
% + Thrown rocks move twice as fast
% + Rocks are visibly larger and do more damage (3 -> 5)
% ====================================================

@ $MontyMole
{
% stats
[Index]        30b 
[Level]        19`b 
[MaxHP]        15`b 
}

@ $DefenseTable_80230650 % Removed throw weakness
{
.Element:Normal 00000000
.Element:Hammer 00000000
.Element:End
}

@ $StatusTable_8023066C % Very status resistant
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      40`
.Status:Poison     20`
.Status:Frozen      0`
.Status:Dizzy      20`
.Status:Fear    0`
.Status:Static     10`
.Status:Paralyze   20`
.Status:Shrink     25`
.Status:Stop       40`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   -2`
.Status:ShrinkTurnMod     -2`
.Status:StopTurnMod       0`
.Status:End
}

@ $Script_TakeTurn_802311BC
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( FFFFFF81 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetBattlePhase ( *Var[0] )
	If       *Var[0] ==  00000001 
		Call     UseBattleCamPreset 	( 00000002 )
		Call     MoveBattleCamOver 	( 00000001 )
	EndIf
	ChildThread
		Call     PlaySoundAtActor 	( .Actor:Self 00000322 )
		Wait     00000014 
		Call     PlaySoundAtActor 	( .Actor:Self 00000321 )
	EndChildThread
	Call     SetAnimation 	( .Actor:Self 00000001 002F0104 )
	Wait     00000015 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub      *Var[2] 2 
	Add      *Var[1] 18` 
	Add      *Var[0] 12` % offset the larger sprite
	Call     SetPartPos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .False )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If       *Var[0]  &  00080000 
		Call     SetPartScale ( .Actor:Self 00000003 *Fixed[0.6] *Fixed[0.6] *Fixed[0.6] ) % 1.5x larger
	Else
		Call     SetPartScale ( .Actor:Self 00000003 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] ) % 1.5x larger
	EndIf
	Wait     00000011 % moved to after the sprite is rescaled
	Call     PlaySoundAtPart 	( .Actor:Self 00000003 000003E8 )
	Call     SetPartSounds ( FFFFFF81 00000003 00000001 00000000 00000000 )
	Call     EnemyTestTarget ( FFFFFF81 *Var[0] 10000000 00000000 00000003 00000020 )
	Switch   *Var[0] 
		CaseOR   ==  00000006 
		CaseOR   ==  00000005 
			Set      *Var[A] *Var[0] 
			Call     SetTargetActor ( FFFFFF81 00000000 )
			Call     SetGoalToTarget 	( .Actor:Self )
			Call     GetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
			Sub      *Var[0] 00000064 
			Set      *Var[1] FFFFFFFB 
			Call     SetPartMoveSpeed ( .Actor:Self 00000003 *Fixed[18.0] ) % 1.5x faster
			Call     SetPartJumpGravity 	( .Actor:Self 00000003 *Fixed[0.10058594] )
			Call     SetAnimation 	( .Actor:Self 00000003 002F010F )
			Call     FlyPartTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000001E 00000000 )
			Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
			If       *Var[A] ==  00000005 
				Call     EnemyTestTarget ( FFFFFF81 *Var[0] 80000000 00000000 00000000 00000000 )
			EndIf
			Call     YieldTurn ( )
			Call     EnableIdleScript 	( .Actor:Self 00000001 )
			Call     UseIdleAnimation 	( .Actor:Self .True )
			Return
		EndCaseGroup
	EndSwitch
	Call     SetTargetActor ( FFFFFF81 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetPartMoveSpeed ( .Actor:Self 00000003 *Fixed[18.0] ) % 1.5x faster
	Call     SetPartJumpGravity 	( .Actor:Self 00000003 *Fixed[0.10058594] )
	Call     SetAnimation 	( .Actor:Self 00000003 002F010F )
	Call     FlyPartTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000014 00000000 )
	Wait     00000002 
	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 ) % more damage
	Switch   *Var[0] 
		CaseOR   ==  00000000 
		CaseOR   ==  00000002 
			Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
			Sub      *Var[0] 00000037 
			Set      *Var[1] 00000000 
			Call     SetPartMoveSpeed ( .Actor:Self 00000003 *Fixed[6.0] )
			Call     SetPartJumpGravity 	( .Actor:Self 00000003 *Fixed[0.10058594] )
			Call     FlyPartTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000019 00000000 )
			Call     SetPartMoveSpeed ( .Actor:Self 00000003 *Fixed[4.0] )
			Sub      *Var[0] 00000014 
			Call     FlyPartTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000015 00000000 )
			Call     SetPartFlagBits 	( .Actor:Self 00000003 00000001 .True )
		EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

%=========================
% SPIKE
%=========================

@ $Spike
{
% stats
[Index]        35b 
[Level]        40`b 
[MaxHP]        50`b
[PowerBounce]  3`b 
}

@ $StatusTable_80231874
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear    0`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     50`
.Status:Stop       50`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -2`
.Status:ShrinkTurnMod    -2`
.Status:StopTurnMod      -2`
.Status:End
}

@ $Script_80231FBC
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
   8C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   A8:  Call     SetGoalPos 	( .Actor:Self 00000014 0000001E *Var[2] )
   C4:  Call     FlyToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
   E0:  Call     SetAnimation 	( .Actor:Self 00000001 00100001 )
   F8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  114:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  128:  If  *Var[A]  &  00080000 
  138:  	Add  *Var[0]  FFFFFFFF 
  148:  	Add  *Var[1]  00000004 
  158:  	Add  *Var[2]  00000002 
  168:  	Call     SetPartScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  188:  Else
  190:  	Add  *Var[0]  FFFFFFFD 
  1A0:  	Add  *Var[1]  0000000A 
  1B0:  	Add  *Var[2]  00000005 
  1C0:  	Call     SetPartScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1E0:  EndIf
  1E8:  Call     SetPartPos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  208:  Wait     00000001 
  214:  Call     SetPartFlagBits 	( .Actor:Self 00000002 00000001 .False )
  230:  Call     SetAnimation 	( .Actor:Self 00000002 00100014 )
  248:  Call     SetAnimation 	( .Actor:Self 00000001 0010000F )
  260:  Loop     00000004 
  26C:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  280:  	If  *Var[A]  &  00080000 
  290:  		AddF  *Var[1]  *Fixed[2.4003906] 
  2A0:  	Else
  2A8:  		Add  *Var[1]  00000006 
  2B8:  	EndIf
  2C0:  	Call     SetPartPos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  2E0:  	Wait     00000001 
  2EC:  EndLoop
  2F4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  310:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  324:  If  *Var[A]  &  00080000 
  334:  	Add  *Var[0]  FFFFFFFD 
  344:  	Add  *Var[1]  00000010 
  354:  	Add  *Var[2]  00000002 
  364:  	SetF  *Var[3]  *Fixed[0.40039062] 
  374:  Else
  37C:  	Add  *Var[0]  FFFFFFF8 
  38C:  	Add  *Var[1]  00000028 
  39C:  	Add  *Var[2]  00000005 
  3AC:  	SetF  *Var[3]  *Fixed[1.0] 
  3BC:  EndIf
  3C4:  Call     PlayEffect  	( ~FX:EnergyIn:ShortStreaks *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  408:  Call     PlaySoundAtActor 	( .Actor:Self 000002C5 )
  41C:  Thread
  424:  	Loop     0000000F 
  430:  		Call     SetActorDispOffset ( FFFFFF81 00000001 00000000 00000000 )
  44C:  		Call     SetPartDispOffset 	( .Actor:Self 00000002 00000001 00000000 00000000 )
  46C:  		Wait     00000001 
  478:  		Call     SetActorDispOffset ( FFFFFF81 FFFFFFFF 00000000 00000000 )
  494:  		Call     SetPartDispOffset 	( .Actor:Self 00000002 FFFFFFFF 00000000 00000000 )
  4B4:  		Wait     00000001 
  4C0:  	EndLoop
  4C8:  	Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  4E4:  	Call     SetPartDispOffset 	( .Actor:Self 00000002 00000000 00000000 00000000 )
  504:  EndThread
  50C:  Call     SetGoalToTarget 	( .Actor:Self )
  51C:  Wait     0000000A 
  528:  Call     SetAnimation 	( .Actor:Self 00000001 00100010 )
  540:  Wait     0000000A 
  54C:  Call     SetAnimation 	( .Actor:Self 00000001 00100011 )
  564:  Wait     0000000A 
  570:  Call     SetAnimation 	( .Actor:Self 00000001 00100012 )
  588:  Wait     00000003 
  594:  Call     PlaySoundAtPart 	( .Actor:Self 00000002 000002C6 )
  5AC:  Call     SetPartSounds ( FFFFFF81 00000002 00000002 00000000 00000000 )
  5CC:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  5F0:  Switch  *Var[0] 
  5FC:  	CaseOR  ==  00000006 
  608:  	CaseOR  ==  00000005 
  614:  		Set  *Var[A]  *Var[0] 
  624:  		Call     SetAnimation 	( .Actor:Self 00000002 00100015 )
  63C:  		Call     SetPartJumpGravity 	( .Actor:Self 00000002 *Fixed[1.5] )
  654:  		Call     SetGoalToTarget 	( .Actor:Self )
  664:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  680:  		Call     RandInt     	( 00000064 *Var[3] )
  694:  		Sub  *Var[3]  00000032 
  6A4:  		Add  *Var[0]  *Var[3] 
  6B4:  		Call     JumpPartTo 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000014 .True )
  6DC:  		Call     ResetAllActorSounds ( FFFFFF81 )
  6EC:  		Thread
  6F4:  			Add  *Var[0]  FFFFFFCE 
  704:  			Call     JumpPartTo 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000F .True )
  72C:  			Call     SetPartFlagBits 	( .Actor:Self 00000002 00000001 .True )
  748:  		EndThread
  750:  		If  *Var[A]  ==  00000005 
  760:  			Call     EnemyTestTarget ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  784:  		EndIf
  78C:  		Wait     0000000F 
  798:  		Call     YieldTurn ( )
  7A4:  		Call     UseBattleCamPreset 	( 00000002 )
  7B4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  7D0:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  7E4:  		ExecWait $Script_802319EC
  7F0:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  804:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  81C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  830:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  844:  		Return
  84C:  	EndCaseGroup
  854:  EndSwitch
  85C:  Call     SetAnimation 	( .Actor:Self 00000002 00100015 )
  874:  Call     SetPartJumpGravity 	( .Actor:Self 00000002 *Fixed[1.5] )
  88C:  Call     SetGoalToTarget 	( .Actor:Self )
  89C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8B8:  Call     JumpPartTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  8E0:  Call     ResetAllActorSounds ( FFFFFF81 )
  8F0:  Thread
  8F8:  	Add  *Var[0]  FFFFFFCE 
  908:  	Call     JumpPartTo 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000F .True )
  930:  	Call     SetPartFlagBits 	( .Actor:Self 00000002 00000001 .True )
  94C:  EndThread
  954:  Wait     00000002
			Call	RandInt	( 00000002 *Var[E] )
			Add  *Var[E]  00000003   
  960:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 *Var[E] 00000020 )
  988:  Switch  *Var[0] 
  994:  	CaseOR  ==  00000000 
  9A0:  	CaseOR  ==  00000002 
  9AC:  		Call     UseBattleCamPreset 	( 00000002 )
  9BC:  		Wait     0000000F 
  9C8:  		Call     YieldTurn ( )
  9D4:  		ExecWait $Script_802319EC 
  9E0:  	EndCaseGroup
  9E8:  EndSwitch
  9F0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A04:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A18:  Return
  A20:  End
}
  
% WARNING: this is not actually used in the game
%
% ====================================================
% Huff N Puff
% + Increased max HP (60 -> 120)
% + Button mashing for breath attack is harder
% + Tuff Puff swarm attack is faster and stronger
% + Added shrink proc to multiple attacks
% + Overall damage buff, including a nuke for the thunder attack
% ====================================================

% Seems like minor changes all around, but playtesting found this boss is really
% hard now without resorting to cheap tricks.

% The above is what clover said about this fight. I intend to remove those cheap tricks. Weep, ye mortals.
% This fight is about to be some cheese. Like a piping bowl of queso, smothered in ragequit

@ $HuffNPuff
{
[MaxHP]	60`b
[PowerBounce]  3`b 
}

@ $Script_TakeTurn_8021D2B8
{
     0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   18:  Switch   *Var[0] 
   24:     CaseOR   ==  00000004 
   30:     CaseOR   ==  00000008 
   3C:     CaseOR   ==  0000000B 
   48:     EndCaseGroup
		   Default
			Call     GetActorVar 	( .Actor:Self 00000009 *Var[9] )
			If *Var[9] == 0`
   58:  		Call     GetActorHP  	( .Actor:Self *Var[0] )
   6C:  		If  *Var[0]  <=  60`
   7C:  			Call     SetActorVar 	( .Actor:Self 00000001 0000000C )
   94:  		EndIf
			EndIf
   9C:  EndSwitch
   A4:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   BC:  Switch   *Var[0] 
   C8:     Case     ==  00000003 
   D4:        Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
   EC:        If       *Var[0] !&  00000020 
   FC:           Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  114:           ConstOR  *Var[0] 00000020 
  124:           Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  13C:           ExecWait $Script_ChargeThunder
  148:        EndIf
  150:  EndSwitch
  158:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  170:  If       *Var[0] !=  00000000 
  180:     Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  198:     If       *Var[0] !&  00000010 
  1A8:        Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  1C0:        ConstOR  *Var[0] 00000010 
  1D0:        Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  1E8:        ExecWait $Script_PermissionToAttackDialog 
  1F4:     EndIf
  1FC:     ExecWait $Script_TuffPuffSwarm 
  208:  EndIf
  210:  Call     GetPlayerHP 	( *Var[0] )
  220:  If       *Var[0] ==  00000000 
  230:     Return
  238:  EndIf
  240:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  258:  Switch   *Var[0] 
  264:     Case     ==  0000000C 
  270:        Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  288:        If       *Var[0] !&  00000080 
  298:           Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  2B0:           ConstOR  *Var[0] 00000080 
  2C0:           Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  2D8:           ExecWait $Script_LowHealthDialog 
  2E4:        EndIf
  2EC:  EndSwitch
		Label 00000001
  2F4:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  30C:  Switch   *Var[0] 
  318:     Case     ==  00000000 
  324:        ExecWait $Script_HealOrSlam 
  330:        Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  348:     Case     ==  00000001 
  354:        ExecWait $Script_HurricaneBreath 
  360:        Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  378:     Case     ==  00000002 
  384:        ExecWait $Script_HealOrSlam 
  390:        Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
  3A8:     Case     ==  00000003 
  3B4:        ExecWait $Script_ChargeThunder 
  3C0:        Call     SetActorVar 	( .Actor:Self 00000001 00000004 )
  			  Call     GetActorHP  	( .Actor:Self *Var[9] )
			     If *Var[9] < 21`
					Goto 00000001
				 EndIf
  3D8:     Case     ==  00000004 
  3E4:        ExecWait $Script_Thunderstorm 
  3F0:        Call     SetActorVar 	( .Actor:Self 00000001 00000005 )
  408:     Case     ==  00000005 
  414:        ExecWait $Script_HealOrSlam 
  420:        Call     SetActorVar 	( .Actor:Self 00000001 00000006 )
  438:     Case     ==  00000006 
  444:        ExecWait $Script_HurricaneBreath 
  450:        Call     SetActorVar 	( .Actor:Self 00000001 00000007 )
  468:     Case     ==  00000007 
  474:        ExecWait $Script_ChargeLargeThunder 
  480:        Call     SetActorVar 	( .Actor:Self 00000001 00000008 )
  			  Call     GetActorHP  	( .Actor:Self *Var[9] )
			     If *Var[9] < 21`
					Goto 00000001
				 EndIf
  498:     Case     ==  00000008 
  4A4:        ExecWait $Script_LargeThunderstorm 
  4B0:        Call     SetActorVar 	( .Actor:Self 00000001 00000009 )
  4C8:     Case     ==  00000009 
  4D4:        ExecWait $Script_HealOrSlam 
  4E0:        Call     SetActorVar 	( .Actor:Self 00000001 0000000A )
  4F8:     Case     ==  0000000A 
  504:        ExecWait $Script_ChargeThunder 
  510:        Call     SetActorVar 	( .Actor:Self 00000001 0000000B )
  			  Call     GetActorHP  	( .Actor:Self *Var[9] )
			     If *Var[9] < 21`
					Goto 00000001
				 EndIf
  528:     Case     ==  0000000B 
  534:        ExecWait $Script_Thunderstorm 
  540:        Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  558:     Case     ==  0000000C 
  564:        ExecWait $Script_GroupBodySlam
			  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
			  Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  570:  EndSwitch
  Call GetActorVar 	( .Actor:Self 00000008 *Var[A] )
		If *Var[A] == 1`
			Call     ActorSpeak  	( $NoLSforyou .Actor:Self 00000001 007C002C 007C0001 )
			Call SetActorVar 	( .Actor:Self 00000008 00000000 )
		EndIf
  578:  Return
  580:  End
}
  
#string $NoLSforyou
{
[Style Right]
Haha! How do you like that?[Pause 5][BR]
Those pockets feeling lighter?[BR]
[Wait][Next]
[BR]
You thought I didn't notice[Pause 21][BR]
those Life Shrooms? Well,[BR]
my minions just helped[BR]
themselves.[BR]
[Wait][Next]
[BR]
I'm sure you didn't need[BR]
them anyways.[BR]
[Wait][End]
}

@ $Script_HealOrSlam
{
    0:  UseArray $TuffPuffIDs 
    C:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[9] )
   24:  If  *Var[9]  ==  00000000 
   34:  	ExecWait $Script_BodySlam 
   40:  	Return
   48:  EndIf
   50:  Set  *Var[A]  00000000 
   60:  If  *Var[9]  &  00000001 
   70:  	Call     GetActorVar 	( *Array[0] 00000005 *Var[B] )
   88:  	Add  *Var[A]  *Var[B] 
   98:  EndIf
   A0:  If  *Var[9]  &  00000002 
   B0:  	Call     GetActorVar 	( *Array[1] 00000005 *Var[B] )
   C8:  	Add  *Var[A]  *Var[B] 
   D8:  EndIf
   E0:  If  *Var[9]  &  00000004 
   F0:  	Call     GetActorVar 	( *Array[2] 00000005 *Var[B] )
  108:  	Add  *Var[A]  *Var[B] 
  118:  EndIf
  120:  If  *Var[9]  &  00000008 
  130:  	Call     GetActorVar 	( *Array[3] 00000005 *Var[B] )
  148:  	Add  *Var[A]  *Var[B] 
  158:  EndIf
  160:  If  *Var[9]  &  00000010 
  170:  	Call     GetActorVar 	( *Array[4] 00000005 *Var[B] )
  188:  	Add  *Var[A]  *Var[B] 
  198:  EndIf
  1A0:  If  *Var[9]  &  00000020 
  1B0:  	Call     GetActorVar 	( *Array[5] 00000005 *Var[B] )
  1C8:  	Add  *Var[A]  *Var[B] 
  1D8:  EndIf
  1E0:  If  *Var[9]  &  00000040 
  1F0:  	Call     GetActorVar 	( *Array[6] 00000005 *Var[B] )
  208:  	Add  *Var[A]  *Var[B] 
  218:  EndIf
  220:  If  *Var[9]  &  00000080 
  230:  	Call     GetActorVar 	( *Array[7] 00000005 *Var[B] )
  248:  	Add  *Var[A]  *Var[B] 
  258:  EndIf
  260:  If  *Var[9]  &  00000100 
  270:  	Call     GetActorVar 	( *Array[8] 00000005 *Var[B] )
  288:  	Add  *Var[A]  *Var[B] 
  298:  EndIf
  2A0:  If  *Var[9]  &  00000200 
  2B0:  	Call     GetActorVar 	( *Array[9] 00000005 *Var[B] )
  2C8:  	Add  *Var[A]  *Var[B] 
  2D8:  EndIf
  2E0:  Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  2F8:  If  *Var[0]  &  00000001 
  308:  	If  *Var[A]  <=  00000002 
  318:  		Call     RandInt     	( 00000064 *Var[B] )
  32C:  		If  *Var[B]  <  00000032 
  33C:  			ExecWait $Script_BodySlam 
  348:  			Return
  350:  		EndIf
  358:  	EndIf
  360:  EndIf
  368:  Call     UseIdleAnimation 	( .Actor:Self .False )
  37C:  Call     PlaySoundAtActor 	( .Actor:Self 000003B0 )
  390:  Call     SetAnimation 	( .Actor:Self 00000001 007C001A )
  3A8:  Call     SetAnimation 	( .Actor:Self 00000002 007C001B )
  3C0:  Call     SetAnimation 	( .Actor:Self 00000003 007C001C )
  3D8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F4:  Add  *Var[0]  FFFFFFF3 
  404:  Add  *Var[1]  00000000 
  414:  Add  *Var[2]  00000000 
  424:  Call     $Function_80218774 ( 00000000 *Var[0] *Var[1] *Var[2] *Fixed[180.0] *Fixed[-1.0] *Fixed[1.2001953] 00000000 *Var[8] )
  454:  Call     $Function_80218000 ( 00000050 000000DC )
  468:  Thread
  470:  	Call     ShakeCam    	( 00000001 00000000 0000006E *Fixed[0.30078125] )
  48C:  EndThread
  494:  Wait     00000014 
  4A0:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
  4B4:  Set  *Var[1]  00000000 
  4C4:  If  *Var[9]  &  00000010 
  4D4:  	Set  *Var[0]  *Array[4] 
  4E4:  	Exec     $Script_8021E364 *Var[7] 
  4F4:  	Add  *Var[1]  00000001 
  504:  	Wait     00000005 
  510:  EndIf
  518:  If  *Var[9]  &  00000200 
  528:  	Set  *Var[0]  *Array[9] 
  538:  	Exec     $Script_8021E364 *Var[7] 
  548:  	Add  *Var[1]  00000001 
  558:  	Wait     00000005 
  564:  EndIf
  56C:  If  *Var[9]  &  00000008 
  57C:  	Set  *Var[0]  *Array[3] 
  58C:  	Exec     $Script_8021E364 *Var[7] 
  59C:  	Add  *Var[1]  00000001 
  5AC:  	Wait     00000005 
  5B8:  EndIf
  5C0:  If  *Var[9]  &  00000020 
  5D0:  	Set  *Var[0]  *Array[5] 
  5E0:  	Exec     $Script_8021E364 *Var[7] 
  5F0:  	Add  *Var[1]  00000001 
  600:  	Wait     00000005 
  60C:  EndIf
  614:  If  *Var[9]  &  00000002 
  624:  	Set  *Var[0]  *Array[1] 
  634:  	Exec     $Script_8021E364 *Var[7] 
  644:  	Add  *Var[1]  00000001 
  654:  	Wait     00000005 
  660:  EndIf
  668:  If  *Var[9]  &  00000001 
  678:  	Set  *Var[0]  *Array[0] 
  688:  	Exec     $Script_8021E364 *Var[7] 
  698:  	Add  *Var[1]  00000001 
  6A8:  	Wait     00000005 
  6B4:  EndIf
  6BC:  If  *Var[9]  &  00000100 
  6CC:  	Set  *Var[0]  *Array[8] 
  6DC:  	Exec     $Script_8021E364 *Var[7] 
  6EC:  	Add  *Var[1]  00000001 
  6FC:  	Wait     00000005 
  708:  EndIf
  710:  If  *Var[9]  &  00000004 
  720:  	Set  *Var[0]  *Array[2] 
  730:  	Exec     $Script_8021E364 *Var[7] 
  740:  	Add  *Var[1]  00000001 
  750:  	Wait     00000005 
  75C:  EndIf
  764:  If  *Var[9]  &  00000080 
  774:  	Set  *Var[0]  *Array[7] 
  784:  	Exec     $Script_8021E364 *Var[7] 
  794:  	Add  *Var[1]  00000001 
  7A4:  	Wait     00000005 
  7B0:  EndIf
  7B8:  If  *Var[9]  &  00000040 
  7C8:  	Set  *Var[0]  *Array[6] 
  7D8:  	Exec     $Script_8021E364 *Var[7] 
  7E8:  	Add  *Var[1]  00000001 
  7F8:  	Wait     00000005 
  804:  EndIf
  80C:  Label    00000000 
  818:  DoesScriptExist *Var[7] *Var[0] 
  828:  Wait     00000001 
  834:  If  *Var[0]  ==  00000001 
  844:  	Goto     00000000 
  850:  EndIf
  858:  Call     RemoveEffect 	( *Var[8] )
  868:  Call     StopSound ( 000003B0 )
  878:  Call     StopSound ( 000003E6 )
  888:  Call     SetAnimation 	( .Actor:Self 00000001 007C0017 )
  8A0:  Call     SetAnimation 	( .Actor:Self 00000002 007C0018 )
  8B8:  Call     SetAnimation 	( .Actor:Self 00000003 007C0019 )
  8D0:  Thread
  8D8:  	Wait     00000005 
  8E4:  	Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  8F8:  	Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  90C:  EndThread
  914:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  930:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
  948:  Call     PlayEffect  	( ~FX:Sparkles:Star *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  98C:  Add  *Var[0]  00000014 
  99C:  Call     PlayEffect  	( ~FX:Recover:HP *Var[0] *Var[1] *Var[2] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  9E0:  Call     GetActorHP  	( .Actor:Self *Var[B] )
  9F4:  Add  *Var[B]  *Var[A] 
  A04:  Call     SetEnemyHP  	( .Actor:Self *Var[B] )
  A18:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  A30:  Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  A48:  ConstOR  *Var[0] 00000001 
  A58:  Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  A70:  Wait     0000001E 
  A7C:  Call     UseBattleCamPreset 	( 00000002 )
  A8C:  Call     UseIdleAnimation 	( .Actor:Self .True )
          Call     GetPlayerHP 	( *Var[0] ) % If player's in danger/peril, they instant die
		If       *Var[0] <=  00000005
ExecWait $Script_ChargeLargeThunder
ExecWait $Script_LargeThunderstorm		
		Else
  ExecWait $Script_BodySlam
  EndIf
  AA0:  Return
  AA8:  End
}

@ $Script_BodySlam
{
 0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     AddBattleCamZoom  	( FFFFFF38 )
   48:  Call     SetBattleCamOffsetZ 	( FFFFFFE2 )
   58:  Call     BattleCamTargetActor ( .Actor:Self )
   68:  Call     SetGoalToTarget 	( .Actor:Self )
   78:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
   90:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
   A8:  SetF  *Var[2]  *Fixed[62.5] 
   B8:  SetF  *Var[3]  *Fixed[47.5] 
   C8:  MulF  *Var[2]  *Var[0] 
   D8:  MulF  *Var[3]  *Var[1] 
   E8:  DivF  *Var[2]  *Fixed[100.0] 
   F8:  DivF  *Var[3]  *Fixed[100.0] 
  108:  Call     AddGoalPos 	( .Actor:Self *Var[2] *Var[3] 00000000 )
  124:  Call     AddGoalPos 	( .Actor:Self 00000000 00000014 00000000 )
  140:  Call     FlyToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  15C:  Wait     0000000A 
  168:  Call     PlaySoundAtActor 	( .Actor:Self 000003E7 )
  17C:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A0:  Switch  *Var[0] 
  1AC:  	CaseOR  ==  00000006 
  1B8:  	CaseOR  ==  00000005 
  1C4:  		Call     UseBattleCamPreset 	( 00000001 )
  1D4:  		Call     SetAnimation 	( .Actor:Self 00000001 007C000B )
  1EC:  		Call     SetAnimation 	( .Actor:Self 00000002 007C000C )
  204:  		Call     SetAnimation 	( .Actor:Self 00000003 007C000D )
  21C:  		Call     SetGoalToTarget 	( .Actor:Self )
  22C:  		Call     GetGoalPos  	( .Actor:Self *Var[5] *Var[6] *Var[7] )
  248:  		Call     SetGoalPos 	( .Actor:Self *Var[5] *Var[3] *Var[7] )
  264:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  278:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
  298:  		Thread
  2A0:  			Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.80078125] )
  2BC:  		EndThread
  2C4:  		If  *Var[0]  ==  00000005 
  2D4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2F8:  		EndIf
  300:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  318:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  330:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  348:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
  35C:  		Call     AddGoalPos 	( .Actor:Self FFFFFFB0 00000000 00000000 )
  378:  		Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000000 00000000 )
  398:  		Thread
  3A0:  			Call     ShakeCam    	( 00000001 00000000 00000008 *Fixed[0.60058594] )
  3BC:  		EndThread
  3C4:  		Call     AddGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  3E0:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
  400:  		Thread
  408:  			Call     ShakeCam    	( 00000001 00000000 00000006 *Fixed[0.40039062] )
  424:  		EndThread
  42C:  		Call     AddGoalPos 	( .Actor:Self FFFFFFE2 00000000 00000000 )
  448:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  468:  		Thread
  470:  			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[0.20019531] )
  48C:  		EndThread
  494:  		Call     AddGoalPos 	( .Actor:Self FFFFFFEC 00000000 00000000 )
  4B0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  4D0:  		Wait     0000001E 
  4DC:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
  4F4:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
  50C:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
  524:  		Call     UseBattleCamPreset 	( 00000002 )
  534:  		Call     SetGoalToHome 	( .Actor:Self )
  544:  		Call     FlyToGoal  	( .Actor:Self 00000050 FFFFFFEC .Easing:SinOut )
  560:  		Call     UseIdleAnimation 	( .Actor:Self .True )
				%Call     GetActorVar 	( .Actor:Self 00000009 *Var[9] )
				%If *Var[9] == 00000001
				%Goto 00000053
				%Else
					ExecWait $Script_OkayBlookTryThis % Sorry ShyBlookster but I gotta iron out these cheese strats. gj on getting this far though, really.
				%EndIf
				%Label 00000053
  574:  		Return
  57C:  	EndCaseGroup
  584:  EndSwitch
  58C:  Call     SetAnimation 	( .Actor:Self 00000001 007C000B )
  5A4:  Call     SetAnimation 	( .Actor:Self 00000002 007C000C )
  5BC:  Call     SetAnimation 	( .Actor:Self 00000003 007C000D )
  5D4:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.0] )
  5E8:  Call     SetGoalToTarget 	( .Actor:Self )
  5F8:  Call     AddGoalPos 	( .Actor:Self 00000000 *Var[3] 00000005 )
  614:  Call     AddGoalPos 	( .Actor:Self 00000000 FFFFFFE2 00000000 )
  630:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
  650:  Call     80269EAC ( 00000018 )
  660:  Wait     00000002 
  66C:  Call     SetGoalToTarget 	( .Actor:Self )
  67C:  Call     GetActorHP  	( .Actor:Self *Var[0] )
  %690:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
  %6A4:  Mul  *Var[0]  00000064 
  %6B4:  Div  *Var[0]  *Var[1] 
  6C4:  Switch  *Var[0] 
  6D0:  	Case  <=  20`
  6DC:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 80080600 00000004 00000020 )
  704:  	Case  <=  30`
  710:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 80080500 00000005 00000020 )
  738:  	Case  <=  40`
  744:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 80080400 00000006 00000020 )
  76C:  	Case  <=  50` 
  778:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 80080300 00000007 00000020 )
  7A0:  	Default
  7A8:  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 80080200 00000008 00000020 )
  7D0:  EndSwitch
  7D8:  Switch  *Var[0] 
  7E4:  	CaseOR  ==  00000000 
  7F0:  	CaseOR  ==  00000002 
  7FC:  		Thread
  804:  			Call     ShakeCam    	( 00000001 00000000 00000014 *Fixed[1.0] )
  820:  		EndThread
  828:  		Call     UseBattleCamPreset 	( 00000002 )
  838:  		Call     GetBattleFlags ( *Var[0] )
  848:  		If  *Var[0]  !&  80000000 
  858:  			Call     GetStatusFlags ( .Actor:Player *Var[0] )
  86C:  			If  *Var[0]  !&  00100000 
  87C:  				Thread
  884:  					Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  8A0:  					Add  *Var[1]  0000000A 
  8B0:  					Wait     00000037 
  8BC:  					Call     PlayEffect  	( ~FX:YellowCloudPuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  900:  				EndThread
  908:  			EndIf
  910:  		EndIf
  918:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  934:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  950:  		Call     AddGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
  96C:  		Call     JumpWithBounce ( FFFFFF81 00000014 *Fixed[4.0] )
  984:  		Wait     00000014 
  990:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
  9A8:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
  9C0:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
  9D8:  		Call     SetGoalToHome 	( .Actor:Self )
  9E8:  		Call     FlyToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  A04:  	EndCaseGroup
  A0C:  EndSwitch
  A14:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A28:  Return
  A30:  End
}
 
#new:Script $Script_OkayBlookTryThis
{
Call     SetActorVar 	( .Actor:Enemy0 00000009 00000001 )
Call     ActorSpeak  	( $NiceTry .Actor:Self 00000001 007C002C 007C0001 )
Call	$Function_Vanish ( 3 ) % Ill show them. ILL SHOW THEM ALL :3
Return
End
}

#string $NiceTry
{
[Style Right]
So that's how you want[BR]
to play, is it?[Pause 5] Check out[BR]
this cool trick I learned[BR]
from ShyBlookster![BR]
[Wait][End]
}

@ $Script_Thunderstorm
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     UseBattleCamPreset 	( 00000013 )
   38:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   54:  Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   6C:  Call     SetBattleCamZoom  	( 00000190 )
   7C:  Call     SetBattleCamOffsetZ 	( 00000005 )
   8C:  Call     MoveBattleCamOver 	( 0000003C )
   9C:  Call     $Function_80218000 ( 00000046 00000064 )
   B0:  Thread
   B8:  	Call     ShakeCam    	( 00000001 00000000 00000064 *Fixed[0.30078125] )
   D4:  EndThread
   DC:  Call     $Function_802188A8 ( )
   E8:  Call     MakeLerp    	( 00000000 000000C8 0000003C 00000000 )
  104:  Label    00000000 
  110:  Call     UpdateLerp  	( )
  11C:  Call     $Function_802188EC ( *Var[0] )
  12C:  Wait     00000001 
  138:  If  *Var[1]  ==  00000001 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  Wait     00000014 
  168:  Call     UseBattleCamPreset 	( 00000002 )
  178:  Call     MoveBattleCamOver 	( 0000000A )
  188:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[A] )
  1A0:  Kill     *Var[A] 
  1AC:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  1C8:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  1E0:  Call     RemoveEffect 	( *Var[0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802198F0 )
  208:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021994C )
  220:  Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_802199A8 )
  238:  Call     SetAnimation 	( .Actor:Self 00000001 007C000E )
  250:  Call     SetAnimation 	( .Actor:Self 00000002 007C000F )
  268:  Call     SetAnimation 	( .Actor:Self 00000003 007C0010 )
  280:  Call     SetPartEventBits 	( .Actor:Self 00000001 00000080 .False )
  29C:  Thread
  2A4:  	Wait     00000014 
  2B0:  	Call     MakeLerp    	( 000000C8 00000000 0000001E 00000000 )
  2CC:  	Label    00000001 
  2D8:  	Call     UpdateLerp  	( )
  2E4:  	Call     $Function_802188EC ( *Var[0] )
  2F4:  	Wait     00000001 
  300:  	If  *Var[1]  ==  00000001 
  310:  		Goto     00000001 
  31C:  	EndIf
  324:  EndThread
  32C:  Call     StopSound ( 0000035C )
  33C:  Call     PlaySoundAtActor 	( .Actor:Self 000003D3 )
  350:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  Sub  *Var[2]  0000000A 
  37C:  Set  *Var[3]  *Var[0] 
  38C:  Sub  *Var[3]  0000001E 
  39C:  Call     PlayEffect  	( ~FX:Lightning *Var[0] *Var[1] *Var[2] *Var[3] 00000001 *Var[2] *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 )
  3E0:  Wait     00000005 
  3EC:  Call     $Function_80218000 ( 00000100 0000001E )
  400:  Thread
  408:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[5.0] )
  424:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[3.0] )
  440:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.0] )
  45C:  EndThread
  464:  SetF  *Var[6]  *Fixed[0.0] 
  474:  Loop     0000000A 
  480:  	Set  *Var[4]  *Var[3] 
  490:  	Set  *Var[5]  *Var[2] 
  4A0:  	AddF  *Var[6]  *Fixed[36.0] 
  4B0:  	Call     AddVectorPolar ( *Var[4] *Var[5] *Fixed[300.0] *Var[6] )
  4CC:  	Call     PlayEffect  	( ~FX:Lightning *Var[3] 00000001 *Var[2] *Var[4] 00000001 *Var[5] *Fixed[4.0] 0000001E 00000000 00000000 00000000 00000000 )
  510:  EndLoop
  518:  Wait     0000000A 
  524:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  548:  Switch  *Var[0] 
  554:  	CaseOR  ==  00000006 
  560:  	CaseOR  ==  00000005 
  56C:  		If  *Var[0]  ==  00000005 
  57C:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5A0:  		EndIf
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  5C0:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  5D8:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  5F0:  		Wait     00000014 
    ExecWait $Script_OkayBlookTryThis % Sorry ShyBlookster but I gotta iron out these cheese strats. gj on getting this far though, really.
  5FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  610:  		Return
  618:  	EndCaseGroup
  620:  EndSwitch
  628:  Wait     00000002 
  634:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  648:  Call     SetGoalToTarget 	( .Actor:Self )
  658:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 18000800 00000000 00000000 00000019 00000020 )
  680:  Switch  *Var[0] 
  68C:  	CaseOR  ==  00000000 
  698:  	CaseOR  ==  00000002 
  6A4:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  6B8:  		If  *Var[0]  >  00000000 
  6C8:  			Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  6E0:  			ConstOR  *Var[0] 00000008 
  6F0:  			Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  708:  		EndIf
  710:  		Wait     00000014 
  71C:  	EndCaseGroup
  724:  EndSwitch
  72C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  740:  Return
  748:  End
}

@ $Script_TuffPuffSwarm
{
[49C0]  			Call     EnemyDamageTarget 	( .Actor:Self *Var[A] 18000000 00000000 00000000 00000004 00000040 )
[4B88]  			ExecWait $AntiLS % This used to be a two frame wait
[4BB8]  			Call     EnemyDamageTarget 	( .Actor:Self *Var[A] 1A000000 00000000 00000000 00000004 00000040 )
}
				   
 
#new:Script $AntiLS
{
Loop 10`
Call FindItem  ( .Item:LifeShroom *Var[9]) 					
If *Var[9] >= 00000000										
	Call SetActorVar 	( .Actor:Self 00000008 00000001 )
	Call RemoveItem ( .Item:LifeShroom *Var[9]) 
EndIf
Wait 1`
EndLoop
Return
End
}

@ $Script_Init_80219BC4
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D2B8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021A0E4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021BA6C )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021D840 )
   50:  Call     SetActorVar 	( .Actor:Enemy0 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   80:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   98:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   B0:  Call     SetActorVar 	( .Actor:Self 00000006 00000064 )
   C8:  Call     SetActorVar 	( .Actor:Self 00000007 00000064 )
   C8:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   C8:  Call     SetActorVar 	( .Actor:Self 00000009 00000000 )
   E0:  ExecWait $Script_80219CC0 
   EC:  Return
   F4:  End
}
 
@ $Script_LargeThunderstorm
{
0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     UseBattleCamPreset 	( 0000003F )
   38:  Call     AddBattleCamZoom  	( FFFFFF9C )
   48:  Call     SetBattleCamOffsetZ 	( 00000032 )
   58:  Call     BattleCamTargetActor ( .Actor:Self )
   68:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   80:  Call     $Function_80218000 ( 00000046 00000050 )
   94:  Thread
   9C:  	Call     ShakeCam    	( 00000001 00000000 00000028 *Fixed[0.30078125] )
   B8:  EndThread
   C0:  Thread
   C8:  	Call     $Function_802188A8 ( )
   D4:  	Call     MakeLerp    	( 00000000 000000C8 00000028 00000000 )
   F0:  	Label    00000000 
   FC:  	Call     UpdateLerp  	( )
  108:  	Call     $Function_802188EC ( *Var[0] )
  118:  	Wait     00000001 
  124:  	If  *Var[1]  ==  00000001 
  134:  		Goto     00000000 
  140:  	EndIf
  148:  EndThread
  150:  Thread
  158:  	Loop     00000028 
  164:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  180:  		Call     GetActorVar 	( .Actor:Self 00000005 *Var[A] )
  198:  		Call     $Function_802189FC ( *Var[A] *Var[0] *Var[1] *Var[2] )
  1B4:  		Wait     00000001 
  1C0:  	EndLoop
  1C8:  EndThread
  1D0:  Call     SetGoalToTarget 	( .Actor:Self )
  1E0:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
  1F8:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
  210:  SetF  *Var[2]  *Fixed[72.5] 
  220:  SetF  *Var[3]  *Fixed[67.5] 
  230:  MulF  *Var[2]  *Var[0] 
  240:  MulF  *Var[3]  *Var[1] 
  250:  DivF  *Var[2]  *Fixed[100.0] 
  260:  DivF  *Var[3]  *Fixed[100.0] 
  270:  Call     AddGoalPos 	( .Actor:Self 00000000 *Var[3] 00000000 )
  28C:  Call     AddGoalPos 	( .Actor:Self 00000014 00000028 00000000 )
  2A8:  Call     FlyToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  2C4:  Wait     0000001E 
  2D0:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[A] )
  2E8:  Kill     *Var[A] 
  2F4:  Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  310:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  328:  Call     RemoveEffect 	( *Var[0] )
  338:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802198F0 )
  350:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021994C )
  368:  Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_802199A8 )
  380:  Call     SetAnimation 	( .Actor:Self 00000001 007C000E )
  398:  Call     SetAnimation 	( .Actor:Self 00000002 007C000F )
  3B0:  Call     SetAnimation 	( .Actor:Self 00000003 007C0010 )
  3C8:  Call     SetPartEventBits 	( .Actor:Self 00000001 00000080 .False )
  3E4:  Thread
  3EC:  	Wait     00000014 
  3F8:  	Call     MakeLerp    	( 000000C8 00000000 0000001E 00000000 )
  414:  	Label    00000001 
  420:  	Call     UpdateLerp  	( )
  42C:  	Call     $Function_802188EC ( *Var[0] )
  43C:  	Wait     00000001 
  448:  	If  *Var[1]  ==  00000001 
  458:  		Goto     00000001 
  464:  	EndIf
  46C:  EndThread
  474:  Call     StopSound ( 0000035C )
  484:  Call     PlaySoundAtActor 	( .Actor:Self 0000035B )
  498:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  4BC:  Switch  *Var[0] 
  4C8:  	Case  ==  00000005 
  4D4:  		Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  4F0:  		Sub  *Var[C]  0000000A 
  500:  		Call     SetGoalToTarget 	( .Actor:Self )
  510:  		Call     GetGoalPos  	( .Actor:Self *Var[D] *Var[E] *Var[F] )
  52C:  		Sub  *Var[D]  00000064 
  53C:  		Call     PlayEffect  	( ~FX:Lightning *Var[A] *Var[B] *Var[C] *Var[D] 00000000 *Var[F] *Fixed[1.5] 00000014 00000000 00000000 00000000 00000000 )
  580:  		Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5A4:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  5BC:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  5D4:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  5EC:  		Wait     00000014 
  5F8:  		Call     UseBattleCamPreset 	( 00000002 )
  608:  		Call     SetGoalToHome 	( .Actor:Self )
  618:  		Call     FlyToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  ExecWait $Script_OkayBlookTryThis % Sorry ShyBlookster but I gotta iron out these cheese strats. gj on getting this far though, really.
  634:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  648:  		Return
  650:  	Case  ==  00000006 
  65C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  678:  		Sub  *Var[2]  0000000A 
  688:  		Call     SetGoalToTarget 	( .Actor:Self )
  698:  		Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
  6B4:  		Sub  *Var[3]  00000004 
  6C4:  		Add  *Var[4]  0000000A 
  6D4:  		Add  *Var[5]  00000001 
  6E4:  		Thread
  6EC:  			Call     GetActorVar 	( .Actor:Self 00000006 *Var[6] )
  704:  			SetF  *Var[7]  *Fixed[0.72558594] 
  714:  			SetF  *Var[8]  *Fixed[0.2421875] 
  724:  			MulF  *Var[7]  *Var[6] 
  734:  			MulF  *Var[8]  *Var[6] 
  744:  			SubF  *Var[0]  *Var[7] 
  754:  			SetF  *Var[9]  *Var[8] 
  764:  			MulF  *Var[9]  00000003 
  774:  			AddF  *Var[9]  *Var[0] 
  784:  			Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  7C8:  			Wait     00000003 
  7D4:  			SetF  *Var[9]  *Var[8] 
  7E4:  			MulF  *Var[9]  00000001 
  7F4:  			AddF  *Var[9]  *Var[0] 
  804:  			Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  848:  			Wait     00000003 
  854:  			SetF  *Var[9]  *Var[8] 
  864:  			MulF  *Var[9]  00000004 
  874:  			AddF  *Var[9]  *Var[0] 
  884:  			Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  8C8:  			Wait     00000003 
  8D4:  			SetF  *Var[9]  *Var[8] 
  8E4:  			MulF  *Var[9]  00000002 
  8F4:  			AddF  *Var[9]  *Var[0] 
  904:  			Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  948:  			Wait     00000003 
  954:  			SetF  *Var[9]  *Var[8] 
  964:  			MulF  *Var[9]  00000005 
  974:  			AddF  *Var[9]  *Var[0] 
  984:  			Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  9C8:  		EndThread
  9D0:  		Wait     00000002 
  9DC:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  9F4:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  A0C:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  A24:  		Wait     00000014 
  A30:  		Call     UseBattleCamPreset 	( 00000002 )
  A40:  		Call     SetGoalToHome 	( .Actor:Self )
  A50:  		Call     FlyToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  ExecWait $Script_OkayBlookTryThis % Sorry ShyBlookster but I gotta iron out these cheese strats. gj on getting this far though, really.
  A6C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  A80:  		Return
  A88:  EndSwitch
  A90:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AAC:  Sub  *Var[2]  0000000A 
  ABC:  Call     SetGoalToTarget 	( .Actor:Self )
  ACC:  Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
  AE8:  Sub  *Var[3]  00000004 
  AF8:  Add  *Var[4]  0000000A 
  B08:  Add  *Var[5]  00000001 
  B18:  Thread
  B20:  	Call     GetActorVar 	( .Actor:Self 00000006 *Var[6] )
  B38:  	SetF  *Var[7]  *Fixed[0.72558594] 
  B48:  	SetF  *Var[8]  *Fixed[0.2421875] 
  B58:  	MulF  *Var[7]  *Var[6] 
  B68:  	MulF  *Var[8]  *Var[6] 
  B78:  	SubF  *Var[0]  *Var[7] 
  B88:  	SetF  *Var[9]  *Var[8] 
  B98:  	MulF  *Var[9]  00000003 
  BA8:  	AddF  *Var[9]  *Var[0] 
  BB8:  	Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  BFC:  	Wait     00000003 
  C08:  	SetF  *Var[9]  *Var[8] 
  C18:  	MulF  *Var[9]  00000001 
  C28:  	AddF  *Var[9]  *Var[0] 
  C38:  	Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  C7C:  	Wait     00000003 
  C88:  	SetF  *Var[9]  *Var[8] 
  C98:  	MulF  *Var[9]  00000004 
  CA8:  	AddF  *Var[9]  *Var[0] 
  CB8:  	Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  CFC:  	Wait     00000003 
  D08:  	SetF  *Var[9]  *Var[8] 
  D18:  	MulF  *Var[9]  00000002 
  D28:  	AddF  *Var[9]  *Var[0] 
  D38:  	Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  D7C:  	Wait     00000003 
  D88:  	SetF  *Var[9]  *Var[8] 
  D98:  	MulF  *Var[9]  00000005 
  DA8:  	AddF  *Var[9]  *Var[0] 
  DB8:  	Call     PlayEffect  	( ~FX:Lightning *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  DFC:  EndThread
  E04:  Wait     00000002 
  E10:  Wait     00000002 
  E1C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  E30:  Call     SetGoalToTarget 	( .Actor:Self )
  E40:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 18000020 00000000 00000000 00000012 00000020 )
  E68:  Switch  *Var[0] 
  E74:  	CaseOR  ==  00000000 
  E80:  	CaseOR  ==  00000002 
  E8C:  		Call     UseBattleCamPreset 	( 00000002 )
  E9C:  		Wait     0000001E 
  EA8:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
  EC0:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
  ED8:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
  EF0:  		Call     SetGoalToHome 	( .Actor:Self )
  F00:  		Call     FlyToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  F1C:  	EndCaseGroup
  F24:  EndSwitch
  F2C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  F40:  Return
  F48:  End
}
 
%@ $Script_GroupBodySlam
% [49C0] Call     EnemyDamageTarget 	( .Actor:Self *Var[A] 18000000 00000000 00000000 00000003 00000040 )
% [4BB8] Call     EnemyDamageTarget 	( .Actor:Self *Var[A] 1A000000 00000000 00000000 00000003 00000040 )
 
% Speed the swarm attack up a bit
@ $Script_80228004
{
[2A8]     Wait     00000001 % was 5
[410]     Wait     00000001 % was A
}

% Doing something clever here -- which is usually a recipe for trouble!
% We want to make the button mashing minigame 'harder', but only for this enemy.
% To do this, load the action command data normally, then have a custom function
% overwrite the table that determines how quickly the meter drains.
@ $Script_HurricaneBreath
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( FFFFFF81 00000000 )
   28:  Call     SetAnimation 	( .Actor:Self 00000001 007C001A )
   40:  Call     SetAnimation 	( .Actor:Self 00000002 007C001B )
   58:  Call     SetAnimation 	( .Actor:Self 00000003 007C001C )
   70:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   8C:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
   A4:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
   BC:  MulF     *Var[3] *Fixed[-13.0] 
   CC:  MulF     *Var[4] *Fixed[0.0] 
   DC:  DivF     *Var[3] *Fixed[100.0] 
   EC:  DivF     *Var[4] *Fixed[100.0] 
   FC:  Add      *Var[0] *Var[3] 
  10C:  Add      *Var[1] *Var[4] 
  11C:  Call     PlayEffect  	( 0000006E 00000001 *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[-1.0] *Fixed[1.5] 00000064 00000000 00000000 00000000 00000000 00000000 )
  160:  Call     $Function_80218000 ( 00000050 00000096 )
  174:  Thread
  17C:     Call     ShakeCam    	( 00000001 00000000 0000004B *Fixed[0.30078125] )
  198:  EndThread
  1A0:  Thread
  1A8:     Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  1C0:     Set      *Var[3] *Var[2] 
  1D0:     Add      *Var[3] 00000019 
  1E0:     Call     MakeLerp    	( *Var[2] *Var[3] 0000005A 0000000B )
  1FC:     Label    00000000 
  208:     Call     UpdateLerp  	( )
  214:     Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  22C:     Wait     00000001 
  238:     If       *Var[1] ==  00000001 
  248:        Goto     00000000 
  254:     EndIf
  25C:  EndThread
  264:  Thread
  26C:     Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  284:     Set      *Var[3] *Var[2] 
  294:     Add      *Var[3] 00000019 
  2A4:     Call     MakeLerp    	( *Var[2] *Var[3] 0000005A 0000000B )
  2C0:     Label    00000001 
  2CC:     Call     UpdateLerp  	( )
  2D8:     Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
  2F0:     Wait     00000001 
  2FC:     If       *Var[1] ==  00000001 
  30C:        Goto     00000001 
  318:     EndIf
  320:  EndThread
  328:  Call     PlaySoundAtActor 	( .Actor:Self 000003B0 )
  33C:  Thread
  344:     Wait     0000000F 
  350:     Call     PlaySoundAtActor 	( .Actor:Self 000003E6 )
  364:  EndThread
  36C:  Call     UseBattleCamPreset 	( 00000013 )
  37C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  398:  Sub      *Var[0] 00000014 
  3A8:  Call     SetBattleCamTarget ( *Var[0] *Var[1] *Var[2] )
  3C0:  Call     SetBattleCamZoom ( 0000012C )
  3D0:  Call     SetBattleCamOffsetZ ( 00000014 )
  3E0:  Call     MoveBattleCamOver 	( 000000B4 )
  3F0:  Wait     0000005A 
  3FC:  Call     StopSound ( 000003B0 )
  40C:  Call     SetAnimation 	( .Actor:Self 00000001 007C001D )
  424:  Call     SetAnimation 	( .Actor:Self 00000002 007C001D )
  43C:  Call     SetAnimation 	( .Actor:Self 00000003 007C001E )
  454:  Wait     0000003C 
  460:  Call     SetAnimation 	( .Actor:Self 00000001 007C0020 )
  478:  Call     SetAnimation 	( .Actor:Self 00000002 007C0021 )
  490:  Call     SetAnimation 	( .Actor:Self 00000003 007C0022 )
  4A8:  Call     PlaySoundAtActor 	( .Actor:Self 0000035D )
  4BC:  Call     UseBattleCamPreset 	( 00000002 )
  4CC:  Call     MoveBattleCamOver 	( 0000000F )
  4DC:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  500:  Set      *Var[A] *Var[0] 
  510:  Switch   *Var[0] 
  51C:     CaseOR   ==  00000006 
  528:     CaseOR   ==  00000005 
  534:        Thread
  53C:           Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  554:           Set      *Var[3] *Var[2] 
  564:           Sub      *Var[3] 00000019 
  574:           Call     MakeLerp    	( *Var[2] *Var[3] 00000028 00000002 )
  590:           Label    00000002 
  59C:           Call     UpdateLerp  	( )
  5A8:           Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  5C0:           Wait     00000001 
  5CC:           If       *Var[1] ==  00000001 
  5DC:              Goto     00000002 
  5E8:           EndIf
  5F0:        EndThread
  5F8:        Thread
  600:           Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  618:           Set      *Var[3] *Var[2] 
  628:           Sub      *Var[3] 00000019 
  638:           Call     MakeLerp    	( *Var[2] *Var[3] 00000028 00000002 )
  654:           Label    00000003 
  660:           Call     UpdateLerp  	( )
  66C:           Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
  684:           Wait     00000001 
  690:           If       *Var[1] ==  00000001 
  6A0:              Goto     00000003 
  6AC:           EndIf
  6B4:        EndThread
  6BC:        Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6D8:        Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
  6F0:        Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
  708:        MulF     *Var[3] *Fixed[-20.0] 
  718:        MulF     *Var[4] *Fixed[-20.0] 
  728:        DivF     *Var[3] *Fixed[100.0] 
  738:        DivF     *Var[4] *Fixed[100.0] 
  748:        Add      *Var[0] *Var[3] 
  758:        Add      *Var[1] *Var[4] 
  768:        Call     PlayEffect  	( 0000006E 00000000 *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 00000028 00000000 00000000 00000000 00000000 00000000 )
  7AC:        Call     $Function_80218000 ( 00000050 0000003C )
  7C0:        Thread
  7C8:           Call     ShakeCam    	( 00000001 00000000 0000001E *Fixed[0.30078125] )
  7E4:        EndThread
  7EC:        Loop     0000000A 
  7F8:           Call     RandInt     	( 00000096 *Var[3] )
  80C:           Call     RandInt     	( 00000064 *Var[4] )
  820:           Add      *Var[3] 00000032 
  830:           SetF     *Var[4] *Fixed[5.0] 
  840:           Call     RandInt     	( 00000004 *Var[5] )
  854:           AddF     *Var[4] *Var[5] 
  864:           DivF     *Var[4] *Fixed[10.0] 
  874:           SetF     *Var[5] *Fixed[100.0] 
  884:           Call     RandInt     	( 00000028 *Var[6] )
  898:           AddF     *Var[5] *Var[6] 
  8A8:           DivF     *Var[5] *Fixed[10.0] 
  8B8:           Call     PlayEffect  	( 00000074 00000000 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
  8FC:           Call     RandInt     	( 00000005 *Var[0] )
  910:           Add      *Var[0] 00000005 
  920:           Wait     *Var[0] 
  92C:        EndLoop
  934:        Wait     00000014 
  940:        Call     StopSound ( 0000035D )
  950:        If       *Var[A] ==  00000005 
  960:           Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  984:        EndIf
  98C:        Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  9A4:        Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  9BC:        Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  9D4:        Wait     00000014 
				ExecWait $Script_OkayBlookTryThis % Sorry ShyBlookster but I gotta iron out these cheese strats. gj on getting this far though, really.
  9E0:        Call     UseIdleAnimation 	( .Actor:Self .True )
  9F4:        Return
  9FC:     EndCaseGroup
  A04:  EndSwitch
  A0C:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  A20:  If       *Var[0] !&  00100000 
  A30:     Call     ShowMessageBox ( 00000031 000000B4 )
  A44:     Call     802694A4 ( 00000001 )
% Since we'll only be adding one line, moving the entire script is a waste of space.
% Let's just wrap the two function calls with a new script and execute it from here.
% That way, this whole script can remain in place.
%  A54:     Call     LoadActionCommand 	( 00000005 )
           ExecWait	$LoadModifiedActionCommand 
  A64:     Call     802A9000 ( 00000000 )
  A74:     Call     SetupMashMeter ( 00000005 00000014 00000028 0000003C 00000050 00000064 )
  A98:     Wait     0000000A 
  AA4:     Call     SetBattleFlagBits 	( 00004000 .False )
  AB8:     Call     802A91E0 ( 00000000 000000C8 00000003 )
  AD0:     Thread
  AD8:        Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  AF0:        Set      *Var[3] *Var[2] 
  B00:        Sub      *Var[3] 00000019 
  B10:        Call     MakeLerp    	( *Var[2] *Var[3] 000000C8 00000002 )
  B2C:        Label    00000004 
  B38:        Call     UpdateLerp  	( )
  B44:        Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  B5C:        Wait     00000001 
  B68:        If       *Var[1] ==  00000001 
  B78:           Goto     00000004 
  B84:        EndIf
  B8C:     EndThread
  B94:     Thread
  B9C:        Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  BB4:        Set      *Var[3] *Var[2] 
  BC4:        Sub      *Var[3] 00000019 
  BD4:        Call     MakeLerp    	( *Var[2] *Var[3] 000000C8 00000002 )
  BF0:        Label    00000005 
  BFC:        Call     UpdateLerp  	( )
  C08:        Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
  C20:        Wait     00000001 
  C2C:        If       *Var[1] ==  00000001 
  C3C:           Goto     00000005 
  C48:        EndIf
  C50:     EndThread
  C58:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C74:     Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
  C8C:     Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
  CA4:     MulF     *Var[3] *Fixed[-20.0] 
  CB4:     MulF     *Var[4] *Fixed[-20.0] 
  CC4:     DivF     *Var[3] *Fixed[100.0] 
  CD4:     DivF     *Var[4] *Fixed[100.0] 
  CE4:     Add      *Var[0] *Var[3] 
  CF4:     Add      *Var[1] *Var[4] 
  D04:     Call     PlayEffect  	( 0000006E 00000000 *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 )
  D48:     Call     $Function_80218000 ( 00000064 0000015E )
  D5C:     Thread
  D64:        Call     ShakeCam    	( 00000001 00000000 000000AF *Fixed[0.30078125] )
  D80:     EndThread
  D88:     Thread
  D90:        Loop     00000019 
  D9C:           Call     RandInt     	( 00000096 *Var[3] )
  DB0:           Call     RandInt     	( 00000064 *Var[4] )
  DC4:           Add      *Var[3] 00000032 
  DD4:           SetF     *Var[4] *Fixed[5.0] 
  DE4:           Call     RandInt     	( 00000004 *Var[5] )
  DF8:           AddF     *Var[4] *Var[5] 
  E08:           DivF     *Var[4] *Fixed[10.0] 
  E18:           SetF     *Var[5] *Fixed[100.0] 
  E28:           Call     RandInt     	( 00000028 *Var[6] )
  E3C:           AddF     *Var[5] *Var[6] 
  E4C:           DivF     *Var[5] *Fixed[10.0] 
  E5C:           Call     PlayEffect  	( 00000074 00000000 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
  EA0:           Call     RandInt     	( 00000005 *Var[0] )
  EB4:           Add      *Var[0] 00000005 
  EC4:           Wait     *Var[0] 
  ED0:        EndLoop
  ED8:     EndThread
  EE0:     Call     MakeLerp    	( 00000000 00001C20 000000C8 0000000B )
  EFC:     Label    0000000A 
  F08:     Call     UpdateLerp  	( )
  F14:     Call     SetActorYaw 	( .Actor:Player *Var[0] )
  F28:     Wait     00000001 
  F34:     If       *Var[1] ==  00000001 
  F44:        Goto     0000000A 
  F50:     EndIf
  F58:     Call     GetActionResult ( *Var[1] )
  F68:  Else
  F70:     Thread
  F78:        Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  F90:        Set      *Var[3] *Var[2] 
  FA0:        Sub      *Var[3] 00000019 
  FB0:        Call     MakeLerp    	( *Var[2] *Var[3] 00000064 00000002 )
  FCC:        Label    00000006 
  FD8:        Call     UpdateLerp  	( )
  FE4:        Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  FFC:        Wait     00000001 
 1008:        If       *Var[1] ==  00000001 
 1018:           Goto     00000006 
 1024:        EndIf
 102C:     EndThread
 1034:     Thread
 103C:        Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
 1054:        Set      *Var[3] *Var[2] 
 1064:        Sub      *Var[3] 00000019 
 1074:        Call     MakeLerp    	( *Var[2] *Var[3] 00000064 00000002 )
 1090:        Label    00000007 
 109C:        Call     UpdateLerp  	( )
 10A8:        Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
 10C0:        Wait     00000001 
 10CC:        If       *Var[1] ==  00000001 
 10DC:           Goto     00000007 
 10E8:        EndIf
 10F0:     EndThread
 10F8:     Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1114:     Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
 112C:     Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
 1144:     MulF     *Var[3] *Fixed[-20.0] 
 1154:     MulF     *Var[4] *Fixed[-20.0] 
 1164:     DivF     *Var[3] *Fixed[100.0] 
 1174:     DivF     *Var[4] *Fixed[100.0] 
 1184:     Add      *Var[0] *Var[3] 
 1194:     Add      *Var[1] *Var[4] 
 11A4:     Call     PlayEffect  	( 0000006E 00000000 *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 00000064 00000000 00000000 00000000 00000000 00000000 )
 11E8:     Call     $Function_80218000 ( 00000064 000000C8 )
 11FC:     Thread
 1204:        Call     ShakeCam    	( 00000001 00000000 00000064 *Fixed[0.30078125] )
 1220:     EndThread
 1228:     Thread
 1230:        Loop     0000000F 
 123C:           Call     RandInt     	( 00000096 *Var[3] )
 1250:           Call     RandInt     	( 00000064 *Var[4] )
 1264:           Add      *Var[3] 00000032 
 1274:           SetF     *Var[4] *Fixed[5.0] 
 1284:           Call     RandInt     	( 00000004 *Var[5] )
 1298:           AddF     *Var[4] *Var[5] 
 12A8:           DivF     *Var[4] *Fixed[10.0] 
 12B8:           SetF     *Var[5] *Fixed[100.0] 
 12C8:           Call     RandInt     	( 00000028 *Var[6] )
 12DC:           AddF     *Var[5] *Var[6] 
 12EC:           DivF     *Var[5] *Fixed[10.0] 
 12FC:           Call     PlayEffect  	( 00000074 00000000 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
 1340:           Call     RandInt     	( 00000005 *Var[0] )
 1354:           Add      *Var[0] 00000005 
 1364:           Wait     *Var[0] 
 1370:        EndLoop
 1378:     EndThread
 1380:     Wait     0000006E 
 138C:     Set      *Var[1] 00000000 
 139C:  EndIf
 13A4:  Call     StopSound ( 0000035D )
 13B4:  Wait     00000002 
 13C0:  Call     SetTargetActor ( FFFFFF81 00000000 )
 13D4:  Call     SetGoalToTarget 	( .Actor:Self )
 13E4:  Switch   *Var[1] 
 13F0:     Case     ==  00000000 
 13FC:        Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080764 00000007 00000020 )
 1424:     Case     ==  00000001 
 1430:        Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080664 00000006 00000020 )
 1458:     Case     ==  00000002 
 1464:        Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080564 00000005 00000020 )
 148C:     Case     ==  00000003 
 1498:        Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080464 00000004 00000020 )
 14C0:     Case     ==  00000004 
 14CC:        Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080364 00000003 00000020 )
 14F4:     Default
 14FC:        Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080264 00000002 00000020 )
 1524:  EndSwitch
 152C:  Switch   *Var[0] 
 1538:     CaseOR   ==  00000000 
 1544:     CaseOR   ==  00000002 
 1550:        Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
 1568:        Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
 1580:        Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
 1598:        Wait     00000014 
 15A4:     EndCaseGroup
 15AC:  EndSwitch
 15B4:  Call     UseIdleAnimation 	( .Actor:Self .True )
 15C8:  Return
 15D0:  End
}
 
@ $Script_GroupBodySlam { % Desperation attack: now done at 0HP
 [5038]  	Set  *Var[A]  0000000A 
 [5070]  	Add  *Var[A]  00000001 
 [5098]  	Add  *Var[A]  00000001 
 [50C0]  	Add  *Var[A]  00000001 
 [50E8]  	Add  *Var[A]  00000001 
 [5110]  	Add  *Var[A]  00000001  
 [5138]  	Add  *Var[A]  00000001 
 [5160]  	Add  *Var[A]  00000001 
 [5188]  	Add  *Var[A]  00000001  
 [51B0]  	Add  *Var[A]  00000001 
 [51D8]  	Add  *Var[A]  00000001
}

#new:Script $LoadModifiedActionCommand
{
	Call	LoadActionCommand 	( 00000005 )
	Call	$OverwriteTable ()
	Return
	End
}
	
#new:Function $OverwriteTable
{
	% push registers
	ADDIU	SP, SP, FFE0
	SW		RA, 10 (SP)
	SW		S1, 14 (SP)
	SW		S2, 18 (SP)
	% overwrite table at 802AA844
	LIO		S1, 802AA844
	ORI		S2, R0, 0040
	SW		S2, 0 (S1)
	ORI		S2, R0, 0050
	SW		S2, 4 (S1)
	ORI		S2, R0, 0060
	SW		S2, 8 (S1)
	ORI		S2, R0, 0070
	SW		S2, C (S1)
	ORI		S2, R0, 0080
	SW		S2, 10 (S1)
	SW		S2, 14 (S1)
	% return
	LW		RA, 10 (SP)
	LW		S1, 14 (SP)
	LW		S2, 18 (SP)
	ADDIU	V0, R0, 2
	JR		RA
	ADDIU	SP, SP, 20
}

@ $Script_ChargeThunder
{
    0:  UseArray $TuffPuffIDs 
    C:  Call     UseBattleCamPreset 	( 00000008 )
   1C:  Call     BattleCamTargetActor ( .Actor:Self )
   2C:  Call     SetBattleCamZoom  	( 000000B4 )
   3C:  Call     SetBattleCamOffsetZ 	( FFFFFFF6 )
   4C:  Call     MoveBattleCamOver 	( 0000001E )
   5C:  Wait     0000001E 
   68:  Call     UseIdleAnimation 	( .Actor:Self .False )
   7C:  Call     SetAnimation 	( .Actor:Self 00000002 007C002D )
   94:  Call     SetAnimation 	( .Actor:Self 00000003 007C002E )
   AC:  Call     ActorSpeak  	( 001100D1 .Actor:Self 00000001 007C002C 007C0001 ) % You asked for it... Now you'll witness the full po ...
   CC:  Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
   E4:  Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
   FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  110:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  128:  If  *Var[0]  &  00000010 
  138:  	Set  *Var[0]  *Array[4] 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  If  *Var[0]  &  00000200 
  16C:  	Set  *Var[0]  *Array[9] 
  17C:  	Goto     00000000 
  188:  EndIf
  190:  If  *Var[0]  &  00000008 
  1A0:  	Set  *Var[0]  *Array[3] 
  1B0:  	Goto     00000000 
  1BC:  EndIf
  1C4:  If  *Var[0]  &  00000020 
  1D4:  	Set  *Var[0]  *Array[5] 
  1E4:  	Goto     00000000 
  1F0:  EndIf
  1F8:  If  *Var[0]  &  00000002 
  208:  	Set  *Var[0]  *Array[1] 
  218:  	Goto     00000000 
  224:  EndIf
  22C:  If  *Var[0]  &  00000001 
  23C:  	Set  *Var[0]  *Array[0] 
  24C:  	Goto     00000000 
  258:  EndIf
  260:  If  *Var[0]  &  00000100 
  270:  	Set  *Var[0]  *Array[8] 
  280:  	Goto     00000000 
  28C:  EndIf
  294:  If  *Var[0]  &  00000004 
  2A4:  	Set  *Var[0]  *Array[2] 
  2B4:  	Goto     00000000 
  2C0:  EndIf
  2C8:  If  *Var[0]  &  00000080 
  2D8:  	Set  *Var[0]  *Array[7] 
  2E8:  	Goto     00000000 
  2F4:  EndIf
  2FC:  If  *Var[0]  &  00000040 
  30C:  	Set  *Var[0]  *Array[6] 
  31C:  	Goto     00000000 
  328:  EndIf
  330:  Goto     00000001 
  33C:  Label    00000000 
  348:  Call     BattleCamTargetActor ( *Var[0] )
  358:  Call     SetBattleCamZoom  	( 0000012C )
  368:  Call     SetBattleCamOffsetZ 	( FFFFFFF6 )
  378:  Call     MoveBattleCamOver 	( 0000001E )
  388:  Wait     0000001E 
  394:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  3B0:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  3CC:  If  *Var[1]  <  *Var[4] 
  3DC:  	SetF  *Var[7]  *Fixed[0.0] 
  3EC:  	Loop     0000000A 
  3F8:  		AddF  *Var[7]  *Fixed[18.0] 
  408:  		Call     SetActorYaw 	( *Var[0] *Var[7] )
  41C:  		Wait     00000001 
  428:  	EndLoop
  430:  EndIf
  438:  Call     UseIdleAnimation 	( *Var[0] .False )
  44C:  Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
  464:  If  *Var[1]  ==  00000000 
  474:  	Call     SetAnimation 	( *Var[0] 00000001 004C0009 )
  48C:  	Call     ActorSpeak  	( 001100D2 *Var[0] 00000001 004C0014 004C0002 ) % Master Huff N. Puff! Leave him to me!!
  4AC:  Else
  4B4:  	Call     ActorSpeak  	( 001100D2 *Var[0] 00000001 004C0015 004C0003 ) % Master Huff N. Puff! Leave him to me!!
  4D4:  EndIf
  4DC:  Call     UseIdleAnimation 	( *Var[0] .True )
		Call     GetActorHP  	( .Actor:Self *Var[9] )
		If *Var[9] < 30`
			ExecWait $Script_Thunderstorm
			Return
		EndIf
  4F0:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  50C:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  528:  If  *Var[1]  <  *Var[4] 
  538:  	SetF  *Var[7]  *Fixed[180.0] 
  548:  	Loop     0000000A 
  554:  		SubF  *Var[7]  *Fixed[18.0] 
  564:  		Call     SetActorYaw 	( *Var[0] *Var[7] )
  578:  		Wait     00000001 
  584:  	EndLoop
  58C:  EndIf
  594:  Label    00000001 
  5A0:  Call     UseBattleCamPreset 	( 00000002 )
  5B0:  Return
  5B8:  End
}

@ $Script_ShedTuffPuffs
{
    0:  UseArray  $TuffPuffIDs
    C:  Call  GetLastDamage ( .Actor:Self *Var9 )
   20:  If  *Var9  <=  00000000
   30:    Return
   38:  EndIf
   40:  Call  GetBattleFlags    ( *Var0 )
   50:  If  *Var0  &  00000240
   60:    If  *Var9  >  00000008
   70:      Set   *Var9  00000008
   80:    EndIf
   88:  Else
   90:    If  *Var9  >  00000004
   A0:      Set   *Var9  00000004
   B0:    EndIf
   B8:  EndIf
   C0:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   D4:  Switch  *Var0
   E0:    CaseOR  ==  .Event:Death % 20
   EC:    CaseOR  ==  .Event:BurnDeath % 24
   F8:      Return
  100:    EndCaseGroup
  108:  EndSwitch
  110:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  128:  Call  GetLastDamage ( .Actor:Self *Var8 )
  13C:  Mul   *Var8  00000001
  14C:  Sub   *Var0  *Var8
  15C:  If  *Var0  <  00000032
  16C:    Set   *Var0  00000032
  17C:  EndIf
  184:  Call  SetActorVar   ( .Actor:Self 00000006 *Var0 )
  19C:  Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  1B4:  Call  GetLastDamage ( .Actor:Self *Var8 )
  1C8:  Mul   *Var8  00000001
  1D8:  Sub   *Var0  *Var8
  1E8:  If  *Var0  <  00000032
  1F8:    Set   *Var0  00000032
  208:  EndIf
  210:  Call  SetActorVar       ( .Actor:Self 00000007 *Var0 )
  228:  ExecWait  $Script_80219CC0
  234:  Set   *VarA  00000000
  244:  Call  GetBattleFlags    ( *Var0 )
  254:  If  *Var0  &  00000240
  264:    Set   *Var0  *Var9
  274:    If  *Var0  >  00000001
  284:      Set   *VarA  *Var0
  294:      Div   *VarA  00000002
  2A4:      Set   *Var9  *Var0
  2B4:      Mod   *Var9  00000002
  2C4:      Add   *Var9  *VarA
  2D4:    EndIf
  2DC:  EndIf
  2E4:  Loop  *Var9
  2F0:    Call  $Function_802185D4 ( )
  2FC:    If  *VarA  >  00000000
  30C:      Sub   *VarA  00000001
  31C:      Call  SummonEnemy   ( $SpecialFormation_8021A370 00000000 )
  330:      Call  SetActorVar   ( *Var0 00000005 00000002 )
  348:    Else
  350:      Call  SummonEnemy   ( $SpecialFormation_8021A354 00000000 )
  364:      Call  SetActorVar   ( *Var0 00000005 00000001 )
  37C:    EndIf
  384:    Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  39C:    Call  $Function_80218440    ( *Var1 *Var2 )
  3B0:    Switch  *Var2
  3BC:      Case  ==  00000001
  3C8:        ConstOR  *Var1 00000001
  3D8:        Set   *Var2  00000000
  3E8:        Set   *Array[0]  *Var0
  3F8:      Case  ==  00000002
  404:        ConstOR  *Var1 00000002
  414:        Set   *Var2  00000001
  424:        Set   *Array[1]  *Var0
  434:      Case  ==  00000004
  440:        ConstOR  *Var1 00000004
  450:        Set   *Var2  00000002
  460:        Set   *Array[2]  *Var0
  470:      Case  ==  00000008
  47C:        ConstOR  *Var1 00000008
  48C:        Set   *Var2  00000003
  49C:        Set   *Array[3]  *Var0
  4AC:      Case  ==  00000010
  4B8:        ConstOR  *Var1 00000010
  4C8:        Set   *Var2  00000004
  4D8:        Set   *Array[4]  *Var0
  4E8:      Case  ==  00000020
  4F4:        ConstOR  *Var1 00000020
  504:        Set   *Var2  00000005
  514:        Set   *Array[5]  *Var0
  524:      Case  ==  00000040
  530:        ConstOR  *Var1 00000040
  540:        Set   *Var2  00000006
  550:        Set   *Array[6]  *Var0
  560:      Case  ==  00000080
  56C:        ConstOR  *Var1 00000080
  57C:        Set   *Var2  00000007
  58C:        Set   *Array[7]  *Var0
  59C:      Case  ==  00000100
  5A8:        ConstOR  *Var1 00000100
  5B8:        Set   *Var2  00000008
  5C8:        Set   *Array[8]  *Var0
  5D8:      Case  ==  00000200
  5E4:        ConstOR  *Var1 00000200
  5F4:        Set   *Var2  00000009
  604:        Set   *Array[9]  *Var0
  614:      Default
  61C:        Set   *Var2  FFFFFFFF
  62C:    EndSwitch
  634:    Call  SetActorVar       ( .Actor:Self 00000002 *Var1 )
  64C:    Call  PlaySoundAtActor  ( *Var0 .Sound:OpenShell )
  660:    Thread
  668:      Set   *Var3  *Var0
  678:      Call  MakeLerp      ( 00000096 000000FF 0000000F .Easing:QuadraticIn )
  694:      Label  7B
  6A0:      Call  UpdateLerp ( )
  6AC:      Call  SetPartAlpha  ( *Var3 00000001 *Var0 )
  6C4:      Wait  1`
  6D0:      If  *Var1  ==  00000001
  6E0:        Goto  7B
  6EC:      EndIf
  6F4:      Call  SetPartAlpha  ( *Var3 00000001 000000FF )
  70C:    EndThread
  714:    If  *Var2  !=  FFFFFFFF
  %724:      Call  CopyStatusEffects     ( .Actor:Self *Var0 )
 % 738:      Call  CopyBuffs     ( .Actor:Self *Var0 )
  74C:      Call  SetActorVar   ( *Var0 00000001 *Var2 )
  764:      Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  780:      Call  SetActorPos   ( *Var0 *Var3 *Var4 *Var5 )
  79C:      Add   *Var3  FFFFFFFB
  7AC:      Add   *Var4  00000000
  7BC:      Add   *Var5  00000000
  7CC:      Mul   *Var2  00000024
  7DC:      Add   *Var2  00000000
  7EC:      Call  $Function_802182A4    ( *Var3 *Var4 *Var5 *Var2 *Fixed[0.0] *Fixed[50.0] )
  810:      Thread
  818:        Call  SetActorJumpGravity   ( *Var0 *Fixed[0.8] )
  82C:        Call  SetGoalPos    ( *Var0 *Var3 *Var4 *Var5 )
  848:        Call  JumpToGoal    ( *Var0  30` .False .False .False )
  868:        Call  ForceHomePos  ( *Var0 *Var3 *Var4 *Var5 )
  884:        Call  HPBarToHome   ( *Var0 )
  894:      EndThread
  89C:    Else
  8A4:      Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  8C0:      Call  SetActorPos   ( *Var0 *Var3 *Var4 *Var5 )
  8DC:      Call  RandInt       ( 000000C8 *Var6 )
  8F0:      Sub   *Var6  00000064
  900:      Add   *Var3  *Var6
  910:      Add   *Var5  0000000A
  920:      Thread
  928:        Call  SetActorJumpGravity   ( *Var0 *Fixed[0.8] )
  93C:        Call  SetGoalPos    ( *Var0 *Var3  -30` *Var5 )
  958:        Call  JumpToGoal    ( *Var0  40` .False .False .False )
  978:        Call  RemoveActor   ( *Var0 )
  988:      EndThread
  990:    EndIf
  998:  EndLoop
  9A0:  Return
  9A8:  End
}

% ====================================================
% Tuff Puff
% + Increased max HP (1 -> 5)
% + 50% chance to spawn transparent
% ====================================================

@ $TuffPuff
{
[MaxHP]	5`b 
}

% Immediately vanishes owner of calling script.
#new:Function $Function_Vanish % ( duration )
{
	ADDIU	SP, SP, FFE0
	SW		RA, 10 (SP)
	SW		S1, 14 (SP)
	SW		S2, 18 (SP)
	% get turn count
	LW		A1, 0 (S0)
	JAL		~Func:get_variable
	DADDU	S1, A0, R0
	ANDI	V0, V0, 00FF
	% add electify status
	LW		A0, 148 (S1)
	JAL		~Func:get_actor
	DADDU	S2, V0, R0
	ORI		S2, S2, 0E00
	SH		S2, 218 (V0)
	% return
	LW		RA, 10 (SP)
	LW		S1, 14 (SP)
	LW		S2, 18 (SP)
	ADDIU	V0, R0, 2
	JR		RA
	ADDIU	SP, SP, 20
}

#define .PuffInv *GameByte[0BF] 	
	
@ $Script_Init_8022F780
{
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802305E8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022FA10 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022FE2C )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022FA00 )
   50:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   68:  If       *Var[0] ==  00000000 
   78:     Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   94:     Call     8027D4C8 ( FFFFFF81 00000002 FFFFFFFF FFFFFFF7 )
   B0:     Call     SetTargetOffset ( FFFFFF81 00000001 FFFFFFFF 00000009 )
   CC:     Call     SetTargetOffset ( FFFFFF81 00000002 FFFFFFFF FFFFFFD7 )
   E8:     Call     SetActorSize ( FFFFFF81 00000014 00000019 )
  100:     Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022F580 )
  118:     Call     SetAnimation 	( .Actor:Self 00000001 004C0002 )
  130:     Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  148:  Else
  150:     Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFF8 FFFFFFF3 )
  16C:     Call     8027D4C8 ( FFFFFF81 00000002 FFFFFFF8 FFFFFFF3 )
  188:     Call     SetTargetOffset ( FFFFFF81 00000001 00000001 0000000E )
  1A4:     Call     SetTargetOffset ( FFFFFF81 00000002 00000001 FFFFFFDC )
  1C0:     Call     SetActorSize ( FFFFFF81 0000001C 00000023 )
  1D8:     Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022F5DC )
  1F0:     Call     SetAnimation 	( .Actor:Self 00000001 004C0003 )
  208:     Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  220:  EndIf
  228:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  240:  Call     SetActorVar 	( .Actor:Self 00000003 00000064 )
  258:  Call     SetActorVar 	( .Actor:Self 00000004 00000064 )
		% Do we spawn invis or not?
		Switch 	.PuffInv
		Case == 0`
			Set .PuffInv 1`
    Case == 1`
      Set .PuffInv 2`
		Case == 2`
			Call	$Function_Vanish ( 2 )
			Set .PuffInv 0`
		EndSwitch
  270:  Return
  278:  End
}
