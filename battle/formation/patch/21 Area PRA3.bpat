
/%
	Duplighost
	Swoopula
	WhiteClubba
	RMagikoopa
	GRYMagikoopa
%/

#define .SpellStartX  -300`
#define .SpellStartY   300`

%======================================================
% White Clubba Changes

@ $WhiteClubba
{
% stats
[MaxHP]        14`b %beefy
[Escape]       40`b 
[Item]         0`b 
[AirLift]      0`b 
[Hurricane]    0`b % Bow's "Spook" as well
}

@ $DefenseTable_8022B17C
{
.Element:Normal 00000001 %trained, hardened, warriors but
.Element:Fire   FFFFFFFD %they still aint used to the heat
.Element:Ice    00000063 %why would you even try ice tho?
.Element:End
}

@ $StatusTable_8022B198
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      25`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   55`
.Status:Shrink     35`
.Status:Stop       50`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End
}

@ $Script_TakeTurn_8022B7FC
{
[514]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000006 00000020 ) %hits like a truck
[5F8]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000002 00000010 ) %get rekt by shrinky time
[6FC]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000002 00000040 ) %but if you block is bad
[800]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080432 00000005 00000020 ) %but oh well w. clubba cant win em all
}
 
% ====================================================
% Duplighost
% + Always copies as Ultra-rank
% ====================================================

@ $Duplighost
{
% stats
[Index]        3Bb 
[Level]        23`b 
[MaxHP]        20`b %I cant be bothered to give them a ton of attack for each member, so enjoy 25hp
[Escape]       40`b 
}

@ $GhostGoombario
{
[MaxHP] 20`b
[Escape]       40`b 
}

@ $GhostKooper
{
[MaxHP] 20`b
[Escape]       40`b 
}

@ $GhostBombette
{
[MaxHP] 20`b
[Escape]       40`b 
}

@ $GhostParakarry
{
[MaxHP] 20`b
[Escape]       40`b 
}

@ $GhostBow
{
[MaxHP] 20`b
[Escape]       40`b 
}

@ $GhostWatt
{
[MaxHP] 20`b
[Escape]       40`b 
}

@ $GhostSushie
{
[MaxHP] 20`b
[Escape]       40`b 
}

@ $GhostLakilester
{
[MaxHP] 20`b
[Escape]       40`b 
}

@ $Script_CopyPartner
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )    
   28:  Call     UseBattleCamPreset 	( 0000000E )
   38:  Call     BattleCamTargetActor ( .Actor:Self )
   48:  Wait     0000000F 
   54:  Call     PlaySoundAtActor 	( .Actor:Self 000020B8 )
   68:  Call     SetAnimation 	( .Actor:Self 00000001 004E0006 )
   80:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   9C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   B0:  If  *Var[A]  &  00080000 
   C0:  	Add  *Var[1]  00000008 
   D0:  	SetF  *Var[3]  *Fixed[0.40039062] 
   E0:  Else
   E8:  	Add  *Var[1]  00000014 
   F8:  	SetF  *Var[3]  *Fixed[1.0] 
  108:  EndIf
  110:  Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[1] *Var[2] *Var[3] 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  154:  Call     $Function_8021943C ( )
  160:  Call     MakeLerp    	( 00000000 000000C8 00000014 00000000 )
  17C:  Label    00000000 
  188:  Call     UpdateLerp  	( )
  194:  Call     $Function_80219480 ( *Var[0] )
  1A4:  Wait     00000001 
  1B0:  If  *Var[1]  ==  00000001 
  1C0:  	Goto     00000000 
  1CC:  EndIf
  1D4:  Wait     0000000A 
  1E0:  Call     $Function_GetPartner ( *Var[5] *Var[6] )
  1F4:  Call     $Function_80219524 ( *Var[5] )
  204:  Switch  *Var[5] 
  210:  	Case  ==  00000001 
  21C:  		Call     SummonEnemy 	( $SpecialFormation_8021D6E0 00000000 )
  230:  	Case  ==  00000002 
  23C:  		Call     SummonEnemy 	( $SpecialFormation_8021F394 00000000 )
  250:  	Case  ==  00000003 
  25C:  		Call     SummonEnemy 	( $SpecialFormation_802205F4 00000000 )
  270:  	Case  ==  00000004 
  27C:  		Call     SummonEnemy 	( $SpecialFormation_80221580 00000000 )
  290:  	Case  ==  00000009 
  29C:  		Call     SummonEnemy 	( $SpecialFormation_80222950 00000000 )
  2B0:  	Case  ==  00000006 
  2BC:  		Call     SummonEnemy 	( $SpecialFormation_8022384C 00000000 )
  2D0:  	Case  ==  00000007 
  2DC:  		Call     SummonEnemy 	( $SpecialFormation_802251E4 00000000 )
  2F0:  	Case  ==  00000008 
  2FC:  		Call     SummonEnemy 	( $SpecialFormation_80226484 00000000 )
  310:  EndSwitch
  318:  Set  *Var[A]  *Var[0] 
  328:  Call     CopyStatusEffects ( FFFFFF81 *Var[A] )
  33C:  Call     SetBattleVar 	( 00000003 *Var[5] )
  350:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SmokeBurst )
  364:  Thread
  36C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  	Add  *Var[1]  00000003 
  398:  	Add  *Var[2]  00000005 
  3A8:  	Loop     00000003 
  3B4:  		Call     PlayEffect  	( ~FX:BigSmokePuff *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3F8:  		Wait     00000003 
  404:  	EndLoop
  40C:  EndThread
  414:  Wait     00000005 
  420:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  43C:  Call     SetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  458:  Call     SetPartFlagBits 	( .Actor:Self 00000001 00020001 .True )
  474:  Call     SetPartFlagBits 	( .Actor:Self 00000001 00800000 .False )
  490:  Call     SetActorFlagBits 	( .Actor:Self 00400004 .True )
  4A8:  Call     GetActorHP  	( .Actor:Self *Var[0] )
  4BC:  Call     SetEnemyHP  	( *Var[A] *Var[0] )
  4D0:  Call     CopyBuffs ( .Actor:Self *Var[A] )
  4E4:  Call     GetOwnerID  	( *Var[0] )
  4F4:  Call     SetActorVar 	( *Var[A] 00000000 *Var[0] )
  50C:  Call     SetActorVar 	( *Var[A] 00000001 *Var[6] )
  524:  Wait     00000014 
  530:  Call     UseBattleCamPreset 	( 00000002 )
  540:  Call     MoveBattleCamOver 	( 00000014 )
  550:  Thread
  558:  	Call     MakeLerp    	( 000000C8 00000000 00000014 00000000 )
  574:  	Label    00000001 
  580:  	Call     UpdateLerp  	( )
  58C:  	Call     $Function_80219480 ( *Var[0] )
  59C:  	Wait     00000001 
  5A8:  	If  *Var[1]  ==  00000001 
  5B8:  		Goto     00000001 
  5C4:  	EndIf
  5CC:  EndThread
  5D4:  Call     SetActorSounds ( *Var[A] 00000002 00000000 00000000 )
  5F0:  Switch  *Var[5] 
  5FC:  	Case  ==  00000008 
  608:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  624:  		Call     SetActorJumpGravity 	( *Var[A] *Fixed[0.0107421875] )
  638:  		Call     SetGoalPos 	( *Var[A] *Var[0] 0000000A *Var[2] )
  654:  		Call     JumpToGoal  	( *Var[A] 0000000A 00000000 00000000 00000000 )
  674:  		Wait     0000000A 
  680:  	CaseOR  ==  00000006 
  68C:  	CaseOR  ==  00000009 
  698:  	CaseOR  ==  00000004 
  6A4:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  6C0:  		Call     SetActorJumpGravity 	( *Var[A] *Fixed[0.0107421875] )
  6D4:  		Call     SetGoalPos 	( *Var[A] *Var[0] 0000001E *Var[2] )
  6F0:  		Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000000 00000000 )
  710:  	EndCaseGroup
  718:  EndSwitch
  720:  Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  73C:  Call     ForceHomePos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  758:  Call     HPBarToHome 	( *Var[A] )
  768:  Call     ResetActorSounds ( *Var[A] 00000002 )
  77C:  Wait     00000014 
  788:  Call     SetActorPos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
  7A4:  Call     ForceHomePos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
  7C0:  Call     HPBarToHome 	( .Actor:Self )
  7D0:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  7E8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  810:  Return
  818:  End
  /%
  		Thread
			Wait     00000005 
			Call     PlaySoundAtActor    ( *Var[0] 0000206D )
			Call     PlaySoundAtActor    ( *Var[0] 00000214 )
			Wait     30` 
			Call     PlaySoundAtActor    ( *Var[0] 0000025C )
		EndThread
		Thread % added
			Call	8026BF48	( 00000001 )
			Call	HealActor	( *Var[0] 00000005 00000001 )
			Call	8026BF48	( 00000000 )
		EndThread % added
		%
		Call	GetActorAttackBoost ( *Var[0] *Var[1] )
		If  *Var[1]  <  5
			Call	PlaySoundAtActor	( *Var[0] 000002D8 )
			Thread % added
				Call	8026BF48	( 00000001 )
				Call	BoostAttack	( *Var[0] 0000005 )
				Call	8026BF48	( 00000000 )
			EndThread % added
		EndIf
		%/
}
  
@ $Script_LungeAttack
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseBattleCamPreset 	( 0000003F )
   4C:  Call     BattleCamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 004E0007 )
   8C:  Wait     00000014 
   98:  Call     SetActorSounds ( FFFFFF81 00000002 000002CB 00000000 )
   B4:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
   D8:  Switch  *Var[0] 
   E4:  	CaseOR  ==  00000006 
   F0:  	CaseOR  ==  00000005 
   FC:  		Set  *Var[A]  *Var[0] 
  10C:  		Call     UseBattleCamPreset 	( 00000002 )
  11C:  		Call     SetAnimation 	( .Actor:Self 00000001 004E0008 )
  134:  		Call     SetGoalToTarget 	( .Actor:Self )
  144:  		Call     AddGoalPos 	( .Actor:Self FFFFFF9C 00000000 00000000 )
  160:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  174:  		Call     JumpToGoal  	( .Actor:Self 00000011 00000000 00000001 00000000 )
  194:  		If  *Var[A]  ==  00000005 
  1A4:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  1C8:  		EndIf
  1D0:  		Wait     0000000A 
  1DC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F8:  		Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  214:  		Call     SetAnimation 	( .Actor:Self 00000001 004E0002 )
  22C:  		Call     ResetActorSounds ( FFFFFF81 00000002 )
  240:  		Wait     0000000F 
  24C:  		Call     YieldTurn ( )
  258:  		Call     SetActorYaw 	( .Actor:Self 000000B4 )
  26C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  288:  		ExecWait $Script_8021A1A0
  294:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  2AC:  		Call     SetActorYaw 	( .Actor:Self 00000000 )
  2C0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2D4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2E8:  		Return
  2F0:  	EndCaseGroup
  2F8:  EndSwitch
  300:  Call     SetAnimation 	( .Actor:Self 00000001 004E0008 )
  318:  Call     SetGoalToTarget 	( .Actor:Self )
  328:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  33C:  If  *Var[A]  &  00080000 
  34C:  	Call     AddGoalPos 	( .Actor:Self *Fixed[4.0] *Fixed[-6.0] 00000000 )
  368:  Else
  370:  	Call     AddGoalPos 	( .Actor:Self 0000000A FFFFFFF1 00000000 )
  38C:  EndIf
  394:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.30078125] )
  3A8:  Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  3C8:  Wait     00000002 
  3D4:  Call     SetGoalToTarget 	( .Actor:Self )
  3E4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000007 00000020 )
   Call	PlaySoundAtActor	( .Actor:Player 000002D8 )
			Thread % added
				Call	8026BF48	( 00000001 )
				Call	BoostDefense	( .Actor:Player FFFFFFFF )
				Call	8026BF48	( 00000000 )
			EndThread % added
  40C:  Switch  *Var[0] 
  418:  	CaseOR  ==  00000000 
  424:  	CaseOR  ==  00000002 
  430:  		Call     UseBattleCamPreset 	( 00000002 )
  440:  		Call     ResetActorSounds ( FFFFFF81 00000002 )
  454:  		Call     SetAnimation 	( .Actor:Self 00000001 004E0009 )
  46C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  488:  		Call     SetActorJumpGravity 	( .Actor:Self *Fixed[0.5] )
  49C:  		Add  *Var[0]  0000001E 
  4AC:  		Call     SetGoalPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  4C8:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  4E8:  		Add  *Var[0]  00000014 
  4F8:  		Call     SetGoalPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  514:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  534:  		Wait     0000000A 
  540:  		Call     YieldTurn ( )
  54C:  		ExecWait $Script_8021A1A0 
  558:  	EndCaseGroup
  560:  EndSwitch
  568:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  57C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  590:  Return
  598:  End
}

@ $Script_TakeTurn_80222FD0 {
  [698]  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 80010164 00000003 00000020 )
  [6D8]  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 80010164 00000004 00000020 )
  [718]  		Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000020 0000FFFF 80010164 00000005 00000020 )
}
  
@ $Function_GetPartner
{
[44] ADDIU	A2, R0, 2	% LB    A2, 15 (V0)
}

@ $Script_HandleEvent_8021F6D4 % Bombette no longer gets ohko'ed by explosions/fire
{
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastEvent 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		SetConst  *Var[0]  00000001 
   64:  		SetConst  *Var[1]  000B0012 
   74:  		ExecWait DoNormalHit 
   80:  	Case  ==  .Event:Hit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  000B0012 
   AC:  		ExecWait DoNormalHit 
   B8:  		Call     GetLastElement ( *Var[1] )
   C8:  		If  *Var[1]  &  00000020 
   D8:  			Call     SetAnimation 	( .Actor:Self 00000001 000B0013 )
   F0:  			Wait     00000014 
   % FC:  			ExecWait $Script_8021F55C_21 
  % 108:  			ExecWait $Script_8021AC7C_21 
  114:  			Call     UseBattleCamPreset 	( 00000002 )
  124:  			SetConst  *Var[0]  00000001 
  134:  			SetConst  *Var[1]  000B0014 
  144:  			Set  *Var[2]  FFFFCFC7 
 % 154:  			ExecWait DoDeath 
  160:  			Return
  168:  		EndIf
  170:  	Case  ==  .Event:BurnHit
  17C:  		SetConst  *Var[0]  00000001 
  18C:  		SetConst  *Var[1]  000B0013 
  19C:  		SetConst  *Var[2]  000B0014 
  1AC:  		ExecWait DoBurnHit 
  % 1B8:  		ExecWait $Script_8021F55C_21 
  % 1C4:  		ExecWait $Script_8021AC7C_21 
  1D0:  		SetConst  *Var[0]  00000001 
  1E0:  		SetConst  *Var[1]  000B0014 
  1F0:  		Set  *Var[2]  FFFFCFC7 
  % 200:  		ExecWait DoDeath 
  20C:  		Return
  214:  	Case  ==  .Event:BurnDeath
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  000B0013 
  240:  		SetConst  *Var[2]  000B0014 
  250:  		ExecWait DoBurnHit 
  25C:  		ExecWait $Script_8021F55C
  268:  		ExecWait $Script_8021AC7C 
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  000B0014 
  294:  		Set  *Var[2]  FFFFCFC7 
  2A4:  		ExecWait DoDeath 
  2B0:  		Return
  2B8:  	Case  ==  .Event:SpinSmashHit
  2C4:  		SetConst  *Var[0]  00000001 
  2D4:  		SetConst  *Var[1]  000B0012 
  2E4:  		ExecWait 8029B998 
  2F0:  	Case  ==  .Event:SpinSmashDeath
  2FC:  		ExecWait $Script_8021AC7C 
  308:  		SetConst  *Var[0]  00000001 
  318:  		SetConst  *Var[1]  000B0012 
  328:  		ExecWait 8029B998 
  334:  		SetConst  *Var[0]  00000001 
  344:  		SetConst  *Var[1]  000B0012 
  354:  		ExecWait DoDeath 
  360:  		Return
  368:  	CaseOR  ==  .Event:ShockHit
  374:  	CaseOR  ==  .Event:ShockDeath
  380:  		Call     HPBarToCurrent ( .Actor:Self )
  390:  		Call     SetAnimation 	( .Actor:Self 00000001 000B0013 )
  3A8:  		Wait     00000014 
  3B4:  		ExecWait $Script_8021F55C 
  3C0:  		ExecWait $Script_8021AC7C 
  3CC:  		Call     UseBattleCamPreset 	( 00000002 )
  3DC:  		SetConst  *Var[0]  00000001 
  3EC:  		SetConst  *Var[1]  000B0014 
  3FC:  		Set  *Var[2]  FFFFCFC7 
  40C:  		ExecWait DoDeath 
  418:  		Return
  420:  	EndCaseGroup
  428:  	CaseOR  ==  00000017
  434:  	CaseOR  ==  .Event:Immune
  440:  	CaseOR  ==  .Event:AirLiftFailed
  44C:  		SetConst  *Var[0]  00000001 
  45C:  		SetConst  *Var[1]  000B0004 
  46C:  		ExecWait DoImmune 
  478:  	EndCaseGroup
  480:  	Case  ==  .Event:Death
  48C:  		ExecWait $Script_8021AC7C 
  498:  		SetConst  *Var[0]  00000001 
  4A8:  		SetConst  *Var[1]  000B0012 
  4B8:  		ExecWait DoNormalHit 
  4C4:  		Wait     0000000A 
  4D0:  		SetConst  *Var[0]  00000001 
  4E0:  		SetConst  *Var[1]  000B0012 
  4F0:  		ExecWait DoDeath 
  4FC:  		Return
  504:  	Case  ==  .Event:RecoverStatus
  510:  		SetConst  *Var[0]  00000001 
  520:  		SetConst  *Var[1]  000B0004 
  530:  		ExecWait DoRecover 
  53C:  	Case  ==  .Event:ScareAway
  548:  		SetConst  *Var[0]  00000001 
  558:  		SetConst  *Var[1]  000B0008 
  568:  		SetConst  *Var[2]  000B0012 
  578:  		ExecWait DoScareAway 
  584:  		Return
  58C:  	Case  ==  .Event:BeginAirLift
  598:  		SetConst  *Var[0]  00000001 
  5A8:  		SetConst  *Var[1]  000B0008 
  5B8:  		ExecWait DoAirLift 
  5C4:  	Case  ==  .Event:BlowAway
  5D0:  		SetConst  *Var[0]  00000001 
  5E0:  		SetConst  *Var[1]  000B0012 
  5F0:  		ExecWait DoBlowAway 
  5FC:  		Return
  604:  	Default
  60C:  EndSwitch
  614:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  628:  Call     UseIdleAnimation 	( .Actor:Self .True )
  63C:  Return
  644:  End
}

% ====================================================
% Swoopula
% + Much faster blood sucking
% ====================================================

@ $Swoopula
{
% stats
[Index]        3Ab 
[Level]        22`b 
[MaxHP]         9`b 
[Escape]       40`b 
}

@ $Script_TakeTurn_80229DA4
{
[55C]	Wait     2	% was 21`
[830]  	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 18000000 00000000 00000000 00000005 00000040 ) 
[858]	Wait     3	% was 30` 
[954]	Loop     2	% was 21`
[F7C]   Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 1A000000 00000000 00000000 00000005 00000040 )  
[11B8]	Loop     4	% was 30` 
}

@ $Script_80228184
{
[694]	Wait     3	% was 21`
[954]  	Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 18000000 00000000 00000000 00000005 00000040 )
[97C]	Wait     6	% was 30`
[A78]	Loop     3	% was 21`
[184C]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 1A000000 00000000 00000000 00000005 00000040 ) 
[1A88]	Loop     6	% was 30`
}

% ====================================================
% RMagikoopa
% + Boosts attack by 2 per cast (+4 damage)
% + Shape spell flies in from off screen
% ====================================================

@ $Script_TakeTurn_8022E6A0
{
[C8]	If       *Var[4] <=  00000006			% maximum attack boost (was 3)
[6A8]	Call     BoostAttack ( *Var[8] 00000002 )	% Increase attack boost from +1 to +2 (damage boost = +4)]
}

@ $Script_RMagikoopa_ShapeSpell
{
[288]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[2B0]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[4A4]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[4CC]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
}

% ====================================================
% GRYMagikoopa
% + Shape spell flies in from off screen
% + Vanish lasts longer (2 -> 3 turns)
% + 50% chance to spawn transparent
% ====================================================

% Immediately vanishes owner of calling script.
#new:Function $Function_Vanish % ( duration )
{
	ADDIU	SP, SP, FFE0
	SW		RA, 10 (SP)
	SW		S1, 14 (SP)
	SW		S2, 18 (SP)
	% get turn count
	LW		A1, 0 (S0)
	JAL		~Func:get_variable
	DADDU	S1, A0, R0
	ANDI	V0, V0, 00FF
	% add electify status
	LW		A0, 148 (S1)
	JAL		~Func:get_actor
	DADDU	S2, V0, R0
	ORI		S2, S2, 0E00
	SH		S2, 218 (V0)
	% return
	LW		RA, 10 (SP)
	LW		S1, 14 (SP)
	LW		S2, 18 (SP)
	ADDIU	V0, R0, 2
	JR		RA
	ADDIU	SP, SP, 20
}

@ $Script_Init_80231218
{
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022F0D4 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80231360 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022F0E4 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If       *Var[0] ==  00000000 
   60:     Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   	% 50% chance to spawn with invisible status
	Call	RandInt	 ( 100` *Var[0] )
	If	*Var[0] > 50`
		Call	$Function_Vanish ( 2 )
	EndIf
   94:  Return
   9C:  End
}

@ $Script_Init_802312BC
{
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022F0D4 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80231360 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022FD04 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If       *Var[0] ==  00000000 
   60:     Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
    % 50% chance to spawn with invisible status
	Call	RandInt	 ( 100` *Var[0] )
	If	*Var[0] > 50`
		Call	$Function_Vanish ( 2 )
	EndIf
   94:  Return
   9C:  End
}

@ $Script_TakeTurn_80231360
{
[6A8]	Call     VanishActor 	( *Var[8] 00000003 ) % was 2
}
   
@ $Script_GRYMagikoopa_ShapeSpell
{
[288]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[2B0]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[4A4]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
[4CC]	Set      *Var[0] .SpellStartX
		Set      *Var[1] .SpellStartY
}

		#import BlueSpikeTop.bpat
		#import RogueStar.bpat
		
% ====================================================
% Formation Changes
% ====================================================

@ $Formation_00
{
$Swoopula $Vector3D_802324A0 0000000A 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_802324AC 00000009 00000000 00000000 00000000 00000000 
$Duplighost 00000002 00000008 00000000 00000000 00000000 00000000 
$BlueSpikeTop 00000003 00000007 00000000 00000000 00000000 00000000 % added
}

% previously unused, repruposed for miniboss in pra_13
@ $Formation_05
{
$Duplighost 00000001 0000000A 00000000 00000000 00000000 00000000 
$Duplighost 00000002 00000009 00000000 00000000 00000000 00000000 
$WhiteClubba 00000003 00000008 00000000 00000000 00000000 00000000 % changed
}

@ $Formation_08
{
$Duplighost 00000001 0000000A 00000000 00000000 00000000 00000000 
$Duplighost 00000002 00000009 00000000 00000000 00000000 00000000 
$BlueSpikeTop 00000003 00000008 00000000 00000000 00000000 00000000 
$RogueStar 00000007 00000007 00000000 00000000 00000000 00000000 % added
}

@ $Formation_0A
{
$Duplighost 00000000 0000000A 00000000 00000000 00000000 00000000 
$Duplighost 00000001 00000009 00000000 00000000 00000000 00000000 
$RogueStar 00000006 00000008 00000000 00000000 00000000 00000000 % added
$RogueStar 00000007 00000007 00000000 00000000 00000000 00000000 % added
}

#new:Formation $60sFormation7_0C
{
$Duplighost 00000001 0000000A 00000000 00000000 00000000 00000000
$Duplighost 00000002 00000009 00000000 00000000 00000000 00000000
$Swoopula $Vector3D_1 00000008 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_2 00000007 00000000 00000000 00000000 00000000 
}

@ $FormationTable
{
$SJIS_80232C54 00000004 $Formation_00 $Stage_80231B0C 00000000 % ***
$SJIS_80232C48 00000001 $Formation_01 $Stage_80231B0C 00000000 
$SJIS_80232C3C 00000002 $Formation_02 $Stage_80231B0C 00000000
$SJIS_80232C30 00000003 $Formation_03 $Stage_80231B0C 00000000 % unused
$SJIS_80232C24 00000004 $Formation_04 $Stage_80231B0C 00000000 
$SJIS_80232C04 00000003 $Formation_05 $Stage_80231B0C 00000000 % unused ***
$SJIS_80232BE0 00000003 $Formation_06 $Stage_80231B0C 00000000 % unused
$SJIS_80232BC8 00000002 $Formation_07 $Stage_80231B0C 00000000 % unused
$SJIS_80232BAC 00000004 $Formation_08 $Stage_80231B0C 00000000 % ***
$SJIS_80232B88 00000003 $Formation_09 $Stage_80231B0C 00000000 % unused
$SJIS_80232B5C 00000004 $Formation_0A $Stage_80231B0C 00000000 
$SJIS_80232B40 00000003 $Formation_0B $Stage_80231B0C 00000000 % unused
00000000 00000004 $60sFormation7_0C $AncientStage 00000000
00000000 00000000 00000000 00000000 00000000 % unused
}

#new:Stage $AncientStage
{
"kpa_tex"
"kmr_bt07_shape"
"kmr_bt07_hit"
$Script_BeforeBoss 
$Script_AfterBoss
00000000 
00000000
00000000 
00000000 
00000000 
}

#new:Script $Script_BeforeBoss
{
	Call	SetSpriteShading 	( FFFFFFFF )
	Call	SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End
}

#new:Script $Script_AfterBoss
{
	Return
	End 
}
	
#new:Vector3D $Vector3D_0
{
0` 133` -25`
}

#new:Vector3D $Vector3D_1
{
40` 133` -25`
}

#new:Vector3D $Vector3D_2
{
80` 133` -25`
}

#new:Vector3D $Vector3D_3
{
120` 133` -25`
}
