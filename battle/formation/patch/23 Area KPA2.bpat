
% ====================================================
% Intro Bowser
% + Altered turn dialog to account for double damage
% ====================================================


@ $Script_TakeTurn_8021FC14
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Add  *Var[0]  00000001 
	Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
		Case  <  00000003 
			ExecWait $Script_IntroClawSwipe 
		Case  ==  00000003 
			ExecWait $Script_IntroUseStarRod 
			ExecWait $Script_IntroClawSwipe 
		Case  ==  00000004 
			Call     UseBattleCamPreset 	( 0000000D )
			Call     BattleCamTargetActor ( .Actor:Self )
			Call     MoveBattleCamOver 	( 0000001E )
			Wait     0000001E 
			Call     ActorSpeak  	( 0000005B .Actor:Self 00000001 00810005 00810002 ) % Gwa ha ha ha ha ha! Is that all you've got? How sa ...
			ExecWait $Script_IntroClawSwipe 
		Case  ==  00000005 
			Call     UseBattleCamPreset 	( 0000000D )
			Call     BattleCamTargetActor ( .Actor:Self )
			Call     MoveBattleCamOver 	( 0000001E )
			Wait     0000001E 
			Call     ActorSpeak  	( 0000005C .Actor:Self 00000001 00810005 00810002 ) % Yup, just as I expected. Mario's no match for the  ...
			ExecWait $Script_IntroFireBreath 
	EndSwitch
	Return
	End
}


@ $Script_HandleEvent_8021F800
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetLastElement ( *Var[E] )
	Call     GetLastEvent 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
		Case  ==  .Event:BeginFirstStrike
		CaseOR  ==  .Event:HitCombo
		CaseOR  ==  .Event:Hit
			Set  *Var[1]  0081000D 
			ExecWait $Script_8021FBA0 
		EndCaseGroup
		Case  ==  .Event:BurnHit
			Set  *Var[1]  0081000D 
			ExecWait $Script_8021FBA0 
		CaseOR  ==  .Event:BurnDeath
			SetConst  *Var[1]  0081000D 
			ExecWait $Script_8021FBCC 
			Return
		Case  ==  .Event:SpinSmashHit
			Set  *Var[1]  0081000D 
			ExecWait $Script_8021FBA0 
		Case  ==  .Event:SpinSmashDeath
			SetConst  *Var[1]  0081000D 
			ExecWait $Script_8021FBCC 
			Return
		Case  ==  .Event:ShockHit
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  0081000D 
			ExecWait DoShockHit 
		Case  ==  .Event:ShockDeath
			SetConst  *Var[1]  0081000D 
			ExecWait $Script_8021FBCC 
			Return
		CaseOR  ==  00000017
		CaseOR  ==  .Event:Immune
			Call     80269E80 ( *Var[2] )
			Switch  *Var[2] 
				CaseOR  ==  00000012 
				CaseOR  ==  00000015 
					Call     SetAnimation 	( .Actor:Self 00000001 00810007 )
					Wait     0000001E 
				EndCaseGroup
				Default
					Set  *Var[1]  00810007 
					ExecWait $Script_80222B1C 
			EndSwitch
		EndCaseGroup
		Case  ==  .Event:SpikeTaunt
		Case  ==  .Event:Death
			SetConst  *Var[1]  0081000D 
			ExecWait $Script_8021FBCC 
			Return
		Case  ==  .Event:EndFirstStrike
		Case  ==  .Event:RecoverStatus
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  00810012 
			ExecWait DoRecover 
			Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
		Case  ==  00000030
			SetConst  *Var[0]  00000001 
			SetConst  *Var[1]  0081000D 
			ExecWait DoNormalHit 
			Wait     000003E8 
		Default
			SetConst  *Var[1]  0081000D 
			Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
			Wait     00000014 
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}


@ $Script_IntroClawSwipe
{
	Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
		Call     UseBattleCamPreset 	( 0000003F )
		Call     SetBattleCamZoom  	( 000000C8 )
		Call     BattleCamTargetActor ( .Actor:Self )
		Call     MoveBattleCamOver 	( 00000028 )
		Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Else
		Call     UseBattleCamPreset 	( 0000003F )
		Call     SetBattleCamZoom  	( 000000A0 )
		Call     SetBattleCamOffsetZ 	( 00000005 )
		Call     BattleCamTargetActor ( .Actor:Self )
		Call     MoveBattleCamOver 	( 00000028 )
		Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	EndIf
	Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
		Call     AddGoalPos 	( .Actor:Self 00000028 00000000 00000000 )
	Else
		Call     AddGoalPos 	( .Actor:Self 00000010 00000000 00000000 )
	EndIf
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00810009 )
	Wait     00000019 
	Call     SetAnimation 	( .Actor:Self 00000001 00810015 )
	Call     PlaySoundAtActor 	( .Actor:Self 0000035E )
	Wait     00000003 
	Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
	Switch  *Var[A] 
		CaseOR  ==  00000006 
		CaseOR  ==  00000005 
			Wait     00000014 
			Call     UseBattleCamPreset 	( 00000002 )
			Call     MoveBattleCamOver 	( 00000014 )
			ExecWait $Script_802257EC 
			If  *Var[A]  ==  00000005 
				Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
				Wait     0000001E 
			Else
				Wait     0000001E 
			EndIf
			Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
			Set  *Var[1]  00810003 
			ExecWait $Script_80222CD8 
			Return
		EndCaseGroup
		Default
	EndSwitch
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	If  *Var[1]  <  00000003 
		Set  *Var[0]  00000001 
		Call     80269EAC ( 0000000C )
		Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 *Var[0] 00000020 )
	Else
		Set  *Var[0]  00000003 
		Call     80269EAC ( 0000000C )
		Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 *Var[0] 00000020 )
	EndIf
	Call     UseBattleCamPreset 	( 00000002 )
	Call     MoveBattleCamOver 	( 00000014 )
	Thread
		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
		If  *Var[0]  >=  00000003 
			Call     SetNpcAnimation 	( 00000000 00D60007 )
		Else
			Call     SetNpcAnimation 	( 00000000 00D60006 )
		EndIf
		Wait     0000002D 
		Call     SetNpcAnimation 	( 00000000 00D60004 )
	EndThread
	Switch  *Var[F] 
		CaseOR  ==  00000000 
		CaseOR  ==  00000002 
		CaseOR  ==  0000000A 
			Wait     0000001E 
			If  *Var[F]  ==  0000000A 
				Return
			EndIf
			Call     UseBattleCamPreset 	( 00000002 )
			Call     MoveBattleCamOver 	( 00000014 )
			Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
			Set  *Var[1]  00810003 
			ExecWait $Script_80222CD8 
		EndCaseGroup
	EndSwitch
	Return
	End
}

% ====================================================
% Bowser I
% + Increased Defense 1 -> 2
% + Fixed healing amount to 30 HP
% + Moveset changes, All 3 fights will now have updated
% attacks. Bowser is an all around fighter, and excels in everything
% beware his fiery wrath.
% ====================================================

@ $Bowser1
{
[MaxHP] 60`b
[PowerBounce]  3`b 
}

@ $DefenseTable_80221504
{
.Element:Normal 00000002
.Element:End
}

% ===========
% AI CHANGES
% Firebreath no longer a seperate option
% ===========

@ $Script_80224570
{
    0:  Call     RandInt     	( 00000050 *Var[0] )
   14:  If  *Var[0]  <  00000014 
   24:  	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
   3C:  	If  *Var[0]  >=  00000002 
   4C:  		ExecWait $Script_DisableJump1 
   58:  		Return
   60:  	EndIf
   68:  EndIf
   70:  Call     RandInt     	( 0000003C *Var[0] )
   84:  If  *Var[0]  <  00000014 
   94:  	Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
   AC:  	If  *Var[0]  >=  00000002 
   BC:  		ExecWait $Script_ClawSwipe1 
   C8:  		Return
   D0:  	EndIf
   D8:  EndIf
   E0:  ExecWait $Script_DisableJump1 
   EC:  Return
   F4:  End
}

% =========================================================================
% Move Changes
% HP Increased (50 -> 60)
% DEF Increased (1 -> 2)
% Claw Swipe hits 3x now
% Stomp is speed up, damage normal/star rod 6/12 -> 9/18
% Fire Breath Normal/Star Rod Boost 8/16 -> 10/20 
% After Stomp or Claw, Fire Breath is used
% When low on HP (=< 40HP) use star rod and attack same turn
% =========================================================================
  
@ $Script_FireBreath1
{
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     SetGoalToTarget 	( .Actor:Self )
   24:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   38:  If  *Var[0]  !&  00080000 
   48:  	Call     UseBattleCamPreset 	( 00000013 )
   58:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   74:  	Sub  *Var[0]  0000001E 
   84:  	Add  *Var[1]  00000041 
   94:  	Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
   AC:  	Call     SetBattleCamZoom  	( 00000190 )
   BC:  	Call     MoveBattleCamOver 	( 00000028 )
   CC:  Else
   D4:  	Call     UseBattleCamPreset 	( 00000013 )
   E4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  100:  	Sub  *Var[0]  0000001E 
  110:  	Add  *Var[1]  0000002D 
  120:  	Call     SetBattleCamTarget 	( *Var[0] *Var[1] *Var[2] )
  138:  	Call     SetBattleCamZoom  	( 0000015E )
  148:  	Call     MoveBattleCamOver 	( 00000028 )
  158:  EndIf
  160:  Call     SetAnimation 	( .Actor:Self 00000001 00810016 )
  178:  Wait     00000023 
  184:  Call     SetAnimation 	( .Actor:Self 00000001 00810017 )
  19C:  Call     UseBattleCamPreset 	( 00000002 )
  1AC:  Call     MoveBattleCamOver 	( 00000037 )
  1BC:  Wait     0000000A 
  1C8:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[3] )
  1E0:  Call     GetStatusFlags ( .Actor:Self *Var[4] )
  1F4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  210:  If  *Var[3]  &  00040000 
  220:  	If  *Var[4]  !&  00080000 
  230:  		Sub  *Var[0]  00000046 
  240:  		Add  *Var[1]  00000023 
  250:  	Else
  258:  		Sub  *Var[0]  0000001C 
  268:  		Add  *Var[1]  0000000E 
  278:  	EndIf
  280:  Else
  288:  	If  *Var[4]  !&  00080000 
  298:  		Sub  *Var[0]  00000032 
  2A8:  		Add  *Var[1]  00000021 
  2B8:  	Else
  2C0:  		Sub  *Var[0]  00000014 
  2D0:  		Add  *Var[1]  0000000D 
  2E0:  	EndIf
  2E8:  EndIf
  2F0:  Add  *Var[2]  0000000A 
  300:  Call     SetGoalToTarget 	( .Actor:Self )
  310:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  Sub  *Var[3]  00000028 
  33C:  Set  *Var[4]  00000014 
  34C:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[6] )
  364:  If  *Var[6]  &  00040000 
  374:  	Call     PlayEffect  	( ~FX:FireBreath:Large *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000032 00000001 00000018 00000000 00000000 00000000 )
  3B8:  Else
  3C0:  	Call     PlayEffect  	( ~FX:FireBreath:Tiny *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] 00000032 00000001 00000018 00000000 00000000 00000000 )
  404:  	Call     $Function_8021A254 ( *Var[F] )
  414:  EndIf
  41C:  Thread
  424:  	Call     $Function_80218F00 ( 00000032 00000094 )
  438:  	Call     PlaySound   	( 000003BD )
  448:  	Wait     00000046 
  454:  	Call     PlaySound   	( 000007BD )
  464:  EndThread
  46C:  Wait     0000000A 
  478:  Call     SetGoalToTarget 	( .Actor:Self )
  488:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  4AC:  Switch  *Var[A] 
  4B8:  	CaseOR  ==  00000006 
  4C4:  	CaseOR  ==  00000005 
  4D0:  		Wait     0000000A 
  4DC:  		Call     SetAnimation 	( .Actor:Self 00000001 00810018 )
  4F4:  		Wait     0000001E 
  500:  		Call     SetAnimation 	( .Actor:Self 00000001 00810019 )
  518:  		Wait     0000000F 
  524:  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  53C:  		Wait     0000001E 
  548:  		ExecWait $Script_802257EC 
  554:  		If  *Var[A]  ==  00000005 
  564:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  588:  		EndIf
  590:  		Wait     0000001E 
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Wait     00000002 
  5C8:  Call     SetGoalToTarget 	( .Actor:Self )
  5D8:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[0] )
  5F0:  If  *Var[0]  &  00040000 
  600:  	Set  *Var[0]  00000012 
  610:  Else
  618:  	Set  *Var[0]  0000000A 
  628:  EndIf
  630:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000002 0000FFFF 00000000 *Var[0] 00000020 )
  658:  Switch  *Var[F] 
  664:  	CaseOR  ==  00000000 
  670:  	CaseOR  ==  00000002 
  67C:  	CaseOR  ==  0000000A 
  688:  		Wait     0000000A 
  694:  		Call     SetAnimation 	( .Actor:Self 00000001 00810018 )
  6AC:  		Wait     0000001E 
  6B8:  		Call     SetAnimation 	( .Actor:Self 00000001 00810019 )
  6D0:  		Wait     0000000F 
  6DC:  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  6F4:  		Wait     0000001E 
  700:  		If  *Var[F]  ==  0000000A 
  710:  			Return
  718:  		EndIf
  720:  	EndCaseGroup
  728:  EndSwitch
  730:  Return
  738:  End
}

@ $Script_ClawSwipe1
{
    0:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
   18:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   2C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   40:  If  *Var[0]  !&  00080000 
   50:  	Call     UseBattleCamPreset 	( 0000003F )
   60:  	Call     SetBattleCamZoom  	( 000000C8 )
   70:  	Call     BattleCamTargetActor ( .Actor:Self )
   80:  	Call     MoveBattleCamOver 	( 00000028 )
   90:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call     UseBattleCamPreset 	( 0000003F )
   C0:  	Call     SetBattleCamZoom  	( 000000A0 )
   D0:  	Call     SetBattleCamOffsetZ 	( 00000005 )
   E0:  	Call     BattleCamTargetActor ( .Actor:Self )
   F0:  	Call     MoveBattleCamOver 	( 00000028 )
  100:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  138:  Call     SetGoalToTarget 	( .Actor:Self )
  148:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  15C:  If  *Var[0]  !&  00080000 
  16C:  	Call     AddGoalPos 	( .Actor:Self 00000028 00000000 00000000 )
  188:  Else
  190:  	Call     AddGoalPos 	( .Actor:Self 00000010 00000000 00000000 )
  1AC:  EndIf
  1B4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  1C8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
		Call     GetActorVar 	( .Actor:Self 0000000C *Var[9] )
		Loop 3
		Add *Var[9] 1`
  1E0:  Call     SetAnimation 	( .Actor:Self 00000001 00810009 )
  1F8:  Wait     00000019 
  204:  Call     SetAnimation 	( .Actor:Self 00000001 00810015 )
  21C:  Call     PlaySoundAtActor 	( .Actor:Self 0000035E )
  230:  Wait     00000003 
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  23C:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  260:  Switch  *Var[A] 
  26C:  	CaseOR  ==  00000006 
  278:  	CaseOR  ==  00000005 
  284:  		Wait     00000014 
  290:  		Call     UseBattleCamPreset 	( 00000002 )
  2A0:  		Call     MoveBattleCamOver 	( 00000014 )
  2B0:  		ExecWait $Script_802257EC 
  2BC:  		If  *Var[A]  ==  00000005 
  2CC:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2F0:  			Wait     0000001E 
  2FC:  		Else
  304:  			Wait     0000001E 
  310:  		EndIf
				If *Var[9] == 3`
  318:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  32C:  			Set  *Var[1]  00810003 
  33C:  			ExecWait $Script_80222CD8 
					Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
				Else
  348:  			Goto 00000004
				EndIf
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait     00000002 
  374:  Call     SetGoalToTarget 	( .Actor:Self )
  384:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[0] )
   Call     GetStatusFlags   ( .Actor:Player *Var[B] )
        If *Var[B] & 04000000
          Goto 00000006
        EndIf
  39C:  If  *Var[0]  &  00040000 
  3AC:  	Set  *Var[0]  0000000C 
  3BC:  	Call     80269EAC ( 0000000C )
  3CC:  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 80020364 *Var[0] 00000020 )
  3F4:  Else
  3FC:  	Set  *Var[0]  00000006 
  40C:  	Call     80269EAC ( 0000000C )
  41C:  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 80020364 *Var[0] 00000020 )
  444:  EndIf
    Label 00000004
	 Call     GetPlayerHP 	( *Var[8] ) % If player's dead, have mercy
		If       *Var[8] <=  00000000 
		Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
		Goto 00000005
		EndIf
	Label 00000006
  EndLoop
  Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
  Label 00000005
  44C:  Call     UseBattleCamPreset 	( 00000002 )
  45C:  Call     MoveBattleCamOver 	( 00000014 )
  46C:  Switch  *Var[F] 
  478:  	CaseOR  ==  00000000 
  484:  	CaseOR  ==  00000002 
  490:  	CaseOR  ==  0000000A 
  49C:  		Wait     0000001E 
  4A8:  		If  *Var[F]  ==  0000000A 
  4B8:  			Return
  4C0:  		EndIf
  4C8:  		Call     UseBattleCamPreset 	( 00000002 )
  4D8:  		Call     MoveBattleCamOver 	( 00000014 )
  4E8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  4FC:  		Set  *Var[1]  00810003 
  50C:  		ExecWait $Script_80222CD8 
  518:  	EndCaseGroup
  520:  EndSwitch
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================  
  ExecWait $Script_FireBreath1
  528:  Return
  530:  End  
}

@ $Script_DisableJump1 {
    0:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
   18:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   2C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   40:  If  *Var[0]  !&  00080000 
   50:  	Call     UseBattleCamPreset 	( 0000003F )
   60:  	Call     SetBattleCamZoom  	( 0000012C )
   70:  	Call     SetBattleCamOffsetZ 	( 00000024 )
   80:  	Call     BattleCamTargetActor ( .Actor:Self )
   90:  	Call     MoveBattleCamOver 	( 00000028 )
   A0:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:  	Call     UseBattleCamPreset 	( 0000003F )
   D0:  	Call     SetBattleCamZoom  	( 000000F0 )
   E0:  	Call     SetBattleCamOffsetZ 	( 0000000E )
   F0:  	Call     BattleCamTargetActor ( .Actor:Self )
  100:  	Call     MoveBattleCamOver 	( 00000028 )
  110:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  148:  Call     SetGoalToTarget 	( .Actor:Self )
  158:  Call     AddGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
  174:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  188:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  1B8:  Wait     0000000F 
  1C4:  Call     SetAnimation 	( .Actor:Self 00000001 00810011 )
  1DC:  Wait     00000003 
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 00810012 )
  200:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  214:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  238:  Switch  *Var[A] 
  244:  	CaseOR  ==  00000006 
  250:  	CaseOR  ==  00000005 
  25C:  		Call     SetGoalToTarget 	( .Actor:Self )
  26C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  288:  		Sub  *Var[0]  0000001E 
  298:  		Set  *Var[1]  00000000 
  2A8:  		Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  2C4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E0:  		Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  300:  		Thread
  308:  			Call     $Function_80218F00 ( 00000050 0000000E )
  31C:  			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  338:  		EndThread
  340:  		Sub  *Var[0]  00000023 
  350:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  		Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
  38C:  		Thread
  394:  			Call     $Function_80218F00 ( 00000050 0000000E )
  3A8:  			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[2.0] )
  3C4:  		EndThread
  3CC:  		Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  3E4:  		Wait     00000003 
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  408:  		Wait     00000019 
  414:  		Call     UseBattleCamPreset 	( 00000002 )
  424:  		If  *Var[A]  ==  00000005 
  434:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  458:  		EndIf
  460:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  474:  		Set  *Var[1]  00810003 
  484:  		ExecWait $Script_80222CD8 
  490:  		Return
  498:  	EndCaseGroup
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call     SetGoalToTarget 	( .Actor:Self )
  4C0:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  Thread
  4E8:  	Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  504:  EndThread
  50C:  Wait     00000002 
  518:  Call     SetGoalToTarget 	( .Actor:Self )
  528:  Call     SetAnimation 	( .Actor:Self 00000001 00810013 )
  540:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[1] )
  558:  If  *Var[1]  &  00080000 
  568:  	Set  *Var[0]  00000012 
  578:  Else
  580:  	Set  *Var[0]  00000009 
  590:  EndIf
  598:  Call     GetStatusFlags ( .Actor:Self *Var[F] )
  5AC:  If  *Var[F]  !&  00080000 
  5BC:  	Call     80269EAC ( 00000018 )
  5CC:  EndIf
  5D4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 *Var[0] 00000020 )
  5FC:  Set  *Var[0]  FFFFFFFF 
  60C:  Call     GetBattleFlags ( *Var[1] )
  61C:  If  *Var[1]  !&  80000000 
  62C:  	Call     GetStatusFlags ( .Actor:Player *Var[1] )
  640:  	If  *Var[1]  !&  40100000 
  650:  		Call     GetStatusFlags ( .Actor:Self *Var[1] )
  664:  		If  *Var[1]  !&  00080000 
  674:  			Call     $Function_8021A1B8 ( *Var[0] )
  684:  		EndIf
  68C:  	EndIf
  694:  EndIf
  69C:  If  *Var[0]  !=  FFFFFFFF 
  6AC:  	Call     LandJump ( FFFFFF81 )
  6BC:  	Call     $Function_80218F00 ( 00000050 0000000E )
  6D0:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  6E4:  	Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  6FC:  	Exec     $Script_8022469C 
  708:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  724:  	Add  *Var[0]  00000034 
  734:  	Set  *Var[1]  00000000 
  744:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  760:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  780:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  794:  	Thread
  79C:  		Call     $Function_80218F00 ( 00000050 0000000E )
  7B0:  		Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  7CC:  	EndThread
  7D4:  	Add  *Var[0]  0000001E 
  7E4:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  800:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  820:  	Thread
  828:  		Call     $Function_80218F00 ( 00000050 0000000E )
  83C:  		Call     ShakeCam    	( 00000001 00000000 00000003 *Fixed[2.0] )
  858:  	EndThread
  860:  	Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  878:  	Wait     00000003 
  884:  	Label    00000000 
  890:  	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
  8A8:  	If  *Var[0]  !=  00000000 
  8B8:  		Wait     00000001 
  8C4:  		Goto     00000000 
  8D0:  	EndIf
  8D8:  	Wait     00000008 
  8E4:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  8F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  910:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  928:  	Call     $Function_80219F5C ( *Var[0] *Var[1] *Var[2] *Var[3] )
  944:  	Add  *Var[1]  0000001E 
  954:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  968:  	Call     SetGoalPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  984:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  99C:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  9B4:  	Wait     00000008 
  9C0:  	Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  9F0:  	Wait     00000002 
  9FC:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  A14:  	Call     $Function_80219F5C ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A30:  	Call     SetActorVar 	( .Actor:Self 00000009 00000002 )
  A48:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  AE4:  	Wait     00000004 
  AF0:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  B08:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  B20:  	Wait     00000002 
  B2C:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  BC8:  	Wait     00000004 
  BD4:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  BEC:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  C04:  	Wait     00000002 
  C10:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  CAC:  	Wait     00000014 
  CB8:  	Call     SetAnimation 	( .Actor:Self 00000001 00810007 )
  CD0:  	Wait     00000014 
  CDC:  	Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:  	Call     GetBattleFlags ( *Var[1] )
  D0C:  	If  *Var[1]  !&  80000000 
  D1C:  		Call     GetStatusFlags ( .Actor:Player *Var[1] )
  D30:  		If  *Var[1]  !&  00100000 
  D40:  			Call     GetStatusFlags ( .Actor:Self *Var[1] )
  D54:  			If  *Var[1]  !&  00080000 
  D64:  				Call     LandJump ( FFFFFF81 )
  D74:  			EndIf
  D7C:  		EndIf
  D84:  	EndIf
  D8C:  	Call     $Function_80218F00 ( 00000050 0000000E )
  DA0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DBC:  	Add  *Var[0]  00000028 
  DCC:  	Set  *Var[1]  00000000 
  DDC:  	Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  DF8:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E14:  	Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  E34:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  E48:  	Thread
  E50:  		Call     $Function_80218F00 ( 00000050 0000000E )
  E64:  		Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  E80:  	EndThread
  E88:  	Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  EA0:  	Wait     00000003 
  EAC:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  EC4:  	Wait     00000014 
  ED0:  EndIf
  ED8:  If  *Var[F]  ==  0000000A 
  EE8:  	Return
  EF0:  EndIf
  EF8:  Call     UseBattleCamPreset 	( 00000002 )
  F08:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  F1C:  Set  *Var[1]  00810003 
  F2C:  ExecWait $Script_80222CD8
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================  
  ExecWait $Script_FireBreath1  
  F38:  Return
  F40:  End
}
   
@ $Script_Shockwave1
{
[860]	Set  *Var[1] 00000001
[878]	Set  *Var[1] 00000001
%Mario
[8FC]  	Set  *Var[1] 00000008 
[914]  	Set  *Var[1] 00000008
}

@ $Script_HealSelf1
{
[4E4]	Call	HealActor	( .Actor:Self 30` 00000000 )
}

@ $Script_80222E48
{
    0:  Call     $Function_802192FC ( )
    C:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   20:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   3C:  If  *Var[3]  !&  00080000 
   4C:  	Add  *Var[0]  0000000F 
   5C:  	Add  *Var[1]  0000005A 
   6C:  	Thread
   74:  		Call     PlaySoundAtActor 	( .Actor:Self 00002123 )
   88:  		Add  *Var[2]  0000000A 
   98:  		Call     $Function_80219444 ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.05078125] )
   B8:  	EndThread
   C0:  Else
   C8:  	Add  *Var[0]  00000006 
   D8:  	Add  *Var[1]  00000024 
   E8:  	Thread
   F0:  		Call     PlaySoundAtActor 	( .Actor:Self 00002123 )
  104:  		Add  *Var[2]  0000000A 
  114:  		Call     $Function_80219444 ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.020507812] )
  134:  	EndThread
  13C:  EndIf
  144:  Wait     00000041 
  150:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  16C:  If  *Var[3]  !&  00080000 
  17C:  	Add  *Var[0]  0000000F 
  18C:  	Sub  *Var[2]  00000003 
  19C:  	Call     PlayEffect  	( ~FX:LightRays:SharpA *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Sub  *Var[2]  00000003 
  234:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 0000005A *Var[2] *Fixed[1.0] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:  	Add  *Var[0]  00000006 
  290:  	Sub  *Var[2]  00000003 
  2A0:  	Call     PlayEffect  	( ~FX:LightRays:SharpA *Var[0] 00000024 *Var[2] *Fixed[0.40039062] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000024 *Var[2] *Fixed[0.40039062] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:  	Sub  *Var[2]  00000003 
  338:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000024 *Var[2] *Fixed[0.40039062] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call     PlaySoundAtActor 	( .Actor:Self 00002121 )
  398:  Wait     0000001E 
  3A4:  Call     RemoveEffect 	( *Var[F] )
  3B4:  Call     RemoveEffect 	( *Var[E] )
  3C4:  Call     RemoveEffect 	( *Var[D] )
  3D4:  Call     SetPartEventBits 	( .Actor:Self 00000001 00040000 .True )
  3F0:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80221510 )
  424:  Call     SetStatusTable ( .Actor:Self $StatusTable_802215C8 )
  438:  Call     $Function_80219414 ( )
  444:  Wait     00000003 
  450:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  464:  If  *Var[3]  !&  00080000 
  474:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  490:  	Add  *Var[1]  00000028 
  4A0:  	Add  *Var[2]  0000000C 
  4B0:  	Call     PlayEffect  	( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 00000046 00000050 00000019 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:  	Add  *Var[1]  00000010 
  528:  	Add  *Var[2]  0000000C 
  538:  	Call     PlayEffect  	( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 0000001C 00000020 0000000A 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call     PlaySoundAtActor 	( .Actor:Self 00002125 )
  598:  Thread
  5A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5BC:  	Call     $Function_80219818 ( *Var[0] *Var[1] *Var[2] *Fixed[0.80078125] )
  5D8:  EndThread
  5E0:  Wait     0000004B 
  5EC:  Thread
  5F4:  	Call     $Function_80219394 ( )
  600:  EndThread
  608:  Call     SetAnimation 	( .Actor:Self 00000001 00810008 )
  620:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  634:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  650:  If  *Var[3]  !&  00080000 
  660:  	Add  *Var[1]  00000028 
  670:  Else
  678:  	Add  *Var[1]  00000010 
  688:  EndIf
  690:  Call     PlayEffect  	( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call     PlaySoundAtActor 	( .Actor:Self 00002124 )
  6E8:  Call     UseBattleCamPreset 	( 00000002 )
  6F8:  Call     MoveBattleCamOver 	( 00000027 )
  708:  Wait     0000001E 
  % =========================================================
  % If HP is at 40 or lower, attack immediately after buff
  % =========================================================
    Call     GetActorHP  	( .Actor:Self *Var[9] )
	 If *Var[9] <= 30`
			Call     RandInt     	( 00000001 *Var[8] )
			If  *Var[8]  == 00000000
			ExecWait $Script_DisableJump1
			Else
			ExecWait $Script_ClawSwipe1
			EndIf
	 EndIf
  714:  Return
  71C:  End
}

% ====================================================
% Bowser II
% + Increased HP (99 -> 120)
% + Increased DEF (2 -> 3)
% + raised partner damage from shockwave (3 -> 4)
% + Fixed healing amount to 50 HP
% + Increased Jump Damage (8/16 -> 10/20)
% + Increased Jump Speed by 75% (8.0 -> 14.0)
% + Claw Swipe loops 3x, poison turn increase (3 -> 5)
% + Fire Breath attack triggers after claw or stomp
% + When low on HP (<= 60HP) uses star rod and attacks same turn
% ====================================================

@ $Bowser2
{
[MaxHP] 99`b
[PowerBounce]  3`b 
}

@ $DefenseTable_802275B4
{
.Element:Normal 00000003
.Element:End
}

@ $Script_80229DC0
{
    0:  Call     RandInt     	( 00000050 *Var[0] )
   14:  If  *Var[0]  <  00000014 
   24:  	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
   3C:  	If  *Var[0]  >=  00000002 
   4C:  		ExecWait $Script_DisableJump2 
   58:  		Return
   60:  	EndIf
   68:  EndIf
   70:  Call     RandInt     	( 0000003C *Var[0] )
   84:  If  *Var[0]  <  00000014 
   94:  	Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
   AC:  	If  *Var[0]  >=  00000002 
   BC:  		ExecWait $Script_ClawSwipe2 
   C8:  		Return
   D0:  	EndIf
   D8:  EndIf
   E0:  ExecWait $Script_DisableJump2
   EC:  Return
   F4:  End
}

% ===============
% ATTACK CHANGES
% ===============
  
@ $Script_ClawSwipe2
{
    0:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
   18:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   2C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   40:  If  *Var[0]  !&  00080000 
   50:  	Call     UseBattleCamPreset 	( 0000003F )
   60:  	Call     SetBattleCamZoom  	( 000000C8 )
   70:  	Call     BattleCamTargetActor ( .Actor:Self )
   80:  	Call     MoveBattleCamOver 	( 00000028 )
   90:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call     UseBattleCamPreset 	( 0000003F )
   C0:  	Call     SetBattleCamZoom  	( 000000A0 )
   D0:  	Call     SetBattleCamOffsetZ 	( 00000005 )
   E0:  	Call     BattleCamTargetActor ( .Actor:Self )
   F0:  	Call     MoveBattleCamOver 	( 00000028 )
  100:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  138:  Call     SetGoalToTarget 	( .Actor:Self )
  148:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  15C:  If  *Var[0]  !&  00080000 
  16C:  	Call     AddGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
  188:  Else
  190:  	Call     AddGoalPos 	( .Actor:Self 00000018 00000000 00000000 )
  1AC:  EndIf
  1B4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  1C8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  		Call     GetActorVar 	( .Actor:Self 0000000C *Var[9] )
		Loop 3
		Add *Var[9] 1`
  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  		Wait 00000010
  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  		Wait 00000015
  1E0:  Call     SetAnimation 	( .Actor:Self 00000001 00810009 )
  1F8:  Wait     00000019 
  204:  Call     SetAnimation 	( .Actor:Self 00000001 00810015 )
  21C:  Call     PlaySoundAtActor 	( .Actor:Self 0000035E )
  230:  Wait     00000003 
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  23C:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  260:  Switch  *Var[A] 
  26C:  	CaseOR  ==  00000006 
  278:  	CaseOR  ==  00000005 
  284:  		Wait     00000014 
  290:  		Call     UseBattleCamPreset 	( 00000002 )
  2A0:  		Call     MoveBattleCamOver 	( 00000014 )
  2B0:  		ExecWait $Script_8022B03C 
  2BC:  		If  *Var[A]  ==  00000005 
  2CC:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2F0:  			Wait     0000001E 
  2FC:  		Else
  304:  			Wait     0000001E 
  310:  		EndIf
				If *Var[9] == 3`
  318:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  32C:  			Set  *Var[1]  00810003 
  33C:  			ExecWait $Script_80222CD8 
					Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
				Else
  348:  			Goto 00000004
				EndIf
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait     00000002 
  374:  Call     SetGoalToTarget 	( .Actor:Self )
  384:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[0] )
   Call     GetStatusFlags   ( .Actor:Player *Var[B] )
        If *Var[B] & 04000000
          Goto 00000006
        EndIf
  39C:  If  *Var[0]  &  00080000 
  3AC:  	Set  *Var[0]  0000000E 
  3BC:  	Call     80269EAC ( 0000000C )
  3CC:  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 80020564 *Var[0] 00000020 )
  3F4:  Else
  3FC:  	Set  *Var[0]  00000007 
  40C:  	Call     80269EAC ( 0000000C )
  41C:  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 80020564 *Var[0] 00000020 )
  444:  EndIf
     Label 00000004
	 Call     GetPlayerHP 	( *Var[8] ) % If player's dead, have mercy
		If       *Var[8] <=  00000000 
		Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
		Goto 00000005
		EndIf
	Label 00000006
  EndLoop
  Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
  Label 00000005
  Call     SetGoalToTarget 	( .Actor:Self )
  44C:  Switch  *Var[F] 
  458:  	CaseOR  ==  00000000 
  464:  	CaseOR  ==  00000002 
  470:  	CaseOR  ==  0000000A 
  47C:  		Wait     0000001E 
  488:  		If  *Var[F]  ==  0000000A 
  498:  			Return
  4A0:  		EndIf
  4A8:  		Call     UseBattleCamPreset 	( 00000002 )
  4B8:  		Call     MoveBattleCamOver 	( 00000014 )
  4C8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  4DC:  		Set  *Var[1]  00810003 
  4EC:  		ExecWait $Script_80228508 
  4F8:  	EndCaseGroup
  500:  EndSwitch
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================  
  ExecWait $Script_FireBreath2 
  508:  Return
  510:  End
}
  
@ $Script_DisableJump2
{
    0:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
   18:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   2C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   40:  If  *Var[0]  !&  00080000 
   50:  	Call     UseBattleCamPreset 	( 0000003F )
   60:  	Call     SetBattleCamZoom  	( 0000012C )
   70:  	Call     SetBattleCamOffsetZ 	( 00000036 )
   80:  	Call     BattleCamTargetActor ( .Actor:Self )
   90:  	Call     MoveBattleCamOver 	( 00000028 )
   A0:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:  	Call     UseBattleCamPreset 	( 0000003F )
   D0:  	Call     SetBattleCamZoom  	( 000000F0 )
   E0:  	Call     SetBattleCamOffsetZ 	( 00000015 )
   F0:  	Call     BattleCamTargetActor ( .Actor:Self )
  100:  	Call     MoveBattleCamOver 	( 00000028 )
  110:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  148:  Call     SetGoalToTarget 	( .Actor:Self )
  158:  Call     AddGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
  174:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  188:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  1B8:  Wait     0000000F 
  1C4:  Call     SetAnimation 	( .Actor:Self 00000001 00810011 )
  1DC:  Wait     00000003 
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 00810012 )
  200:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  214:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  238:  Switch  *Var[A] 
  244:  	CaseOR  ==  00000006 
  250:  	CaseOR  ==  00000005 
  25C:  		Call     SetGoalToTarget 	( .Actor:Self )
  26C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  288:  		Sub  *Var[0]  0000001E 
  298:  		Set  *Var[1]  00000000 
  2A8:  		Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  2C4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E0:  		Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  300:  		Thread
  308:  			Call     $Function_8021A2C0 ( 00000050 0000000E )
  31C:  			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  338:  		EndThread
  340:  		Sub  *Var[0]  00000023 
  350:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  		Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
  38C:  		Thread
  394:  			Call     $Function_8021A2C0 ( 00000050 0000000E )
  3A8:  			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[2.0] )
  3C4:  		EndThread
  3CC:  		Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  3E4:  		Wait     00000003 
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  408:  		Wait     00000019 
  414:  		Call     UseBattleCamPreset 	( 00000002 )
  424:  		If  *Var[A]  ==  00000005 
  434:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  458:  		EndIf
  460:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  474:  		Set  *Var[1]  00810003 
  484:  		ExecWait $Script_80228508 
  490:  		Return
  498:  	EndCaseGroup
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call     SetGoalToTarget 	( .Actor:Self )
  4C0:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  Thread
  4E8:  	Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  504:  EndThread
  50C:  Wait     00000002 
  518:  Call     SetGoalToTarget 	( .Actor:Self )
  528:  Call     SetAnimation 	( .Actor:Self 00000001 00810013 )
  540:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[1] )
  558:  If  *Var[1]  &  00080000 
  568:  	Set  *Var[0]  0000001A 
  578:  Else
  580:  	Set  *Var[0]  0000000D 
  590:  EndIf
  598:  Call     GetStatusFlags ( .Actor:Self *Var[F] )
  5AC:  If  *Var[F]  !&  00080000 
  5BC:  	Call     80269EAC ( 00000018 )
  5CC:  EndIf
  5D4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 *Var[0] 00000020 )
  5FC:  Set  *Var[0]  FFFFFFFF 
  60C:  Call     GetBattleFlags ( *Var[1] )
  61C:  If  *Var[1]  !&  80000000 
  62C:  	Call     GetStatusFlags ( .Actor:Player *Var[1] )
  640:  	If  *Var[1]  !&  40100000 
  650:  		Call     GetStatusFlags ( .Actor:Self *Var[1] )
  664:  		If  *Var[1]  !&  00080000 
  674:  			Call     $Function_8021B570 ( *Var[0] )
  684:  		EndIf
  68C:  	EndIf
  694:  EndIf
  69C:  If  *Var[0]  !=  FFFFFFFF 
  6AC:  	Call     LandJump ( FFFFFF81 )
  6BC:  	Call     $Function_8021A2C0 ( 00000050 0000000E )
  6D0:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  6E4:  	Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  6FC:  	Exec     $Script_80229EEC 
  708:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  724:  	Add  *Var[0]  00000034 
  734:  	Set  *Var[1]  00000000 
  744:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  760:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  780:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  794:  	Thread
  79C:  		Call     $Function_8021A2C0 ( 00000050 0000000E )
  7B0:  		Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  7CC:  	EndThread
  7D4:  	Add  *Var[0]  0000001E 
  7E4:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  800:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  820:  	Thread
  828:  		Call     $Function_8021A2C0 ( 00000050 0000000E )
  83C:  		Call     ShakeCam    	( 00000001 00000000 00000003 *Fixed[2.0] )
  858:  	EndThread
  860:  	Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  878:  	Wait     00000003 
  884:  	Label    00000000 
  890:  	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
  8A8:  	If  *Var[0]  !=  00000000 
  8B8:  		Wait     00000001 
  8C4:  		Goto     00000000 
  8D0:  	EndIf
  8D8:  	Wait     00000008 
  8E4:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  8F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  910:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  928:  	Call     $Function_8021B314 ( *Var[0] *Var[1] *Var[2] *Var[3] )
  944:  	Add  *Var[1]  00000026 
  954:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  968:  	Call     SetGoalPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  984:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  99C:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  9B4:  	Wait     00000008 
  9C0:  	Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  9F0:  	Wait     00000002 
  9FC:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  A14:  	Call     $Function_8021B314 ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A30:  	Call     SetActorVar 	( .Actor:Self 00000009 00000002 )
  A48:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  AE4:  	Wait     00000004 
  AF0:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  B08:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  B20:  	Wait     00000002 
  B2C:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  BC8:  	Wait     00000004 
  BD4:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  BEC:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  C04:  	Wait     00000002 
  C10:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  CAC:  	Wait     00000014 
  CB8:  	Call     SetAnimation 	( .Actor:Self 00000001 00810007 )
  CD0:  	Wait     00000014 
  CDC:  	Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:  	Call     GetBattleFlags ( *Var[1] )
  D0C:  	If  *Var[1]  !&  80000000 
  D1C:  		Call     GetStatusFlags ( .Actor:Player *Var[1] )
  D30:  		If  *Var[1]  !&  00100000 
  D40:  			Call     GetStatusFlags ( .Actor:Self *Var[1] )
  D54:  			If  *Var[1]  !&  00080000 
  D64:  				Call     LandJump ( FFFFFF81 )
  D74:  			EndIf
  D7C:  		EndIf
  D84:  	EndIf
  D8C:  	Call     $Function_8021A2C0 ( 00000050 0000000E )
  DA0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DBC:  	Add  *Var[0]  00000028 
  DCC:  	Set  *Var[1]  00000000 
  DDC:  	Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  DF8:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E14:  	Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  E34:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  E48:  	Thread
  E50:  		Call     $Function_8021A2C0 ( 00000050 0000000E )
  E64:  		Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  E80:  	EndThread
  E88:  	Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  EA0:  	Wait     00000003 
  EAC:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  EC4:  	Wait     00000014 
  ED0:  EndIf
  ED8:  If  *Var[F]  ==  0000000A 
  EE8:  	Return
  EF0:  EndIf
  EF8:  Call     UseBattleCamPreset 	( 00000002 )
  F08:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  F1C:  Set  *Var[1]  00810003 
  F2C:  ExecWait $Script_80228508 
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================  
  ExecWait $Script_FireBreath2 
  F38:  Return
  F40:  End 
}
  
@ $Script_HealSelf2
{
[4E4]	Call	HealActor	( .Actor:Self 40` 00000000 ) 
}
 
@  $Script_80228678
{
    0:  Call     $Function_8021A6BC ( )
    C:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   20:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   3C:  If  *Var[3]  !&  00080000 
   4C:  	Add  *Var[0]  00000016 
   5C:  	Add  *Var[1]  00000087 
   6C:  	Thread
   74:  		Call     PlaySoundAtActor 	( .Actor:Self 00002123 )
   88:  		Add  *Var[2]  0000000A 
   98:  		Call     $Function_8021A804 ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.07519531] )
   B8:  	EndThread
   C0:  Else
   C8:  	Add  *Var[0]  00000009 
   D8:  	Add  *Var[1]  00000036 
   E8:  	Thread
   F0:  		Call     PlaySoundAtActor 	( .Actor:Self 00002123 )
  104:  		Add  *Var[2]  0000000A 
  114:  		Call     $Function_8021A804 ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.030273438] )
  134:  	EndThread
  13C:  EndIf
  144:  Wait     00000041 
  150:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  16C:  If  *Var[3]  !&  00080000 
  17C:  	Add  *Var[0]  00000016 
  18C:  	Sub  *Var[2]  00000003 
  19C:  	Call     PlayEffect  	( ~FX:LightRays:SharpA *Var[0] 00000087 *Var[2] *Fixed[1.5] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.0] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Sub  *Var[2]  00000003 
  234:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.5] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:  	Add  *Var[0]  00000009 
  290:  	Sub  *Var[2]  00000003 
  2A0:  	Call     PlayEffect  	( ~FX:LightRays:SharpA *Var[0] 00000036 *Var[2] *Fixed[0.60058594] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.40039062] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:  	Sub  *Var[2]  00000003 
  338:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.60058594] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call     PlaySoundAtActor 	( .Actor:Self 00002121 )
  398:  Wait     0000001E 
  3A4:  Call     RemoveEffect 	( *Var[F] )
  3B4:  Call     RemoveEffect 	( *Var[E] )
  3C4:  Call     RemoveEffect 	( *Var[D] )
  3D4:  Call     SetPartEventBits 	( .Actor:Self 00000001 00080000 .True )
  3F0:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_802275C0 )
  424:  Call     SetStatusTable ( .Actor:Self $StatusTable_80227678 )
  438:  Call     $Function_8021A7D4 ( )
  444:  Wait     00000003 
  450:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  464:  If  *Var[3]  !&  00080000 
  474:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  490:  	Add  *Var[1]  0000003C 
  4A0:  	Add  *Var[2]  0000000C 
  4B0:  	Call     PlayEffect  	( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 00000069 00000078 00000025 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:  	Add  *Var[1]  00000018 
  528:  	Add  *Var[2]  0000000C 
  538:  	Call     PlayEffect  	( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 0000002A 00000030 0000000F 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call     PlaySoundAtActor 	( .Actor:Self 00002125 )
  598:  Thread
  5A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5BC:  	Call     $Function_8021ABD8 ( *Var[0] *Var[1] *Var[2] *Fixed[1.2001953] )
  5D8:  EndThread
  5E0:  Wait     0000004B 
  5EC:  Thread
  5F4:  	Call     $Function_8021A754 ( )
  600:  EndThread
  608:  Call     SetAnimation 	( .Actor:Self 00000001 00810008 )
  620:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  634:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  650:  If  *Var[3]  !&  00080000 
  660:  	Add  *Var[1]  0000003C 
  670:  Else
  678:  	Add  *Var[1]  00000018 
  688:  EndIf
  690:  Call     PlayEffect  	( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] *Fixed[1.5] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call     PlaySoundAtActor 	( .Actor:Self 00002124 )
  6E8:  Call     UseBattleCamPreset 	( 00000002 )
  6F8:  Call     MoveBattleCamOver 	( 00000027 )
  708:  Wait     0000001E
  % =========================================================
  % If HP is half or lower, attack immediately after buff
  % =========================================================
    Call     GetActorHP  	( .Actor:Self *Var[9] )
	 If *Var[9] <= 50`
			Call     RandInt     	( 00000001 *Var[8] )
			If  *Var[8]  == 00000000
			ExecWait $Script_DisableJump2
			Else
			ExecWait $Script_ClawSwipe2
			EndIf
	 EndIf  
  714:  Return
  71C:  End
}
 
@ $Script_Shockwave2
{
[73C]	Set      *Var[1] 00000002
[754]	Set      *Var[1] 00000002
[860]	Set      *Var[1] 00000002
[878]	Set      *Var[1] 00000002
%Mario
[8FC]  	Set  *Var[1] 0000000A 
[914]  	Set  *Var[1] 0000000A
}
 
@ $Script_Thunderbolt2
{
[5E0]  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000020 00000000 80010264 *Var[0] 00000020 ) %added paralyze proc, RIP
[620]  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000020 00000000 80010164 *Var[0] 00000020 ) %but its only one turn without star boost 
}

@ $Script_FireBreath2
{
  [664]  	Set  *Var[0]  0000001E %you probably wont survive Star Boosted Fire Breath - 30dmg
  [67C]  	Set  *Var[0]  0000000F %behemoth levels of damage - 15dmg 
}
 
% =====================================================
% Bowser III - Same as II, its just after the cutscene
% =====================================================
   
@ $Bowser3
{
[MaxHP] 99`b
[PowerBounce]  3`b 
}

@ $DefenseTable_8022D4E4
{
.Element:Normal 00000003
.Element:End
}

@ $Script_80230A2C
{
    0:  Call     RandInt     	( 00000050 *Var[0] )
   14:  If  *Var[0]  <  00000014 
   24:  	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
   3C:  	If  *Var[0]  >=  00000002 
   4C:  		ExecWait $Script_DisableJump3 
   58:  		Return
   60:  	EndIf
   68:  EndIf
   70:  Call     RandInt     	( 0000003C *Var[0] )
   84:  If  *Var[0]  <  00000014 
   94:  	Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
   AC:  	If  *Var[0]  >=  00000002 
   BC:  		ExecWait $Script_ClawSwipe3 
   C8:  		Return
   D0:  	EndIf
   D8:  EndIf
   E0:  ExecWait $Script_DisableJump3 
   EC:  Return
   F4:  End
}

@ $Script_HealSelf3
{
[4E4]	Call	HealActor	( .Actor:Self 40` 00000000 )
}

@ $Script_Shockwave3
{
[73C]	Set      *Var[1] 00000002
[754]	Set      *Var[1] 00000002
[860]	Set      *Var[1] 00000002
[878]	Set      *Var[1] 00000002
%Mario
[8FC]  	Set  *Var[1] 0000000A 
[914]  	Set  *Var[1] 0000000A
}

@ $Script_8022F4A4
{
    0:  Call     $Function_8021C004 ( )
    C:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   20:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   3C:  If  *Var[3]  !&  00080000 
   4C:  	Add  *Var[0]  00000016 
   5C:  	Add  *Var[1]  00000087 
   6C:  	Thread
   74:  		Call     PlaySoundAtActor 	( .Actor:Self 00002123 )
   88:  		Add  *Var[2]  0000000A 
   98:  		Call     $Function_8021C14C ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.07519531] )
   B8:  	EndThread
   C0:  Else
   C8:  	Add  *Var[0]  00000009 
   D8:  	Add  *Var[1]  00000036 
   E8:  	Thread
   F0:  		Call     PlaySoundAtActor 	( .Actor:Self 00002123 )
  104:  		Add  *Var[2]  0000000A 
  114:  		Call     $Function_8021C14C ( *Var[0] *Var[1] *Var[2] *Fixed[2.5] *Fixed[0.030273438] )
  134:  	EndThread
  13C:  EndIf
  144:  Wait     00000041 
  150:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  16C:  If  *Var[3]  !&  00080000 
  17C:  	Add  *Var[0]  00000016 
  18C:  	Sub  *Var[2]  00000003 
  19C:  	Call     PlayEffect  	( ~FX:LightRays:SharpA *Var[0] 00000087 *Var[2] *Fixed[1.5] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.0] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Sub  *Var[2]  00000003 
  234:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000087 *Var[2] *Fixed[1.5] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:  	Add  *Var[0]  00000009 
  290:  	Sub  *Var[2]  00000003 
  2A0:  	Call     PlayEffect  	( ~FX:LightRays:SharpA *Var[0] 00000036 *Var[2] *Fixed[0.60058594] *Var[F] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.40039062] *Var[E] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:  	Sub  *Var[2]  00000003 
  338:  	Call     PlayEffect  	( 0000003C 00000002 *Var[0] 00000036 *Var[2] *Fixed[0.60058594] *Var[D] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call     PlaySoundAtActor 	( .Actor:Self 00002121 )
  398:  Wait     0000001E 
  3A4:  Call     RemoveEffect 	( *Var[F] )
  3B4:  Call     RemoveEffect 	( *Var[E] )
  3C4:  Call     RemoveEffect 	( *Var[D] )
  3D4:  Call     SetPartEventBits 	( .Actor:Self 00000001 00080000 .True )
  3F0:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022D4F0 )
  424:  Call     SetStatusTable ( .Actor:Self $StatusTable_8022D5A8 )
  438:  Call     $Function_8021C11C ( )
  444:  Wait     00000003 
  450:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  464:  If  *Var[3]  !&  00080000 
  474:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  490:  	Add  *Var[1]  0000003C 
  4A0:  	Add  *Var[2]  0000000C 
  4B0:  	Call     PlayEffect  	( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 00000069 00000078 00000025 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:  	Add  *Var[1]  00000018 
  528:  	Add  *Var[2]  0000000C 
  538:  	Call     PlayEffect  	( ~FX:RainbowShimmer *Var[0] *Var[1] *Var[2] 0000002A 00000030 0000000F 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call     PlaySoundAtActor 	( .Actor:Self 00002125 )
  598:  Thread
  5A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5BC:  	Call     $Function_8021C520 ( *Var[0] *Var[1] *Var[2] *Fixed[1.2001953] )
  5D8:  EndThread
  5E0:  Wait     0000004B 
  5EC:  Thread
  5F4:  	Call     $Function_8021C09C ( )
  600:  EndThread
  608:  Call     SetAnimation 	( .Actor:Self 00000001 00810008 )
  620:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
  634:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  650:  If  *Var[3]  !&  00080000 
  660:  	Add  *Var[1]  0000003C 
  670:  Else
  678:  	Add  *Var[1]  00000018 
  688:  EndIf
  690:  Call     PlayEffect  	( ~FX:EnergyWaveOut:Grey *Var[0] *Var[1] *Var[2] *Fixed[1.5] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call     PlaySoundAtActor 	( .Actor:Self 00002124 )
  6E8:  Call     UseBattleCamPreset 	( 00000002 )
  6F8:  Call     MoveBattleCamOver 	( 00000027 )
  708:  Wait     0000001E 
  % =========================================================
  % If HP is half or lower, attack immediately after buff
  % =========================================================
    Call     GetActorHP  	( .Actor:Self *Var[9] )
	 If *Var[9] <= 50`
			Call     RandInt     	( 00000001 *Var[8] )
			If  *Var[8]  == 00000000
			ExecWait $Script_DisableJump3
			Else
			ExecWait $Script_ClawSwipe3
			EndIf
	 EndIf 
  714:  Return
  71C:  End
}
  
@ $Script_ClawSwipe3
{
	ExecWait $AntiZaptap
    0:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
   18:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   2C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   40:  If  *Var[0]  !&  00080000 
   50:  	Call     UseBattleCamPreset 	( 0000003F )
   60:  	Call     SetBattleCamZoom  	( 000000C8 )
   70:  	Call     BattleCamTargetActor ( .Actor:Self )
   80:  	Call     MoveBattleCamOver 	( 00000028 )
   90:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call     UseBattleCamPreset 	( 0000003F )
   C0:  	Call     SetBattleCamZoom  	( 000000A0 )
   D0:  	Call     SetBattleCamOffsetZ 	( 00000005 )
   E0:  	Call     BattleCamTargetActor ( .Actor:Self )
   F0:  	Call     MoveBattleCamOver 	( 00000028 )
  100:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  138:  Call     SetGoalToTarget 	( .Actor:Self )
  148:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  15C:  If  *Var[0]  !&  00080000 
  16C:  	Call     AddGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
  188:  Else
  190:  	Call     AddGoalPos 	( .Actor:Self 00000018 00000000 00000000 )
  1AC:  EndIf
  1B4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  1C8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  		Call     GetActorVar 	( .Actor:Self 0000000C *Var[9] )
		Loop 3
		Add *Var[9] 1`
  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  		Wait 00000010
  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  		Wait 00000015
  1E0:  Call     SetAnimation 	( .Actor:Self 00000001 00810009 )
  1F8:  Wait     00000019 
  204:  Call     SetAnimation 	( .Actor:Self 00000001 00810015 )
  21C:  Call     PlaySoundAtActor 	( .Actor:Self 0000035E )
  230:  Wait     00000003
		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  23C:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  260:  Switch  *Var[A] 
  26C:  	CaseOR  ==  00000006 
  278:  	CaseOR  ==  00000005 
  284:  		Wait     00000014 
  290:  		Call     UseBattleCamPreset 	( 00000002 )
  2A0:  		Call     MoveBattleCamOver 	( 00000014 )
  2B0:  		ExecWait $Script_80231CA8 
  2BC:  		If  *Var[A]  ==  00000005 
  2CC:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2F0:  			Wait     0000001E 
  2FC:  		Else
  304:  			Wait     0000001E 
  310:  		EndIf
				If *Var[9] == 3`
  318:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  32C:  			Set  *Var[1]  00810003 
  33C:  			ExecWait $Script_80222CD8 
					Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
				Else
  348:  			Goto 00000004
				EndIf
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait     00000002 
  374:  Call     SetGoalToTarget 	( .Actor:Self )
  384:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[0] )
   Call     GetStatusFlags   ( .Actor:Player *Var[B] )
        If *Var[B] & 04000000
          Goto 00000006
        EndIf
  39C:  If  *Var[0]  &  00080000 
  3AC:  	Set  *Var[0]  0000000E 
  3BC:  	Call     80269EAC ( 0000000C )
  3CC:  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 80020564 *Var[0] 00000020 )
  3F4:  Else
  3FC:  	Set  *Var[0]  00000007 
  40C:  	Call     80269EAC ( 0000000C )
  41C:  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 80020564 *Var[0] 00000020 )
  444:  EndIf
    Label 00000004
	 Call     GetPlayerHP 	( *Var[8] ) % If player's dead, have mercy
		If       *Var[8] <=  00000000 
		Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
		Goto 00000005
		EndIf
	Label 00000006
  EndLoop
  Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
  Label 00000005
  44C:  Switch  *Var[F] 
  458:  	CaseOR  ==  00000000 
  464:  	CaseOR  ==  00000002 
  470:  	CaseOR  ==  0000000A 
  47C:  		Wait     0000001E 
  488:  		If  *Var[F]  ==  0000000A 
  498:  			Return
  4A0:  		EndIf
  4A8:  		Call     UseBattleCamPreset 	( 00000002 )
  4B8:  		Call     MoveBattleCamOver 	( 00000014 )
  4C8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  4DC:  		Set  *Var[1]  00810003 
  4EC:  		ExecWait $Script_8022F334 
  4F8:  	EndCaseGroup
  500:  EndSwitch
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================  
  	Call		GetStatusFlags	( .Actor:Player *Var[0] )
	If  *Var[0] &  00002000
		Wait 00000001 % could have just nothing here, but it looks better with something there imo
	Else
		ExecWait $Script_FireBreath3 
	EndIf 
  508:  Return
  510:  End
}

@ $Script_FireBreath3
{
  [664]  	Set  *Var[0]  0000001E %you probably wont survive Star Boosted Fire Breath - 30dmg
  [67C]  	Set  *Var[0]  0000000F %behemoth levels of damage - 15dmg
}

@ $Script_DisableJump3
{
	ExecWait $AntiZaptap
    0:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
   18:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   2C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   40:  If  *Var[0]  !&  00080000 
   50:  	Call     UseBattleCamPreset 	( 0000003F )
   60:  	Call     SetBattleCamZoom  	( 0000012C )
   70:  	Call     SetBattleCamOffsetZ 	( 00000036 )
   80:  	Call     BattleCamTargetActor ( .Actor:Self )
   90:  	Call     MoveBattleCamOver 	( 00000028 )
   A0:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:  	Call     UseBattleCamPreset 	( 0000003F )
   D0:  	Call     SetBattleCamZoom  	( 000000F0 )
   E0:  	Call     SetBattleCamOffsetZ 	( 00000015 )
   F0:  	Call     BattleCamTargetActor ( .Actor:Self )
  100:  	Call     MoveBattleCamOver 	( 00000028 )
  110:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  148:  Call     SetGoalToTarget 	( .Actor:Self )
  158:  Call     AddGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
  174:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  188:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  1B8:  Wait     0000000F 
  1C4:  Call     SetAnimation 	( .Actor:Self 00000001 00810011 )
  1DC:  Wait     00000003 
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 00810012 )
  200:  Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.2001953] )
  214:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  238:  Switch  *Var[A] 
  244:  	CaseOR  ==  00000006 
  250:  	CaseOR  ==  00000005 
  25C:  		Call     SetGoalToTarget 	( .Actor:Self )
  26C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  288:  		Sub  *Var[0]  0000001E 
  298:  		Set  *Var[1]  00000000 
  2A8:  		Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  2C4:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E0:  		Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  300:  		Thread
  308:  			Call     $Function_8021B950 ( 00000050 0000000E )
  31C:  			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  338:  		EndThread
  340:  		Sub  *Var[0]  00000023 
  350:  		Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  		Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
  38C:  		Thread
  394:  			Call     $Function_8021B950 ( 00000050 0000000E )
  3A8:  			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[2.0] )
  3C4:  		EndThread
  3CC:  		Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  3E4:  		Wait     00000003 
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  408:  		Wait     00000019 
  414:  		Call     UseBattleCamPreset 	( 00000002 )
  424:  		If  *Var[A]  ==  00000005 
  434:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  458:  		EndIf
  460:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  474:  		Set  *Var[1]  00810003 
  484:  		ExecWait $Script_8022F334 
  490:  		Return
  498:  	EndCaseGroup
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call     SetGoalToTarget 	( .Actor:Self )
  4C0:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  Thread
  4E8:  	Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  504:  EndThread
  50C:  Wait     00000002 
  518:  Call     SetGoalToTarget 	( .Actor:Self )
  528:  Call     SetAnimation 	( .Actor:Self 00000001 00810013 )
  540:  Call     GetPartEventFlags 	( .Actor:Self 00000001 *Var[1] )
  558:  If  *Var[1]  &  00080000 
  568:  	Set  *Var[0]  0000001A 
  578:  Else
  580:  	Set  *Var[0]  0000000D 
  590:  EndIf
  598:  Call     GetStatusFlags ( .Actor:Self *Var[F] )
  5AC:  If  *Var[F]  !&  00080000 
  5BC:  	Call     80269EAC ( 00000018 )
  5CC:  EndIf
  5D4:  Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 *Var[0] 00000020 )
  5FC:  Set  *Var[0]  FFFFFFFF 
  60C:  Call     GetBattleFlags ( *Var[1] )
  61C:  If  *Var[1]  !&  80000000 
  62C:  	Call     GetStatusFlags ( .Actor:Player *Var[1] )
  640:  	If  *Var[1]  !&  40100000 
  650:  		Call     GetStatusFlags ( .Actor:Self *Var[1] )
  664:  		If  *Var[1]  !&  00080000 
  674:  			Call     $Function_8021CEB8 ( *Var[0] )
  684:  		EndIf
  68C:  	EndIf
  694:  EndIf
  69C:  If  *Var[0]  !=  FFFFFFFF 
  6AC:  	Call     LandJump ( FFFFFF81 )
  6BC:  	Call     $Function_8021B950 ( 00000050 0000000E )
  6D0:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  6E4:  	Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  6FC:  	Exec     $Script_80230B58 
  708:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  724:  	Add  *Var[0]  00000034 
  734:  	Set  *Var[1]  00000000 
  744:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  760:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  780:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  794:  	Thread
  79C:  		Call     $Function_8021B950 ( 00000050 0000000E )
  7B0:  		Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  7CC:  	EndThread
  7D4:  	Add  *Var[0]  0000001E 
  7E4:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  800:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  820:  	Thread
  828:  		Call     $Function_8021B950 ( 00000050 0000000E )
  83C:  		Call     ShakeCam    	( 00000001 00000000 00000003 *Fixed[2.0] )
  858:  	EndThread
  860:  	Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  878:  	Wait     00000003 
  884:  	Label    00000000 
  890:  	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
  8A8:  	If  *Var[0]  !=  00000000 
  8B8:  		Wait     00000001 
  8C4:  		Goto     00000000 
  8D0:  	EndIf
  8D8:  	Wait     00000008 
  8E4:  	Call     SetActorYaw 	( .Actor:Self 00000000 )
  8F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00810003 )
  910:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  928:  	Call     $Function_8021CC5C ( *Var[0] *Var[1] *Var[2] *Var[3] )
  944:  	Add  *Var[1]  00000026 
  954:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  968:  	Call     SetGoalPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  984:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  99C:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  9B4:  	Wait     00000008 
  9C0:  	Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  9F0:  	Wait     00000002 
  9FC:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  A14:  	Call     $Function_8021CC5C ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A30:  	Call     SetActorVar 	( .Actor:Self 00000009 00000002 )
  A48:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  AE4:  	Wait     00000004 
  AF0:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  B08:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  B20:  	Wait     00000002 
  B2C:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  BC8:  	Wait     00000004 
  BD4:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  BEC:  	Call     SetAnimation 	( .Actor:Self 00000001 0081001A )
  C04:  	Wait     00000002 
  C10:  	Call     PlayEffect  	( ~FX:Firework:White *Var[1] 00000000 *Var[3] *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:  	Call     PlayEffect  	( ~FX:Steam:SmallOutward *Var[1] 00000000 *Var[3] *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:  	Call     PlaySoundAtActor 	( .Actor:Self 000020F6 )
  CAC:  	Wait     00000014 
  CB8:  	Call     SetAnimation 	( .Actor:Self 00000001 00810007 )
  CD0:  	Wait     00000014 
  CDC:  	Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:  	Call     GetBattleFlags ( *Var[1] )
  D0C:  	If  *Var[1]  !&  80000000 
  D1C:  		Call     GetStatusFlags ( .Actor:Player *Var[1] )
  D30:  		If  *Var[1]  !&  00100000 
  D40:  			Call     GetStatusFlags ( .Actor:Self *Var[1] )
  D54:  			If  *Var[1]  !&  00080000 
  D64:  				Call     LandJump ( FFFFFF81 )
  D74:  			EndIf
  D7C:  		EndIf
  D84:  	EndIf
  D8C:  	Call     $Function_8021B950 ( 00000050 0000000E )
  DA0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DBC:  	Add  *Var[0]  00000028 
  DCC:  	Set  *Var[1]  00000000 
  DDC:  	Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  DF8:  	Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E14:  	Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  E34:  	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
  E48:  	Thread
  E50:  		Call     $Function_8021B950 ( 00000050 0000000E )
  E64:  		Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[3.0] )
  E80:  	EndThread
  E88:  	Call     SetAnimation 	( .Actor:Self 00000001 00810014 )
  EA0:  	Wait     00000003 
  EAC:  	Call     SetAnimation 	( .Actor:Self 00000001 00810002 )
  EC4:  	Wait     00000014 
  ED0:  EndIf
  ED8:  If  *Var[F]  ==  0000000A 
  EE8:  	Return
  EF0:  EndIf
  EF8:  Call     UseBattleCamPreset 	( 00000002 )
  F08:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  F1C:  Set  *Var[1]  00810003 
  F2C:  ExecWait $Script_8022F334
  % ================================
  % NOW USES FIRE BREATH AFTERWARDS
  % ================================ 
	Call		GetStatusFlags	( .Actor:Player *Var[0] )
	If  *Var[0] &  00002000
		Wait 00000001 % could have just nothing here, but it looks better with something there imo
	Else
		ExecWait $Script_FireBreath3 
	EndIf
  F38:  Return
  F40:  End
}
  
@ $Script_Thunderbolt3
{
  [5E0]  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000020 00000000 80010264 *Var[0] 00000020 ) %see above
  [620]  	Call     EnemyDamageTarget 	( .Actor:Self *Var[F] 10000020 00000000 80010164 *Var[0] 00000020 )
}
  
#new:Script $AntiZaptap
{
	Call		GetStatusFlags	( .Actor:Player *Var[0] )
	If  *Var[0] &  00002000
	Call     GetActorVar 	( .Actor:Self 0000000D *Var[A] )
		Switch *Var[A]
		Case == 00000000
			Call     ActorSpeak  	( $DefenseString .Actor:Self 00000001 00810007 00810007 )
			ExecWait $Script_FireBreath3
			Call     SetActorVar 	( .Actor:Self 0000000D 00000001 )
			Return
		Case == 00000001
			ExecWait $Script_FireBreath3
			Return
		EndSwitch
	EndIf
	Return
	End
}
	
#string $DefenseString
{
[Style Right]
[BR]
Trying to shock me, are you?[BR]
I guess I'll have to switch[BR]
up my tactics![BR]
[Wait][End]
}
  
  %/
  
@ $Script_Init_802216C0 {
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   18:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   30:  Call     SetActorVar 	( .Actor:Self 00000004 00000003 )
   48:  Call     SetActorVar 	( .Actor:Self 00000005 00000003 )
   60:  Call     SetActorVar 	( .Actor:Self 00000009 00000000 )
   78:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   90:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   A8:  Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
   C0:  Call     SetActorVar 	( .Actor:Self 00000007 00000001 )
   D8:  Call     SetActorVar 	( .Actor:Self 0000000E 00000000 )
   D8:  Call     SetActorVar 	( .Actor:Self 0000000C 00000000 ) % multiswing
   F0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222B48 )
  104:  Call     BindIdle    	( .Actor:Self $Script_Idle_80221844 )
  118:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80221B18 )
  12C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80221970 )
  140:  Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 00000064 00000000 00000000 00000000 )
  168:  Exec     $Script_80222E2C 
  174:  Return
  17C:  End
}
  
@ $Script_Init_8022D6A0 {
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   18:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   30:  Call     SetActorVar 	( .Actor:Self 00000004 00000003 )
   48:  Call     SetActorVar 	( .Actor:Self 00000005 00000003 )
   60:  Call     SetActorVar 	( .Actor:Self 00000009 00000000 )
   78:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   90:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   A8:  Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
   C0:  Call     SetActorVar 	( .Actor:Self 00000007 00000003 )
   D8:  Call     SetActorVar 	( .Actor:Self 0000000E 00000000 )
   D8:  Call     SetActorVar 	( .Actor:Self 0000000D 00000000 ) % zaptap thingy
   D8:  Call     SetActorVar 	( .Actor:Self 0000000C 00000000 ) % multiswing
   F0:  Call     SetEnemyHP  	( .Actor:Self *Byte_FinalBowserHP )
  104:  If  *Byte_FinalBowserHP  <  00000001 
  114:  	Call     SetEnemyHP  	( .Actor:Self 00000001 )
  128:  EndIf
  130:  Call     SetActorScale 	( .Actor:Self *Fixed[1.5] *Fixed[1.5] *Fixed[1.0] )
  14C:  Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
  174:  Exec     $Script_8022F488 
  180:  Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000096 00000096 00000000 00000000 )
  1A8:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 0000000A )
  1C4:  Call     SetPartEventBits 	( .Actor:Self 00000001 00080000 .True )
  1E0:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  1FC:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022D4F0 )
  214:  Call     SetStatusTable ( .Actor:Self $StatusTable_8022D5A8 )
  228:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022F2BC )
  23C:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022D93C )
  250:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022DF74 )
  264:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022DAB8 )
  278:  Call     SetBattleFlagBits2 	( 02000000 .True )
  28C:  Return
  294:  End
}
  
@ $Script_Init_80227770 {
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   18:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   30:  Call     SetActorVar 	( .Actor:Self 00000004 00000003 )
   48:  Call     SetActorVar 	( .Actor:Self 00000005 00000003 )
   60:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   78:  Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
   90:  Call     SetActorVar 	( .Actor:Self 00000007 00000003 )
   A8:  Call     SetActorVar 	( .Actor:Self 0000000E 00000000 )
   C0:  Call     SetActorVar 	( .Actor:Self 00000009 00000000 )
   D8:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   D8:  Call     SetActorVar 	( .Actor:Self 0000000D 00000000 ) % zaptap thingy
		Call     SetActorVar 	( .Actor:Self 0000000C 00000000 ) % multiswing
   F0:  Call     SetActorScale 	( .Actor:Self *Fixed[1.5] *Fixed[1.5] *Fixed[1.0] )
  10C:  Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
  134:  Exec     $Script_8022865C 
  140:  Call     ModifyActorDecoration 	( .Actor:Self 00000001 00000000 00000096 00000096 00000000 00000000 )
  168:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 0000000A )
  184:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80228490 )
  198:  Call     BindIdle    	( .Actor:Self $Script_Idle_80227954 )
  1AC:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80227AD0 )
  1C0:  Call     SetBattleFlagBits2 	( 02000400 .True )
  1D4:  Return
  1DC:  End
}
  
@ $StatusTable_8021D340
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

@ $StatusTable_8022151C
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      0`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   0`
.Status:Shrink     0`
.Status:Stop       0`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

