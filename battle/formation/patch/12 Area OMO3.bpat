%% Bonus enemies

@ $Fuzzy
{
% stats
[Index]         Ab 
[Level]         6`b 
[MaxHP]         4`b 
}

@ $Script_TakeTurn_8021FF30
{
  [934]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000002 00000020 )
}
  
% =================
% DELETING CLUBBA
% =================

#delete $Clubba
#delete $PartsTable_8021EC14 
#delete $Script_Init_8021EC60
#delete $Script_Idle_8021ECAC
#delete $StatusTable_8021EB68 
#delete $Script_HandleEvent_8021ECBC
#delete $Script_TakeTurn_8021F1CC
%#delete $DefenseTable_8021F720
%#delete $StatusTable_8021F72C

% ============
% CLUBBA DEAD
% ============

@ $Pokey
{
% stats
[MaxHP]         4`b 
}

% weak to fire
@ $DefenseTable_80222E60
{
.Element:Normal 00000000
.Element:Fire   FFFFFFFE
.Element:End
}

%increased damage
@ $Script_TakeTurn_80224BF8
{
  [90C]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80020300 00000003 00000020 )
}
  
@ $Script_80226170
{
  [6D8]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020300 00000003 00000020 )
}

% ====================================================
% BigLanternGhost
% ====================================================

@ $BigLanternGhost
{
% stats
[Index]        B1b 
[Level]        42`b 
[MaxHP]        40`b
[PowerBounce]  3`b 
}

@ $StatusTable_80218DC8
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      20`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      20`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   20`
.Status:Shrink      0`
.Status:Stop       20`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End
}

% increase damage to player, add shock proc
% @ $Script_8021A3E4
% [518]	Call     EnemyDamageTarget 	( FFFFFF81 *Var[E] 20000000 0000FFFF 80010264 00000005 00000020 )

@ $Script_8021A3E4
{
    0:  Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
   18:  Call     SetActorVar 	( .Actor:Self 0000000C 00000003 )
   30:  Call     UseIdleAnimation 	( .Actor:Self .False )
   44:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   58:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   6C:  Call     UseBattleCamPreset 	( 0000000D )
   7C:  Call     SetBattleCamZoom  	( 000000F0 )
   8C:  Call     BattleCamTargetActor ( .Actor:Self )
   9C:  Call     MoveBattleCamOver 	( 00000014 )
   AC:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   C4:  Call     SetGoalToTarget 	( .Actor:Self )
   D4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   F0:  Add  *Var[0]  00000050 
  100:  Set  *Var[1]  00000000 
  110:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 006D0006 )
  13C:  Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  158:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  170:  Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
  188:  Wait     00000014 
  194:  Call     UseBattleCamPreset 	( 00000005 )
  1A4:  Call     SetBattleCamZoom  	( 0000015E )
  1B4:  Call     SetBattleCamOffsetZ 	( 00000023 )
  1C4:  Call     BattleCamTargetActor ( .Actor:Self )
  1D4:  Call     MoveBattleCamOver 	( 00000008 )
  1E4:  Call     PlaySoundAtActor 	( .Actor:Self 000002EB )
  1F8:  Call     SetAnimation 	( .Actor:Self 00000001 006D000F )
  210:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[5] )
  228:  Call     SetActorVar 	( .Actor:Self 00000000 0000000B )
  240:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  258:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  270:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[2] )
  288:  Add  *Var[1]  0000000A 
  298:  Add  *Var[2]  00000002 
  2A8:  Thread
  2B0:  	Wait     00000001 
  2BC:  	Call     PlayEffect  	( ~FX:LightRays:SharpA *Var[0] *Var[1] *Var[2] *Fixed[1.0] *Var[B] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  300:  	Wait     0000001E 
  30C:  	Call     RemoveEffect 	( *Var[B] )
  31C:  EndThread
  324:  Thread
  32C:  	Wait     00000001 
  338:  	Call     PlayEffect  	( 0000004F 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndThread
  384:  Wait     00000005 
  390:  Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  3B4:  Switch  *Var[A] 
  3C0:  	CaseOR  ==  .HitResult:Miss % 6
  3CC:  	CaseOR  ==  .HitResult:Lucky % 5
  3D8:  		If  *Var[A]  ==  00000005 
  3E8:  			Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  40C:  		EndIf
  414:  		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  428:  		Call     EnemyTestTarget ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  44C:  		Switch  *Var[A] 
  458:  			Case  ==  .HitResult:Miss % 6
  464:  			Default
  46C:  				Call     ActorExists 	( .Actor:Partner *Var[0] )
  480:  				If  *Var[0]  ==  00000001 
  490:  					Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  4A4:  					Call     SetGoalToTarget 	( .Actor:Self )
  4B4:  					Call     EnemyDamageTarget 	( .Actor:Self *Var[D] 00000000 0000FFFF 00000000 00000002 00000020 )
  4DC:  				EndIf
  4E4:  		EndSwitch
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait     00000002 
  508:  		Call     SetGoalToTarget 	( .Actor:Self )
  				Call     GetStatusFlags ( .Actor:Player *Var[0] ) % check for stun
  				If  *Var[0]  &  00010000 % stunned!				
  518:  			Call     EnemyDamageTarget 	( .Actor:Self *Var[E] 20000000 0000FFFF 00000000 00000004 00000020 )
  				Else
  					Call     EnemyDamageTarget 	( .Actor:Self *Var[E] 20000000 0000FFFF 80010264 00000004 00000020 )
  				EndIf
  540:  		Wait     00000002 
  54C:  		Call     ActorExists 	( .Actor:Partner *Var[0] )
  560:  		If  *Var[0]  ==  00000001 
  					Call     GetStatusFlags ( .Actor:Partner *Var[0] ) % prevent partner stunlock
   					If  *Var[0]  !&  01000000
  570:  				Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  584:  				Call     SetGoalToTarget 	( .Actor:Self )
  594:  				Call     EnemyDamageTarget 	( .Actor:Self *Var[D] 20000000 0000FFFF 00000000 00000002 00000020 )
 					EndIf
  5BC:  		EndIf
  5C4:  EndSwitch
  5CC:  Wait     00000028 
  5D8:  Call     SetActorVar 	( .Actor:Self 00000000 *Var[5] )
  5F0:  Thread
  5F8:  	Call     GetActorVar 	( .Actor:Self 0000000D *Var[0] )
  610:  	Wait     0000000A 
  61C:  	Switch  *Var[0] 
  628:  		Case  ==  00000000 
  634:  			Call     PlaySoundAtActor 	( .Actor:Self 000003AA )
  648:  		Case  ==  00000001 
  654:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A9 )
  668:  		Case  ==  00000002 
  674:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A8 )
  688:  		Case  ==  00000003 
  694:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A7 )
  6A8:  	EndSwitch
  6B0:  EndThread
  6B8:  Call     SetAnimation 	( .Actor:Self 00000001 006D0014 )
  6D0:  Wait     0000003C 
  6DC:  Call     UseBattleCamPreset 	( 00000002 )
  6EC:  ExecWait $Script_8021B0F8 
  6F8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  70C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  720:  Return
  728:  End
}


% moar damage
@  $Script_80219C00
{
[53C]	Call     EnemyDamageTarget 	( FFFFFF81 *Var[0] 00000000 00000000 00000000 00000005 00000020 )
}

@ $Script_8021B0F8
{
  SetConst  *Var[0]  00000001 
  SetConst  *Var[1]  006D0007 
    ExecWait DoReturnHome 
    Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
    Call     GetActorHP  	( .Actor:Self *Var[0] )
  		If  *Var[0]  <  0000001F
			If *Var[8] == 00000000
				Set *Var[8] 00000001
				ExecWait $Script_8021A3E4
			Else
				Set *Var[8] 00000000
			EndIf
		EndIf	
    Return
    End
}

% ====================================================
% HammerBros
% ====================================================	

@ $HammerBros
{
[MaxHP]	12`b
[Item]         30`b 
[AirLift]      0`b
[Hurricane]    0`b
}

@ $DefenseTable_80221028
{
.Element:Normal 00000001
.Element:End
}

@ $StatusTable_80218DC8
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      40`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      55`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   70`
.Status:Shrink     20`
.Status:Stop       70`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

@ $Script_802218B4 %Main attack
{
[6D8]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 800804332 00000008 00000020 ) %may god have mercy if you picked this
}

@ $Script_80222570 %Multi-attack
{
[698]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000010 )
[6D8]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000040 )
[718]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080264 00000004 00000040 )
[770]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000040 )
[7B0]  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080464 00000006 00000020 ) %25 damage if you dont block, no def badges. however with def+, damage dodgex2,
																									 % and d-up/p-down on a 5x block with water block, it does 1. sooooooooo...
%=====================================================
%Koopatrol
}

@ $Koopatrol
{
% stats
[Level]        25`b
[MaxHP]         10`b 
[Item]         30`b 
[AirLift]      0`b
[Hurricane]    0`b
}

%@ $Koopatrol_12
% stats
%[Index]        4Cb 
%[Level]        25`b 
%[MaxHP]        15`b
%[Item]         30`b
%[AirLift]      25`b 

@ $StatusTable_80228254
{
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      65`
.Status:Poison     10`
.Status:Frozen      0`
.Status:Dizzy      15`
.Status:Fear    0`
.Status:Static     10`
.Status:Paralyze   25`
.Status:Shrink     33`
.Status:Stop       50`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   -2`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End 
}

@ $Script_80229E34
{
     0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If       *Var[0] ==  .Phase:FirstStrike
   5C:     Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
   74:  Else
   7C:     Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   94:     If       *Var[0] ==  00000001 
   A4:        Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   BC:        Sub      *Var[0] 00000001 
   CC:        If       *Var[0]  >  00000000 
   DC:           Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   F4:           Call     AddActorDecoration ( FFFFFF81 00000001 00000000 00000002 )
  110:           Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
  128:           Wait     0000000F 
  134:           Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  14C:           Call     RemoveActorDecoration ( FFFFFF81 00000001 00000000 )
  164:        Else
  16C:           Call     AddActorDecoration ( FFFFFF81 00000001 00000000 00000002 )
  188:           Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:           Wait     0000000A 
  1AC:           Call     SetAnimationRate 	( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:           Call     RemoveActorDecoration ( FFFFFF81 00000001 00000000 )
  1DC:           Call     SetActorSounds ( FFFFFF81 00000002 00000000 00000000 )
  1F8:           Call     PlaySoundAtActor 	( .Actor:Self 000003E2 )
  20C:           Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
  224:           Set      *Var[0] 00000000 
  234:           Call     SetActorRotationOffset ( FFFFFF81 00000000 0000000C 00000000 )
  250:           Thread
  258:              Loop     00000005 
  264:                 Add      *Var[0] 0000000F 
  274:                 Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  290:                 Wait     00000001 
  29C:              EndLoop
  2A4:           EndThread
  2AC:           Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:           Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E4:           Call     SetActorJumpGravity 	( .Actor:Self *Fixed[3.0] )
  2F8:           Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  318:           Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  32C:           Call     SetActorRotationOffset ( FFFFFF81 00000000 00000000 00000000 )
  348:           Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  364:           Call     SetActorDispOffset ( FFFFFF81 00000000 00000000 00000000 )
  380:           Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  398:           Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  3B0:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
  3C8:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
  3E0:           Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
  3FC:           Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:           Call     SetPartEventBits 	( .Actor:Self 00000001 00000010 .True )
  434:           Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  44C:        EndIf
  /%
  454:        Call     EnableIdleScript 	( .Actor:Self 00000001 )
  468:        Call     UseIdleAnimation 	( .Actor:Self .True )
  47C:        Return
  %/
  484:     EndIf
  48C:     Call     UseBattleCamPreset 	( 0000003F )
  49C:     Call     BattleCamTargetActor ( .Actor:Self )
  4AC:     Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  4C4:     Wait     0000000A 
  4D0:     Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
  4E8:     Wait     0000000A 
  4F4:     Thread
  4FC:        Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:        Add      *Var[1] 00000004 
  528:        Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  56C:        Wait     00000003 
  578:        Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5BC:        Wait     00000002 
  5C8:        Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  60C:     EndThread
  614:     Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  628:     Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
  640:     Wait     0000000A 
  64C:     Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  664:  EndIf
  66C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  680:  Call     SetActorSounds ( FFFFFF81 00000000 00000000 00000000 )
  69C:  Call     EnemyTestTarget ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  6C0:  Switch   *Var[0] 
  6CC:     CaseOR   ==  00000006 
  6D8:     CaseOR   ==  00000005 
  6E4:        Set      *Var[A] *Var[0] 
  6F4:        Call     SetGoalToTarget 	( .Actor:Self )
  704:        Call     AddGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
  720:        Call     SetActorSpeed 	( .Actor:Self *Fixed[22.0] ) % was 16.0
  734:        Call     RunToGoal    	( .Actor:Self 00000000 .False )
  74C:        Call     GetBattlePhase ( *Var[0] )
  75C:        If       *Var[0] ==  .Phase:FirstStrike
  76C:           Call     UseBattleCamPreset 	( 00000005 )
  77C:           Call     SetBattleCamZoom  	( 0000012C )
  78C:           Call     SetBattleCamOffsetZ 	( 00000014 )
  79C:           Call     MoveBattleCamOver 	( 0000000A )
  7AC:           Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  7C4:        EndIf
  7CC:        If       *Var[A] ==  00000005 
  7DC:           Call     EnemyTestTarget ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  800:        EndIf
  808:        Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  820:        Wait     00000008 
  82C:        Call     ResetAllActorSounds ( FFFFFF81 )
  83C:        Call     SetActorYaw 	( .Actor:Self 000000B4 )
  850:        Wait     00000004 
  85C:        Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  874:        Wait     00000001 
  880:        Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  898:        Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8B4:        Add      *Var[1] 00000014 
  8C4:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8E0:        Call     SetActorJumpGravity 	( .Actor:Self *Fixed[2.0] )
  8F4:        Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  914:        Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  92C:        Wait     00000006 
  938:        Sub      *Var[1] 00000014 
  948:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  964:        Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  984:        Call     UseBattleCamPreset 	( 00000002 )
  994:        Call     YieldTurn ( )
  9A0:        Call     SetActorYaw 	( .Actor:Self 000000B4 )
  9B4:        Call     AddActorDecoration ( FFFFFF81 00000001 00000000 00000002 )
  9D0:        Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  9E8:        Call     SetGoalToHome 	( .Actor:Self )
  9F8:        Call     SetActorSpeed 	( .Actor:Self *Fixed[11.0] ) % was 8.0
  A0C:        Call     RunToGoal    	( .Actor:Self 00000000 .False )
  A24:        Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  A3C:        Call     RemoveActorDecoration ( FFFFFF81 00000001 00000000 )
  A54:        Call     SetPartYaw ( FFFFFF81 00000001 00000000 )
  A6C:        Call     SetActorYaw 	( .Actor:Self 00000000 )
  A80:        Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A94:        Call     UseIdleAnimation 	( .Actor:Self .True )
  AA8:        Return
  AB0:     EndCaseGroup
  AB8:  EndSwitch
  AC0:  Call     SetGoalToTarget 	( .Actor:Self )
  AD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[22.0] ) % was 16.0
  AE4:  Call     RunToGoal    	( .Actor:Self 00000000 .False )
  AFC:  Call     ResetAllActorSounds ( FFFFFF81 )
  B0C:  Wait     00000002 
  B18:  Call     EnemyDamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 80010164 00000008 00000020 )
  B40:  Switch   *Var[0] 
  B4C:     CaseOR   ==  00000000 
  B58:     CaseOR   ==  00000002 
  B64:        Call     UseBattleCamPreset 	( 00000002 )
  B74:        Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B90:        Add      *Var[0] 00000028 
  BA0:        Set      *Var[1] 00000000 
  BB0:        Call     SetActorJumpGravity 	( .Actor:Self *Fixed[1.8007812] )
  BC4:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BE0:        Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  C00:        Add      *Var[0] 0000001E 
  C10:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C2C:        Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C4C:        Add      *Var[0] 00000014 
  C5C:        Call     SetGoalPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:        Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  C98:        Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  CB0:        Wait     00000008 
  CBC:        Call     YieldTurn ( )
  CC8:        SetConst *Var[0] 00000001 
  CD8:        SetConst *Var[1] 00590004 
  CE8:        ExecWait 8029BEB8 
  CF4:        Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  D0C:     EndCaseGroup
  D14:  EndSwitch
  D1C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D30:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D44:  Return
  D4C:  End
}
  
@ $Script_8022AB88
{
[660]	Call	SetActorSpeed	( .Actor:Self *Fixed[22.0] ) 
[748]	Call	SetActorSpeed	( .Actor:Self *Fixed[22.0] )
[918]	Call	SetActorSpeed	( .Actor:Self *Fixed[22.0] )
[950]  Call     EnemyDamageTarget 	( .Actor:Self *Var[A] 00000000 0000FFFF 00000000 00000012 00000020 )
}
  
@ $DefenseTable_80228220
{
.Element:Normal 00000004
.Element:Fire   00000003
.Element:End
}

@ $DefenseTable_80228234
{
.Element:Normal 00000001
.Element:Fire   00000003
.Element:End
}

@ $DefenseTable_80228240
{
.Element:Normal 00000004
.Element:Fire   00000003
.Element:End
}

% ====================================================
% Formation Changes
% ====================================================	

%=========================================================================
% UPDATED ANTI GUY FIGHT TO BE AS BROKEN AS POSSIBLE
% 4 NEW ANTI VARIANTS -> MALPRACTICE, COVERT, DANDY GUYS, INFERNO
%=========================================================================

#import 10_AntiGuy.bpat
#import MalpracticeGuy.bpat
#import DandyGuy.bpat
#import CovertGuy.bpat
#import InfernoGuy.bpat

@ $FormationTable
{
$SJIS_8022EE60 00000001 $Formation_00 $Stage_8021B4A0 00000000 
$SJIS_8022EE48 00000001 $Formation_01 $Stage_8021B62C 00000000 
$SJIS_8022EE2C 00000002 $Formation_02 $Stage_8021B62C 00000000 % unused
$SJIS_8022EE10 00000001 $Formation_03 $Stage_8021B62C 00000000 
$SJIS_8022EDF4 00000002 $Formation_04 $Stage_8021B62C 00000000 % unused
$SJIS_8022EDD8 00000004 $Formation_05 $Stage_8021B62C 00000000 
$SJIS_8022EDB8 00000005 $Formation_06 $Stage_8021B62C 00000000 % anti army
$SJIS_8022ED98 00000001 $Formation_07 $Stage_8021B62C 00000000 
$SJIS_8022ED80 00000002 $Formation_08 $Stage_8021B62C 00000000 
$SJIS_8022ED64 00000001 $Formation_09 $Stage_8021B62C 00000000 
$SJIS_8022ED58 00000001 $Formation_0A $Stage_8021B398 00000000 
00000000 00000000 00000000 00000000 00000000 % unused
}

@ $Formation_03
{
$10_AntiGuy 00000001 0000000A 00000000 00000000 00000000 00000000 
}

@ $Formation_07
{
$HammerBros	00000001 0000000A 00000000 00000000 00000000 00000000 
}
 
@ $Formation_08
{
$Pokey 00000001 0000000A 00000000 00000001 00000000 00000000 
$Pokey 00000002 00000009 00000000 00000001 00000000 00000000 
}

@ $Formation_09
{
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
}

@ $Formation_06
{
$10_AntiGuy		00000000 0000000A 00000000 00000000 00000000 00000000 %I updated this formation
$CovertGuy		00000001 00000009 00000000 00000000 00000000 00000000 %This is probably gonna be OP
$InfernoGuy     00000002 00000008 00000000 00000000 00000000 00000000 %250 total HP, 5 enemies to deal with
$DandyGuy		00000003 00000007 00000000 00000000 00000000 00000000 %Im sorry but also not sorry at all. RIP Mario 1985-2019
$MalpracticeGuy 00000007 00000006 00000000 00000000 00000000 00000000 %Blame Sin Biscuit if you dont like it
}
